/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PutLinodeConfigInterfaceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutLinodeConfigInterfaceRequest{}

// PutLinodeConfigInterfaceRequest Linode Configuration Interface Update request object.
type PutLinodeConfigInterfaceRequest struct {
	// An array of IPv4 CIDR VPC Subnet ranges that are routed to this Interface.  - Array items are only allowed for `vpc` type Interfaces. - This must be empty for non-`vpc` type Interfaces.  For requests:  - Addresses in submitted ranges must not already be actively assigned. - Submitting values replaces any existing values. - Submitting an empty array removes any existing values. - Omitting this property results in no change to existing values.
	IpRanges []string `json:"ip_ranges,omitempty"`
	Ipv4 *PostLinodeInstanceRequestAllOfInterfacesInnerIpv4 `json:"ipv4,omitempty"`
	// The primary Interface is configured as the default route to the Linode.  Each Configuration Profile can have up to one `\"primary\": true` Interface at a time.  Must be `false` for `vlan` type Interfaces.  If no Interface is configured as the primary, the first non-`vlan` type Interface in the `interfaces` array is automatically treated as the primary Interface.
	Primary *bool `json:"primary,omitempty"`
}

// NewPutLinodeConfigInterfaceRequest instantiates a new PutLinodeConfigInterfaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutLinodeConfigInterfaceRequest() *PutLinodeConfigInterfaceRequest {
	this := PutLinodeConfigInterfaceRequest{}
	return &this
}

// NewPutLinodeConfigInterfaceRequestWithDefaults instantiates a new PutLinodeConfigInterfaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutLinodeConfigInterfaceRequestWithDefaults() *PutLinodeConfigInterfaceRequest {
	this := PutLinodeConfigInterfaceRequest{}
	return &this
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutLinodeConfigInterfaceRequest) GetIpRanges() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutLinodeConfigInterfaceRequest) GetIpRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.IpRanges) {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *PutLinodeConfigInterfaceRequest) HasIpRanges() bool {
	if o != nil && !IsNil(o.IpRanges) {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []string and assigns it to the IpRanges field.
func (o *PutLinodeConfigInterfaceRequest) SetIpRanges(v []string) {
	o.IpRanges = v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *PutLinodeConfigInterfaceRequest) GetIpv4() PostLinodeInstanceRequestAllOfInterfacesInnerIpv4 {
	if o == nil || IsNil(o.Ipv4) {
		var ret PostLinodeInstanceRequestAllOfInterfacesInnerIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLinodeConfigInterfaceRequest) GetIpv4Ok() (*PostLinodeInstanceRequestAllOfInterfacesInnerIpv4, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *PutLinodeConfigInterfaceRequest) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given PostLinodeInstanceRequestAllOfInterfacesInnerIpv4 and assigns it to the Ipv4 field.
func (o *PutLinodeConfigInterfaceRequest) SetIpv4(v PostLinodeInstanceRequestAllOfInterfacesInnerIpv4) {
	o.Ipv4 = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *PutLinodeConfigInterfaceRequest) GetPrimary() bool {
	if o == nil || IsNil(o.Primary) {
		var ret bool
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLinodeConfigInterfaceRequest) GetPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *PutLinodeConfigInterfaceRequest) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given bool and assigns it to the Primary field.
func (o *PutLinodeConfigInterfaceRequest) SetPrimary(v bool) {
	o.Primary = &v
}

func (o PutLinodeConfigInterfaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutLinodeConfigInterfaceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IpRanges != nil {
		toSerialize["ip_ranges"] = o.IpRanges
	}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	return toSerialize, nil
}

type NullablePutLinodeConfigInterfaceRequest struct {
	value *PutLinodeConfigInterfaceRequest
	isSet bool
}

func (v NullablePutLinodeConfigInterfaceRequest) Get() *PutLinodeConfigInterfaceRequest {
	return v.value
}

func (v *NullablePutLinodeConfigInterfaceRequest) Set(val *PutLinodeConfigInterfaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutLinodeConfigInterfaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutLinodeConfigInterfaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutLinodeConfigInterfaceRequest(val *PutLinodeConfigInterfaceRequest) *NullablePutLinodeConfigInterfaceRequest {
	return &NullablePutLinodeConfigInterfaceRequest{value: val, isSet: true}
}

func (v NullablePutLinodeConfigInterfaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutLinodeConfigInterfaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


