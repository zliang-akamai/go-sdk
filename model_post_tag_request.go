/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostTagRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTagRequest{}

// PostTagRequest struct for PostTagRequest
type PostTagRequest struct {
	// A list of Domain IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Domains, or the Tag will not be created and an error will be returned.
	Domains []int32 `json:"domains,omitempty"`
	// The new Tag.
	Label string `json:"label"`
	// A list of Linode IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Linodes, or the Tag will not be created and an error will be returned.
	Linodes []int32 `json:"linodes,omitempty"`
	// A list of NodeBalancer IDs to apply the new Tag to. You must be allowed to `read_write` all of the requested NodeBalancers, or the Tag will not be created and an error will be returned.
	Nodebalancers []int32 `json:"nodebalancers,omitempty"`
	// A list of Volume IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Volumes, or the Tag will not be created and an error will be returned.
	Volumes []int32 `json:"volumes,omitempty"`
}

type _PostTagRequest PostTagRequest

// NewPostTagRequest instantiates a new PostTagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTagRequest(label string) *PostTagRequest {
	this := PostTagRequest{}
	this.Label = label
	return &this
}

// NewPostTagRequestWithDefaults instantiates a new PostTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTagRequestWithDefaults() *PostTagRequest {
	this := PostTagRequest{}
	return &this
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *PostTagRequest) GetDomains() []int32 {
	if o == nil || IsNil(o.Domains) {
		var ret []int32
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTagRequest) GetDomainsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *PostTagRequest) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []int32 and assigns it to the Domains field.
func (o *PostTagRequest) SetDomains(v []int32) {
	o.Domains = v
}

// GetLabel returns the Label field value
func (o *PostTagRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PostTagRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PostTagRequest) SetLabel(v string) {
	o.Label = v
}

// GetLinodes returns the Linodes field value if set, zero value otherwise.
func (o *PostTagRequest) GetLinodes() []int32 {
	if o == nil || IsNil(o.Linodes) {
		var ret []int32
		return ret
	}
	return o.Linodes
}

// GetLinodesOk returns a tuple with the Linodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTagRequest) GetLinodesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Linodes) {
		return nil, false
	}
	return o.Linodes, true
}

// HasLinodes returns a boolean if a field has been set.
func (o *PostTagRequest) HasLinodes() bool {
	if o != nil && !IsNil(o.Linodes) {
		return true
	}

	return false
}

// SetLinodes gets a reference to the given []int32 and assigns it to the Linodes field.
func (o *PostTagRequest) SetLinodes(v []int32) {
	o.Linodes = v
}

// GetNodebalancers returns the Nodebalancers field value if set, zero value otherwise.
func (o *PostTagRequest) GetNodebalancers() []int32 {
	if o == nil || IsNil(o.Nodebalancers) {
		var ret []int32
		return ret
	}
	return o.Nodebalancers
}

// GetNodebalancersOk returns a tuple with the Nodebalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTagRequest) GetNodebalancersOk() ([]int32, bool) {
	if o == nil || IsNil(o.Nodebalancers) {
		return nil, false
	}
	return o.Nodebalancers, true
}

// HasNodebalancers returns a boolean if a field has been set.
func (o *PostTagRequest) HasNodebalancers() bool {
	if o != nil && !IsNil(o.Nodebalancers) {
		return true
	}

	return false
}

// SetNodebalancers gets a reference to the given []int32 and assigns it to the Nodebalancers field.
func (o *PostTagRequest) SetNodebalancers(v []int32) {
	o.Nodebalancers = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *PostTagRequest) GetVolumes() []int32 {
	if o == nil || IsNil(o.Volumes) {
		var ret []int32
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTagRequest) GetVolumesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *PostTagRequest) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []int32 and assigns it to the Volumes field.
func (o *PostTagRequest) SetVolumes(v []int32) {
	o.Volumes = v
}

func (o PostTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTagRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	toSerialize["label"] = o.Label
	if !IsNil(o.Linodes) {
		toSerialize["linodes"] = o.Linodes
	}
	if !IsNil(o.Nodebalancers) {
		toSerialize["nodebalancers"] = o.Nodebalancers
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	return toSerialize, nil
}

func (o *PostTagRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTagRequest := _PostTagRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTagRequest)

	if err != nil {
		return err
	}

	*o = PostTagRequest(varPostTagRequest)

	return err
}

type NullablePostTagRequest struct {
	value *PostTagRequest
	isSet bool
}

func (v NullablePostTagRequest) Get() *PostTagRequest {
	return v.value
}

func (v *NullablePostTagRequest) Set(val *PostTagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTagRequest(val *PostTagRequest) *NullablePostTagRequest {
	return &NullablePostTagRequest{value: val, isSet: true}
}

func (v NullablePostTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


