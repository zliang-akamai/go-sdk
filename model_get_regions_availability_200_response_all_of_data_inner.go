/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetRegionsAvailability200ResponseAllOfDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRegionsAvailability200ResponseAllOfDataInner{}

// GetRegionsAvailability200ResponseAllOfDataInner Compute instance availability information by [Type](https://techdocs.akamai.com/linode-api/reference/get-linode-types) and [Region](https://techdocs.akamai.com/linode-api/reference/get-regions).
type GetRegionsAvailability200ResponseAllOfDataInner struct {
	// Whether the compute instance type is available in the region.
	Available *bool `json:"available,omitempty"`
	// The compute instance [Type](https://techdocs.akamai.com/linode-api/reference/get-linode-types) ID.
	Plan *string `json:"plan,omitempty"`
	// The [Region](https://techdocs.akamai.com/linode-api/reference/get-regions) ID.
	Region *string `json:"region,omitempty"`
}

// NewGetRegionsAvailability200ResponseAllOfDataInner instantiates a new GetRegionsAvailability200ResponseAllOfDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRegionsAvailability200ResponseAllOfDataInner() *GetRegionsAvailability200ResponseAllOfDataInner {
	this := GetRegionsAvailability200ResponseAllOfDataInner{}
	return &this
}

// NewGetRegionsAvailability200ResponseAllOfDataInnerWithDefaults instantiates a new GetRegionsAvailability200ResponseAllOfDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRegionsAvailability200ResponseAllOfDataInnerWithDefaults() *GetRegionsAvailability200ResponseAllOfDataInner {
	this := GetRegionsAvailability200ResponseAllOfDataInner{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) SetAvailable(v bool) {
	o.Available = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) SetPlan(v string) {
	o.Plan = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetRegionsAvailability200ResponseAllOfDataInner) SetRegion(v string) {
	o.Region = &v
}

func (o GetRegionsAvailability200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRegionsAvailability200ResponseAllOfDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableGetRegionsAvailability200ResponseAllOfDataInner struct {
	value *GetRegionsAvailability200ResponseAllOfDataInner
	isSet bool
}

func (v NullableGetRegionsAvailability200ResponseAllOfDataInner) Get() *GetRegionsAvailability200ResponseAllOfDataInner {
	return v.value
}

func (v *NullableGetRegionsAvailability200ResponseAllOfDataInner) Set(val *GetRegionsAvailability200ResponseAllOfDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRegionsAvailability200ResponseAllOfDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRegionsAvailability200ResponseAllOfDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRegionsAvailability200ResponseAllOfDataInner(val *GetRegionsAvailability200ResponseAllOfDataInner) *NullableGetRegionsAvailability200ResponseAllOfDataInner {
	return &NullableGetRegionsAvailability200ResponseAllOfDataInner{value: val, isSet: true}
}

func (v NullableGetRegionsAvailability200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRegionsAvailability200ResponseAllOfDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


