/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostObjectStorageBucketRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostObjectStorageBucketRequest{}

// PostObjectStorageBucketRequest struct for PostObjectStorageBucketRequest
type PostObjectStorageBucketRequest struct {
	// The Access Control Level of the bucket using a canned ACL string. For more fine-grained control of ACLs, use the S3 API directly.
	Acl *string `json:"acl,omitempty"`
	// If set to `false`, CORS is disabled for all origins in the bucket. For more fine-grained controls of CORS, use the S3 API directly.
	CorsEnabled *bool `json:"cors_enabled,omitempty"`
	// The name for this bucket.  * A bucket name can contain from 3 to 63 alphanumeric characters, dashes (`-`), or dots (`.`). * A bucket name can't end in a dash and you can't use two consecutive dashes. * A bucket name can't start or end in a dot, and you can't use two consecutive dots. As a best practice, only use dots if a certificate you're using with your bucket requires it. (For example, if you're using a custom TLS certificate.) * A bucket name needs to be unique in the `region` where you're creating the bucket. The API only reserves labels for the `region` where active buckets are created and stored. If you want to reserve this bucket's label in another `region`, create a new bucket with the same label in the new `region`.
	Label string `json:"label" validate:"regexp=^(?=.{3,63}$)[a-z0-9]+(?:-[a-z0-9]+)*(?:[.][a-z0-9]+(?:-[a-z0-9]+)*)*$"`
	// The `id` assigned to the data center ([region](https://techdocs.akamai.com/linode-api/reference/get-regions)) where this Object Storage bucket should be created.  > ðŸ“˜ > > This supports legacy `clusterId` values that represented a specific region. For example, `us-east-1` is the legacy reference for the `us-east` region.
	Region *string `json:"region,omitempty"`
}

type _PostObjectStorageBucketRequest PostObjectStorageBucketRequest

// NewPostObjectStorageBucketRequest instantiates a new PostObjectStorageBucketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostObjectStorageBucketRequest(label string) *PostObjectStorageBucketRequest {
	this := PostObjectStorageBucketRequest{}
	var acl string = "private"
	this.Acl = &acl
	var corsEnabled bool = true
	this.CorsEnabled = &corsEnabled
	this.Label = label
	return &this
}

// NewPostObjectStorageBucketRequestWithDefaults instantiates a new PostObjectStorageBucketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostObjectStorageBucketRequestWithDefaults() *PostObjectStorageBucketRequest {
	this := PostObjectStorageBucketRequest{}
	var acl string = "private"
	this.Acl = &acl
	var corsEnabled bool = true
	this.CorsEnabled = &corsEnabled
	return &this
}

// GetAcl returns the Acl field value if set, zero value otherwise.
func (o *PostObjectStorageBucketRequest) GetAcl() string {
	if o == nil || IsNil(o.Acl) {
		var ret string
		return ret
	}
	return *o.Acl
}

// GetAclOk returns a tuple with the Acl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObjectStorageBucketRequest) GetAclOk() (*string, bool) {
	if o == nil || IsNil(o.Acl) {
		return nil, false
	}
	return o.Acl, true
}

// HasAcl returns a boolean if a field has been set.
func (o *PostObjectStorageBucketRequest) HasAcl() bool {
	if o != nil && !IsNil(o.Acl) {
		return true
	}

	return false
}

// SetAcl gets a reference to the given string and assigns it to the Acl field.
func (o *PostObjectStorageBucketRequest) SetAcl(v string) {
	o.Acl = &v
}

// GetCorsEnabled returns the CorsEnabled field value if set, zero value otherwise.
func (o *PostObjectStorageBucketRequest) GetCorsEnabled() bool {
	if o == nil || IsNil(o.CorsEnabled) {
		var ret bool
		return ret
	}
	return *o.CorsEnabled
}

// GetCorsEnabledOk returns a tuple with the CorsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObjectStorageBucketRequest) GetCorsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CorsEnabled) {
		return nil, false
	}
	return o.CorsEnabled, true
}

// HasCorsEnabled returns a boolean if a field has been set.
func (o *PostObjectStorageBucketRequest) HasCorsEnabled() bool {
	if o != nil && !IsNil(o.CorsEnabled) {
		return true
	}

	return false
}

// SetCorsEnabled gets a reference to the given bool and assigns it to the CorsEnabled field.
func (o *PostObjectStorageBucketRequest) SetCorsEnabled(v bool) {
	o.CorsEnabled = &v
}

// GetLabel returns the Label field value
func (o *PostObjectStorageBucketRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PostObjectStorageBucketRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PostObjectStorageBucketRequest) SetLabel(v string) {
	o.Label = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PostObjectStorageBucketRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostObjectStorageBucketRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PostObjectStorageBucketRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PostObjectStorageBucketRequest) SetRegion(v string) {
	o.Region = &v
}

func (o PostObjectStorageBucketRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostObjectStorageBucketRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acl) {
		toSerialize["acl"] = o.Acl
	}
	if !IsNil(o.CorsEnabled) {
		toSerialize["cors_enabled"] = o.CorsEnabled
	}
	toSerialize["label"] = o.Label
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

func (o *PostObjectStorageBucketRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostObjectStorageBucketRequest := _PostObjectStorageBucketRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostObjectStorageBucketRequest)

	if err != nil {
		return err
	}

	*o = PostObjectStorageBucketRequest(varPostObjectStorageBucketRequest)

	return err
}

type NullablePostObjectStorageBucketRequest struct {
	value *PostObjectStorageBucketRequest
	isSet bool
}

func (v NullablePostObjectStorageBucketRequest) Get() *PostObjectStorageBucketRequest {
	return v.value
}

func (v *NullablePostObjectStorageBucketRequest) Set(val *PostObjectStorageBucketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostObjectStorageBucketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostObjectStorageBucketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostObjectStorageBucketRequest(val *PostObjectStorageBucketRequest) *NullablePostObjectStorageBucketRequest {
	return &NullablePostObjectStorageBucketRequest{value: val, isSet: true}
}

func (v NullablePostObjectStorageBucketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostObjectStorageBucketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


