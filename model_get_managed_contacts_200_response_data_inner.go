/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetManagedContacts200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetManagedContacts200ResponseDataInner{}

// GetManagedContacts200ResponseDataInner Information about someone Linode's special forces may contact in case an issue is detected with a manager service.
type GetManagedContacts200ResponseDataInner struct {
	// The address to email this Contact to alert them of issues.
	Email *string `json:"email,omitempty"`
	// A grouping for this Contact. This is for display purposes only.
	Group NullableString `json:"group,omitempty"`
	// This Contact's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The name of this Contact.
	Name *string `json:"name,omitempty" validate:"regexp=[a-zA-Z0-9-_ ]{2,64}"`
	Phone *GetManagedContacts200ResponseDataInnerPhone `json:"phone,omitempty"`
	// When this Contact was last updated.
	Updated *time.Time `json:"updated,omitempty"`
}

// NewGetManagedContacts200ResponseDataInner instantiates a new GetManagedContacts200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetManagedContacts200ResponseDataInner() *GetManagedContacts200ResponseDataInner {
	this := GetManagedContacts200ResponseDataInner{}
	return &this
}

// NewGetManagedContacts200ResponseDataInnerWithDefaults instantiates a new GetManagedContacts200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetManagedContacts200ResponseDataInnerWithDefaults() *GetManagedContacts200ResponseDataInner {
	this := GetManagedContacts200ResponseDataInner{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetManagedContacts200ResponseDataInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedContacts200ResponseDataInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetManagedContacts200ResponseDataInner) SetEmail(v string) {
	o.Email = &v
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetManagedContacts200ResponseDataInner) GetGroup() string {
	if o == nil || IsNil(o.Group.Get()) {
		var ret string
		return ret
	}
	return *o.Group.Get()
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetManagedContacts200ResponseDataInner) GetGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Group.Get(), o.Group.IsSet()
}

// HasGroup returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasGroup() bool {
	if o != nil && o.Group.IsSet() {
		return true
	}

	return false
}

// SetGroup gets a reference to the given NullableString and assigns it to the Group field.
func (o *GetManagedContacts200ResponseDataInner) SetGroup(v string) {
	o.Group.Set(&v)
}
// SetGroupNil sets the value for Group to be an explicit nil
func (o *GetManagedContacts200ResponseDataInner) SetGroupNil() {
	o.Group.Set(nil)
}

// UnsetGroup ensures that no value is present for Group, not even an explicit nil
func (o *GetManagedContacts200ResponseDataInner) UnsetGroup() {
	o.Group.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetManagedContacts200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedContacts200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetManagedContacts200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetManagedContacts200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedContacts200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetManagedContacts200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *GetManagedContacts200ResponseDataInner) GetPhone() GetManagedContacts200ResponseDataInnerPhone {
	if o == nil || IsNil(o.Phone) {
		var ret GetManagedContacts200ResponseDataInnerPhone
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedContacts200ResponseDataInner) GetPhoneOk() (*GetManagedContacts200ResponseDataInnerPhone, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given GetManagedContacts200ResponseDataInnerPhone and assigns it to the Phone field.
func (o *GetManagedContacts200ResponseDataInner) SetPhone(v GetManagedContacts200ResponseDataInnerPhone) {
	o.Phone = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetManagedContacts200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedContacts200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetManagedContacts200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetManagedContacts200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o GetManagedContacts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetManagedContacts200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if o.Group.IsSet() {
		toSerialize["group"] = o.Group.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableGetManagedContacts200ResponseDataInner struct {
	value *GetManagedContacts200ResponseDataInner
	isSet bool
}

func (v NullableGetManagedContacts200ResponseDataInner) Get() *GetManagedContacts200ResponseDataInner {
	return v.value
}

func (v *NullableGetManagedContacts200ResponseDataInner) Set(val *GetManagedContacts200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetManagedContacts200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetManagedContacts200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetManagedContacts200ResponseDataInner(val *GetManagedContacts200ResponseDataInner) *NullableGetManagedContacts200ResponseDataInner {
	return &NullableGetManagedContacts200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetManagedContacts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetManagedContacts200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


