/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostFirewallsRequestAllOfDevices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFirewallsRequestAllOfDevices{}

// PostFirewallsRequestAllOfDevices Devices to create for this Firewall. When a Device is created, the Firewall is assigned to its associated service. Currently, Devices can be created for Linode compute instances and NodeBalancers.  Additional devices can be assigned after Firewall creation by using the [Create a firewall device](https://techdocs.akamai.com/linode-api/reference/post-firewall-device) operation.
type PostFirewallsRequestAllOfDevices struct {
	// An array of Linode IDs. A Firewall Device is created for each ID.
	Linodes []int32 `json:"linodes,omitempty"`
	// An array containing a NodeBalancer ID. A Firewall Device is created for the ID.  - A NodeBalancer can have only one Firewall assigned to it. - Firewalls only apply to inbound TCP traffic to NodeBalancers.
	Nodebalancers []int32 `json:"nodebalancers,omitempty"`
}

// NewPostFirewallsRequestAllOfDevices instantiates a new PostFirewallsRequestAllOfDevices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFirewallsRequestAllOfDevices() *PostFirewallsRequestAllOfDevices {
	this := PostFirewallsRequestAllOfDevices{}
	return &this
}

// NewPostFirewallsRequestAllOfDevicesWithDefaults instantiates a new PostFirewallsRequestAllOfDevices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFirewallsRequestAllOfDevicesWithDefaults() *PostFirewallsRequestAllOfDevices {
	this := PostFirewallsRequestAllOfDevices{}
	return &this
}

// GetLinodes returns the Linodes field value if set, zero value otherwise.
func (o *PostFirewallsRequestAllOfDevices) GetLinodes() []int32 {
	if o == nil || IsNil(o.Linodes) {
		var ret []int32
		return ret
	}
	return o.Linodes
}

// GetLinodesOk returns a tuple with the Linodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequestAllOfDevices) GetLinodesOk() ([]int32, bool) {
	if o == nil || IsNil(o.Linodes) {
		return nil, false
	}
	return o.Linodes, true
}

// HasLinodes returns a boolean if a field has been set.
func (o *PostFirewallsRequestAllOfDevices) HasLinodes() bool {
	if o != nil && !IsNil(o.Linodes) {
		return true
	}

	return false
}

// SetLinodes gets a reference to the given []int32 and assigns it to the Linodes field.
func (o *PostFirewallsRequestAllOfDevices) SetLinodes(v []int32) {
	o.Linodes = v
}

// GetNodebalancers returns the Nodebalancers field value if set, zero value otherwise.
func (o *PostFirewallsRequestAllOfDevices) GetNodebalancers() []int32 {
	if o == nil || IsNil(o.Nodebalancers) {
		var ret []int32
		return ret
	}
	return o.Nodebalancers
}

// GetNodebalancersOk returns a tuple with the Nodebalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequestAllOfDevices) GetNodebalancersOk() ([]int32, bool) {
	if o == nil || IsNil(o.Nodebalancers) {
		return nil, false
	}
	return o.Nodebalancers, true
}

// HasNodebalancers returns a boolean if a field has been set.
func (o *PostFirewallsRequestAllOfDevices) HasNodebalancers() bool {
	if o != nil && !IsNil(o.Nodebalancers) {
		return true
	}

	return false
}

// SetNodebalancers gets a reference to the given []int32 and assigns it to the Nodebalancers field.
func (o *PostFirewallsRequestAllOfDevices) SetNodebalancers(v []int32) {
	o.Nodebalancers = v
}

func (o PostFirewallsRequestAllOfDevices) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFirewallsRequestAllOfDevices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Linodes) {
		toSerialize["linodes"] = o.Linodes
	}
	if !IsNil(o.Nodebalancers) {
		toSerialize["nodebalancers"] = o.Nodebalancers
	}
	return toSerialize, nil
}

type NullablePostFirewallsRequestAllOfDevices struct {
	value *PostFirewallsRequestAllOfDevices
	isSet bool
}

func (v NullablePostFirewallsRequestAllOfDevices) Get() *PostFirewallsRequestAllOfDevices {
	return v.value
}

func (v *NullablePostFirewallsRequestAllOfDevices) Set(val *PostFirewallsRequestAllOfDevices) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFirewallsRequestAllOfDevices) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFirewallsRequestAllOfDevices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFirewallsRequestAllOfDevices(val *PostFirewallsRequestAllOfDevices) *NullablePostFirewallsRequestAllOfDevices {
	return &NullablePostFirewallsRequestAllOfDevices{value: val, isSet: true}
}

func (v NullablePostFirewallsRequestAllOfDevices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFirewallsRequestAllOfDevices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


