/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeIps200ResponseIpv4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeIps200ResponseIpv4{}

// GetLinodeIps200ResponseIpv4 Information about this Linode's IPv4 addresses.
type GetLinodeIps200ResponseIpv4 struct {
	// A list of private IP Address objects belonging to this Linode.
	Private []GetLinodeIps200ResponseIpv4PrivateInner `json:"private,omitempty"`
	// A list of public IP Address objects belonging to this Linode.
	Public []GetLinodeIps200ResponseIpv4PublicInner `json:"public,omitempty"`
	// A list of reserved IP Address objects belonging to this Linode.
	Reserved []GetLinodeIps200ResponseIpv4PublicInner `json:"reserved,omitempty"`
	// A list of shared IP Address objects assigned to this Linode.
	Shared []GetLinodeIps200ResponseIpv4PublicInner `json:"shared,omitempty"`
	// A list of Virtual Private Cloud (VPC)-specific addresses or ranges for the Linode.
	Vpc []GetLinodeIps200ResponseIpv4VpcInner `json:"vpc,omitempty"`
}

// NewGetLinodeIps200ResponseIpv4 instantiates a new GetLinodeIps200ResponseIpv4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeIps200ResponseIpv4() *GetLinodeIps200ResponseIpv4 {
	this := GetLinodeIps200ResponseIpv4{}
	return &this
}

// NewGetLinodeIps200ResponseIpv4WithDefaults instantiates a new GetLinodeIps200ResponseIpv4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeIps200ResponseIpv4WithDefaults() *GetLinodeIps200ResponseIpv4 {
	this := GetLinodeIps200ResponseIpv4{}
	return &this
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4) GetPrivate() []GetLinodeIps200ResponseIpv4PrivateInner {
	if o == nil || IsNil(o.Private) {
		var ret []GetLinodeIps200ResponseIpv4PrivateInner
		return ret
	}
	return o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4) GetPrivateOk() ([]GetLinodeIps200ResponseIpv4PrivateInner, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given []GetLinodeIps200ResponseIpv4PrivateInner and assigns it to the Private field.
func (o *GetLinodeIps200ResponseIpv4) SetPrivate(v []GetLinodeIps200ResponseIpv4PrivateInner) {
	o.Private = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4) GetPublic() []GetLinodeIps200ResponseIpv4PublicInner {
	if o == nil || IsNil(o.Public) {
		var ret []GetLinodeIps200ResponseIpv4PublicInner
		return ret
	}
	return o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4) GetPublicOk() ([]GetLinodeIps200ResponseIpv4PublicInner, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given []GetLinodeIps200ResponseIpv4PublicInner and assigns it to the Public field.
func (o *GetLinodeIps200ResponseIpv4) SetPublic(v []GetLinodeIps200ResponseIpv4PublicInner) {
	o.Public = v
}

// GetReserved returns the Reserved field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4) GetReserved() []GetLinodeIps200ResponseIpv4PublicInner {
	if o == nil || IsNil(o.Reserved) {
		var ret []GetLinodeIps200ResponseIpv4PublicInner
		return ret
	}
	return o.Reserved
}

// GetReservedOk returns a tuple with the Reserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4) GetReservedOk() ([]GetLinodeIps200ResponseIpv4PublicInner, bool) {
	if o == nil || IsNil(o.Reserved) {
		return nil, false
	}
	return o.Reserved, true
}

// HasReserved returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4) HasReserved() bool {
	if o != nil && !IsNil(o.Reserved) {
		return true
	}

	return false
}

// SetReserved gets a reference to the given []GetLinodeIps200ResponseIpv4PublicInner and assigns it to the Reserved field.
func (o *GetLinodeIps200ResponseIpv4) SetReserved(v []GetLinodeIps200ResponseIpv4PublicInner) {
	o.Reserved = v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4) GetShared() []GetLinodeIps200ResponseIpv4PublicInner {
	if o == nil || IsNil(o.Shared) {
		var ret []GetLinodeIps200ResponseIpv4PublicInner
		return ret
	}
	return o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4) GetSharedOk() ([]GetLinodeIps200ResponseIpv4PublicInner, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given []GetLinodeIps200ResponseIpv4PublicInner and assigns it to the Shared field.
func (o *GetLinodeIps200ResponseIpv4) SetShared(v []GetLinodeIps200ResponseIpv4PublicInner) {
	o.Shared = v
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4) GetVpc() []GetLinodeIps200ResponseIpv4VpcInner {
	if o == nil || IsNil(o.Vpc) {
		var ret []GetLinodeIps200ResponseIpv4VpcInner
		return ret
	}
	return o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4) GetVpcOk() ([]GetLinodeIps200ResponseIpv4VpcInner, bool) {
	if o == nil || IsNil(o.Vpc) {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4) HasVpc() bool {
	if o != nil && !IsNil(o.Vpc) {
		return true
	}

	return false
}

// SetVpc gets a reference to the given []GetLinodeIps200ResponseIpv4VpcInner and assigns it to the Vpc field.
func (o *GetLinodeIps200ResponseIpv4) SetVpc(v []GetLinodeIps200ResponseIpv4VpcInner) {
	o.Vpc = v
}

func (o GetLinodeIps200ResponseIpv4) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeIps200ResponseIpv4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.Reserved) {
		toSerialize["reserved"] = o.Reserved
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Vpc) {
		toSerialize["vpc"] = o.Vpc
	}
	return toSerialize, nil
}

type NullableGetLinodeIps200ResponseIpv4 struct {
	value *GetLinodeIps200ResponseIpv4
	isSet bool
}

func (v NullableGetLinodeIps200ResponseIpv4) Get() *GetLinodeIps200ResponseIpv4 {
	return v.value
}

func (v *NullableGetLinodeIps200ResponseIpv4) Set(val *GetLinodeIps200ResponseIpv4) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeIps200ResponseIpv4) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeIps200ResponseIpv4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeIps200ResponseIpv4(val *GetLinodeIps200ResponseIpv4) *NullableGetLinodeIps200ResponseIpv4 {
	return &NullableGetLinodeIps200ResponseIpv4{value: val, isSet: true}
}

func (v NullableGetLinodeIps200ResponseIpv4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeIps200ResponseIpv4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


