/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetDatabasesEngines200ResponseAllOfDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDatabasesEngines200ResponseAllOfDataInner{}

// GetDatabasesEngines200ResponseAllOfDataInner Managed Database engine object.
type GetDatabasesEngines200ResponseAllOfDataInner struct {
	// The Managed Database engine type.
	Engine *string `json:"engine,omitempty"`
	// The Managed Database engine ID in engine/version format.
	Id *string `json:"id,omitempty"`
	// The total disk size of the database in GB.
	TotalDiskSizeGb *int32 `json:"total_disk_size_gb,omitempty"`
	// The used space of the database in GB.
	UsedDiskSizeGb *int32 `json:"used_disk_size_gb,omitempty"`
	// The Managed Database engine version.
	Version *string `json:"version,omitempty"`
}

// NewGetDatabasesEngines200ResponseAllOfDataInner instantiates a new GetDatabasesEngines200ResponseAllOfDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDatabasesEngines200ResponseAllOfDataInner() *GetDatabasesEngines200ResponseAllOfDataInner {
	this := GetDatabasesEngines200ResponseAllOfDataInner{}
	return &this
}

// NewGetDatabasesEngines200ResponseAllOfDataInnerWithDefaults instantiates a new GetDatabasesEngines200ResponseAllOfDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDatabasesEngines200ResponseAllOfDataInnerWithDefaults() *GetDatabasesEngines200ResponseAllOfDataInner {
	this := GetDatabasesEngines200ResponseAllOfDataInner{}
	return &this
}

// GetEngine returns the Engine field value if set, zero value otherwise.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetEngine() string {
	if o == nil || IsNil(o.Engine) {
		var ret string
		return ret
	}
	return *o.Engine
}

// GetEngineOk returns a tuple with the Engine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetEngineOk() (*string, bool) {
	if o == nil || IsNil(o.Engine) {
		return nil, false
	}
	return o.Engine, true
}

// HasEngine returns a boolean if a field has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) HasEngine() bool {
	if o != nil && !IsNil(o.Engine) {
		return true
	}

	return false
}

// SetEngine gets a reference to the given string and assigns it to the Engine field.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) SetEngine(v string) {
	o.Engine = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) SetId(v string) {
	o.Id = &v
}

// GetTotalDiskSizeGb returns the TotalDiskSizeGb field value if set, zero value otherwise.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetTotalDiskSizeGb() int32 {
	if o == nil || IsNil(o.TotalDiskSizeGb) {
		var ret int32
		return ret
	}
	return *o.TotalDiskSizeGb
}

// GetTotalDiskSizeGbOk returns a tuple with the TotalDiskSizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetTotalDiskSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDiskSizeGb) {
		return nil, false
	}
	return o.TotalDiskSizeGb, true
}

// HasTotalDiskSizeGb returns a boolean if a field has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) HasTotalDiskSizeGb() bool {
	if o != nil && !IsNil(o.TotalDiskSizeGb) {
		return true
	}

	return false
}

// SetTotalDiskSizeGb gets a reference to the given int32 and assigns it to the TotalDiskSizeGb field.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) SetTotalDiskSizeGb(v int32) {
	o.TotalDiskSizeGb = &v
}

// GetUsedDiskSizeGb returns the UsedDiskSizeGb field value if set, zero value otherwise.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetUsedDiskSizeGb() int32 {
	if o == nil || IsNil(o.UsedDiskSizeGb) {
		var ret int32
		return ret
	}
	return *o.UsedDiskSizeGb
}

// GetUsedDiskSizeGbOk returns a tuple with the UsedDiskSizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetUsedDiskSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedDiskSizeGb) {
		return nil, false
	}
	return o.UsedDiskSizeGb, true
}

// HasUsedDiskSizeGb returns a boolean if a field has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) HasUsedDiskSizeGb() bool {
	if o != nil && !IsNil(o.UsedDiskSizeGb) {
		return true
	}

	return false
}

// SetUsedDiskSizeGb gets a reference to the given int32 and assigns it to the UsedDiskSizeGb field.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) SetUsedDiskSizeGb(v int32) {
	o.UsedDiskSizeGb = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetDatabasesEngines200ResponseAllOfDataInner) SetVersion(v string) {
	o.Version = &v
}

func (o GetDatabasesEngines200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDatabasesEngines200ResponseAllOfDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Engine) {
		toSerialize["engine"] = o.Engine
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TotalDiskSizeGb) {
		toSerialize["total_disk_size_gb"] = o.TotalDiskSizeGb
	}
	if !IsNil(o.UsedDiskSizeGb) {
		toSerialize["used_disk_size_gb"] = o.UsedDiskSizeGb
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableGetDatabasesEngines200ResponseAllOfDataInner struct {
	value *GetDatabasesEngines200ResponseAllOfDataInner
	isSet bool
}

func (v NullableGetDatabasesEngines200ResponseAllOfDataInner) Get() *GetDatabasesEngines200ResponseAllOfDataInner {
	return v.value
}

func (v *NullableGetDatabasesEngines200ResponseAllOfDataInner) Set(val *GetDatabasesEngines200ResponseAllOfDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDatabasesEngines200ResponseAllOfDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDatabasesEngines200ResponseAllOfDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDatabasesEngines200ResponseAllOfDataInner(val *GetDatabasesEngines200ResponseAllOfDataInner) *NullableGetDatabasesEngines200ResponseAllOfDataInner {
	return &NullableGetDatabasesEngines200ResponseAllOfDataInner{value: val, isSet: true}
}

func (v NullableGetDatabasesEngines200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDatabasesEngines200ResponseAllOfDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


