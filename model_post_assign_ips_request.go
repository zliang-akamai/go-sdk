/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostAssignIpsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAssignIpsRequest{}

// PostAssignIpsRequest Request object for IP Addresses Assign (POST /networking/ips/assign).
type PostAssignIpsRequest struct {
	// The list of assignments to make. You must have read_write access to all IPs being assigned and all Linodes being assigned to in order for the assignments to succeed.
	Assignments []PostAssignIpsRequestAssignmentsInner `json:"assignments"`
	// The ID of the Region in which these assignments are to take place. All IPs and Linodes must exist in this Region.
	Region string `json:"region"`
}

type _PostAssignIpsRequest PostAssignIpsRequest

// NewPostAssignIpsRequest instantiates a new PostAssignIpsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAssignIpsRequest(assignments []PostAssignIpsRequestAssignmentsInner, region string) *PostAssignIpsRequest {
	this := PostAssignIpsRequest{}
	this.Assignments = assignments
	this.Region = region
	return &this
}

// NewPostAssignIpsRequestWithDefaults instantiates a new PostAssignIpsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAssignIpsRequestWithDefaults() *PostAssignIpsRequest {
	this := PostAssignIpsRequest{}
	return &this
}

// GetAssignments returns the Assignments field value
func (o *PostAssignIpsRequest) GetAssignments() []PostAssignIpsRequestAssignmentsInner {
	if o == nil {
		var ret []PostAssignIpsRequestAssignmentsInner
		return ret
	}

	return o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value
// and a boolean to check if the value has been set.
func (o *PostAssignIpsRequest) GetAssignmentsOk() ([]PostAssignIpsRequestAssignmentsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assignments, true
}

// SetAssignments sets field value
func (o *PostAssignIpsRequest) SetAssignments(v []PostAssignIpsRequestAssignmentsInner) {
	o.Assignments = v
}

// GetRegion returns the Region field value
func (o *PostAssignIpsRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *PostAssignIpsRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *PostAssignIpsRequest) SetRegion(v string) {
	o.Region = v
}

func (o PostAssignIpsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAssignIpsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assignments"] = o.Assignments
	toSerialize["region"] = o.Region
	return toSerialize, nil
}

func (o *PostAssignIpsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"assignments",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostAssignIpsRequest := _PostAssignIpsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostAssignIpsRequest)

	if err != nil {
		return err
	}

	*o = PostAssignIpsRequest(varPostAssignIpsRequest)

	return err
}

type NullablePostAssignIpsRequest struct {
	value *PostAssignIpsRequest
	isSet bool
}

func (v NullablePostAssignIpsRequest) Get() *PostAssignIpsRequest {
	return v.value
}

func (v *NullablePostAssignIpsRequest) Set(val *PostAssignIpsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAssignIpsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAssignIpsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAssignIpsRequest(val *PostAssignIpsRequest) *NullablePostAssignIpsRequest {
	return &NullablePostAssignIpsRequest{value: val, isSet: true}
}

func (v NullablePostAssignIpsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAssignIpsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


