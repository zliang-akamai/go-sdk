/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetPaymentMethods200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPaymentMethods200ResponseDataInner{}

// GetPaymentMethods200ResponseDataInner Payment Method Response Object.
type GetPaymentMethods200ResponseDataInner struct {
	// When the Payment Method was added to the Account.
	Created *time.Time `json:"created,omitempty"`
	Data *GetPaymentMethods200ResponseDataInnerData `json:"data,omitempty"`
	// The unique ID of this Payment Method.
	Id *int32 `json:"id,omitempty"`
	// Whether this Payment Method is the default method for automatically processing service charges.
	IsDefault *bool `json:"is_default,omitempty"`
	// The type of Payment Method.
	Type *string `json:"type,omitempty"`
}

// NewGetPaymentMethods200ResponseDataInner instantiates a new GetPaymentMethods200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPaymentMethods200ResponseDataInner() *GetPaymentMethods200ResponseDataInner {
	this := GetPaymentMethods200ResponseDataInner{}
	return &this
}

// NewGetPaymentMethods200ResponseDataInnerWithDefaults instantiates a new GetPaymentMethods200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPaymentMethods200ResponseDataInnerWithDefaults() *GetPaymentMethods200ResponseDataInner {
	this := GetPaymentMethods200ResponseDataInner{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetPaymentMethods200ResponseDataInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethods200ResponseDataInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetPaymentMethods200ResponseDataInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetPaymentMethods200ResponseDataInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetPaymentMethods200ResponseDataInner) GetData() GetPaymentMethods200ResponseDataInnerData {
	if o == nil || IsNil(o.Data) {
		var ret GetPaymentMethods200ResponseDataInnerData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethods200ResponseDataInner) GetDataOk() (*GetPaymentMethods200ResponseDataInnerData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetPaymentMethods200ResponseDataInner) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GetPaymentMethods200ResponseDataInnerData and assigns it to the Data field.
func (o *GetPaymentMethods200ResponseDataInner) SetData(v GetPaymentMethods200ResponseDataInnerData) {
	o.Data = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetPaymentMethods200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethods200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetPaymentMethods200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetPaymentMethods200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *GetPaymentMethods200ResponseDataInner) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethods200ResponseDataInner) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *GetPaymentMethods200ResponseDataInner) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *GetPaymentMethods200ResponseDataInner) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetPaymentMethods200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPaymentMethods200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetPaymentMethods200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetPaymentMethods200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

func (o GetPaymentMethods200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPaymentMethods200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetPaymentMethods200ResponseDataInner struct {
	value *GetPaymentMethods200ResponseDataInner
	isSet bool
}

func (v NullableGetPaymentMethods200ResponseDataInner) Get() *GetPaymentMethods200ResponseDataInner {
	return v.value
}

func (v *NullableGetPaymentMethods200ResponseDataInner) Set(val *GetPaymentMethods200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPaymentMethods200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPaymentMethods200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPaymentMethods200ResponseDataInner(val *GetPaymentMethods200ResponseDataInner) *NullableGetPaymentMethods200ResponseDataInner {
	return &NullableGetPaymentMethods200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetPaymentMethods200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPaymentMethods200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


