/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetStackScripts200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStackScripts200ResponseDataInner{}

// GetStackScripts200ResponseDataInner A StackScript enables you to quickly deploy a fully configured application in an automated manner.
type GetStackScripts200ResponseDataInner struct {
	// The date this StackScript was created.
	Created *time.Time `json:"created,omitempty"`
	// Count of currently active, deployed Linodes created from this StackScript.
	DeploymentsActive *int32 `json:"deployments_active,omitempty"`
	// The total number of times this StackScript has been deployed.
	DeploymentsTotal *int32 `json:"deployments_total,omitempty"`
	// A description for the StackScript.
	Description *string `json:"description,omitempty"`
	// The unique ID of this StackScript.
	Id *int32 `json:"id,omitempty"`
	// An array of Image IDs. These are the Images that can be deployed with this StackScript.  `any/all` indicates that all available Images, including private Images, are accepted.
	Images []string `json:"images,omitempty"`
	// This determines whether other users can use your StackScript. __Once a StackScript is made public, it cannot be made private.__
	IsPublic *bool `json:"is_public,omitempty"`
	// The StackScript's label is for display purposes only.
	Label *string `json:"label,omitempty"`
	// Returns `true` if this StackScript is owned by the account of the user making the request, and the user making the request is unrestricted or has access to this StackScript.
	Mine *bool `json:"mine,omitempty"`
	// This field allows you to add notes for the set of revisions made to this StackScript.
	RevNote *string `json:"rev_note,omitempty"`
	// The script to execute when provisioning a new Linode with this StackScript.
	Script *string `json:"script,omitempty"`
	// The date this StackScript was last updated.
	Updated *time.Time `json:"updated,omitempty"`
	// This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment. See [Declare User-Defined Fields (UDFs)](https://www.linode.com/docs/products/tools/stackscripts/guides/write-a-custom-script/#declare-user-defined-fields-udfs) for more information.
	UserDefinedFields []GetStackScripts200ResponseDataInnerUserDefinedFieldsInner `json:"user_defined_fields,omitempty"`
	// The Gravatar ID for the User who created the StackScript.
	UserGravatarId *string `json:"user_gravatar_id,omitempty"`
	// The User who created the StackScript.
	Username *string `json:"username,omitempty"`
}

// NewGetStackScripts200ResponseDataInner instantiates a new GetStackScripts200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStackScripts200ResponseDataInner() *GetStackScripts200ResponseDataInner {
	this := GetStackScripts200ResponseDataInner{}
	return &this
}

// NewGetStackScripts200ResponseDataInnerWithDefaults instantiates a new GetStackScripts200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStackScripts200ResponseDataInnerWithDefaults() *GetStackScripts200ResponseDataInner {
	this := GetStackScripts200ResponseDataInner{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetStackScripts200ResponseDataInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDeploymentsActive returns the DeploymentsActive field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetDeploymentsActive() int32 {
	if o == nil || IsNil(o.DeploymentsActive) {
		var ret int32
		return ret
	}
	return *o.DeploymentsActive
}

// GetDeploymentsActiveOk returns a tuple with the DeploymentsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetDeploymentsActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.DeploymentsActive) {
		return nil, false
	}
	return o.DeploymentsActive, true
}

// HasDeploymentsActive returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasDeploymentsActive() bool {
	if o != nil && !IsNil(o.DeploymentsActive) {
		return true
	}

	return false
}

// SetDeploymentsActive gets a reference to the given int32 and assigns it to the DeploymentsActive field.
func (o *GetStackScripts200ResponseDataInner) SetDeploymentsActive(v int32) {
	o.DeploymentsActive = &v
}

// GetDeploymentsTotal returns the DeploymentsTotal field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetDeploymentsTotal() int32 {
	if o == nil || IsNil(o.DeploymentsTotal) {
		var ret int32
		return ret
	}
	return *o.DeploymentsTotal
}

// GetDeploymentsTotalOk returns a tuple with the DeploymentsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetDeploymentsTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.DeploymentsTotal) {
		return nil, false
	}
	return o.DeploymentsTotal, true
}

// HasDeploymentsTotal returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasDeploymentsTotal() bool {
	if o != nil && !IsNil(o.DeploymentsTotal) {
		return true
	}

	return false
}

// SetDeploymentsTotal gets a reference to the given int32 and assigns it to the DeploymentsTotal field.
func (o *GetStackScripts200ResponseDataInner) SetDeploymentsTotal(v int32) {
	o.DeploymentsTotal = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetStackScripts200ResponseDataInner) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetStackScripts200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetImages() []string {
	if o == nil || IsNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *GetStackScripts200ResponseDataInner) SetImages(v []string) {
	o.Images = v
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetIsPublic() bool {
	if o == nil || IsNil(o.IsPublic) {
		var ret bool
		return ret
	}
	return *o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetIsPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublic) {
		return nil, false
	}
	return o.IsPublic, true
}

// HasIsPublic returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasIsPublic() bool {
	if o != nil && !IsNil(o.IsPublic) {
		return true
	}

	return false
}

// SetIsPublic gets a reference to the given bool and assigns it to the IsPublic field.
func (o *GetStackScripts200ResponseDataInner) SetIsPublic(v bool) {
	o.IsPublic = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetStackScripts200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetMine returns the Mine field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetMine() bool {
	if o == nil || IsNil(o.Mine) {
		var ret bool
		return ret
	}
	return *o.Mine
}

// GetMineOk returns a tuple with the Mine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetMineOk() (*bool, bool) {
	if o == nil || IsNil(o.Mine) {
		return nil, false
	}
	return o.Mine, true
}

// HasMine returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasMine() bool {
	if o != nil && !IsNil(o.Mine) {
		return true
	}

	return false
}

// SetMine gets a reference to the given bool and assigns it to the Mine field.
func (o *GetStackScripts200ResponseDataInner) SetMine(v bool) {
	o.Mine = &v
}

// GetRevNote returns the RevNote field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetRevNote() string {
	if o == nil || IsNil(o.RevNote) {
		var ret string
		return ret
	}
	return *o.RevNote
}

// GetRevNoteOk returns a tuple with the RevNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetRevNoteOk() (*string, bool) {
	if o == nil || IsNil(o.RevNote) {
		return nil, false
	}
	return o.RevNote, true
}

// HasRevNote returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasRevNote() bool {
	if o != nil && !IsNil(o.RevNote) {
		return true
	}

	return false
}

// SetRevNote gets a reference to the given string and assigns it to the RevNote field.
func (o *GetStackScripts200ResponseDataInner) SetRevNote(v string) {
	o.RevNote = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetScript() string {
	if o == nil || IsNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetScriptOk() (*string, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *GetStackScripts200ResponseDataInner) SetScript(v string) {
	o.Script = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetStackScripts200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetUserDefinedFields() []GetStackScripts200ResponseDataInnerUserDefinedFieldsInner {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret []GetStackScripts200ResponseDataInnerUserDefinedFieldsInner
		return ret
	}
	return o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetUserDefinedFieldsOk() ([]GetStackScripts200ResponseDataInnerUserDefinedFieldsInner, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given []GetStackScripts200ResponseDataInnerUserDefinedFieldsInner and assigns it to the UserDefinedFields field.
func (o *GetStackScripts200ResponseDataInner) SetUserDefinedFields(v []GetStackScripts200ResponseDataInnerUserDefinedFieldsInner) {
	o.UserDefinedFields = v
}

// GetUserGravatarId returns the UserGravatarId field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetUserGravatarId() string {
	if o == nil || IsNil(o.UserGravatarId) {
		var ret string
		return ret
	}
	return *o.UserGravatarId
}

// GetUserGravatarIdOk returns a tuple with the UserGravatarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetUserGravatarIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserGravatarId) {
		return nil, false
	}
	return o.UserGravatarId, true
}

// HasUserGravatarId returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasUserGravatarId() bool {
	if o != nil && !IsNil(o.UserGravatarId) {
		return true
	}

	return false
}

// SetUserGravatarId gets a reference to the given string and assigns it to the UserGravatarId field.
func (o *GetStackScripts200ResponseDataInner) SetUserGravatarId(v string) {
	o.UserGravatarId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetStackScripts200ResponseDataInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetStackScripts200ResponseDataInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GetStackScripts200ResponseDataInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetStackScripts200ResponseDataInner) SetUsername(v string) {
	o.Username = &v
}

func (o GetStackScripts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStackScripts200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.DeploymentsActive) {
		toSerialize["deployments_active"] = o.DeploymentsActive
	}
	if !IsNil(o.DeploymentsTotal) {
		toSerialize["deployments_total"] = o.DeploymentsTotal
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.IsPublic) {
		toSerialize["is_public"] = o.IsPublic
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Mine) {
		toSerialize["mine"] = o.Mine
	}
	if !IsNil(o.RevNote) {
		toSerialize["rev_note"] = o.RevNote
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["user_defined_fields"] = o.UserDefinedFields
	}
	if !IsNil(o.UserGravatarId) {
		toSerialize["user_gravatar_id"] = o.UserGravatarId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableGetStackScripts200ResponseDataInner struct {
	value *GetStackScripts200ResponseDataInner
	isSet bool
}

func (v NullableGetStackScripts200ResponseDataInner) Get() *GetStackScripts200ResponseDataInner {
	return v.value
}

func (v *NullableGetStackScripts200ResponseDataInner) Set(val *GetStackScripts200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStackScripts200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStackScripts200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStackScripts200ResponseDataInner(val *GetStackScripts200ResponseDataInner) *NullableGetStackScripts200ResponseDataInner {
	return &NullableGetStackScripts200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetStackScripts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStackScripts200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


