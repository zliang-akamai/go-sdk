/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetRegions200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRegions200ResponseDataInner{}

// GetRegions200ResponseDataInner An area where Linode services are available.
type GetRegions200ResponseDataInner struct {
	// A list of capabilities of this region.
	Capabilities []string `json:"capabilities,omitempty"`
	// The country where this Region resides.
	Country *string `json:"country,omitempty"`
	// The unique ID of this Region.
	Id *string `json:"id,omitempty"`
	// Detailed location information for this Region, including city, state or region, and country.
	Label *string `json:"label,omitempty"`
	PlacementGroupLimits *GetRegions200ResponseDataInnerPlacementGroupLimits `json:"placement_group_limits,omitempty"`
	Resolvers *GetRegions200ResponseDataInnerResolvers `json:"resolvers,omitempty"`
	// This region's site type. A `core` region indicates a traditional cloud computing [region](https://www.linode.com/docs/products/platform/get-started/guides/choose-a-data-center/#product-availability) that offers all compute services. A `distributed` region indicates sites that are globally dispersed to be closer to end users and workloads. These regions offer limited services.
	SiteType *string `json:"site_type,omitempty"`
	// This region's current operational status.
	Status *string `json:"status,omitempty"`
}

// NewGetRegions200ResponseDataInner instantiates a new GetRegions200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRegions200ResponseDataInner() *GetRegions200ResponseDataInner {
	this := GetRegions200ResponseDataInner{}
	return &this
}

// NewGetRegions200ResponseDataInnerWithDefaults instantiates a new GetRegions200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRegions200ResponseDataInnerWithDefaults() *GetRegions200ResponseDataInner {
	this := GetRegions200ResponseDataInner{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetCapabilities() []string {
	if o == nil || IsNil(o.Capabilities) {
		var ret []string
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetCapabilitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []string and assigns it to the Capabilities field.
func (o *GetRegions200ResponseDataInner) SetCapabilities(v []string) {
	o.Capabilities = v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *GetRegions200ResponseDataInner) SetCountry(v string) {
	o.Country = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetRegions200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetRegions200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetPlacementGroupLimits returns the PlacementGroupLimits field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetPlacementGroupLimits() GetRegions200ResponseDataInnerPlacementGroupLimits {
	if o == nil || IsNil(o.PlacementGroupLimits) {
		var ret GetRegions200ResponseDataInnerPlacementGroupLimits
		return ret
	}
	return *o.PlacementGroupLimits
}

// GetPlacementGroupLimitsOk returns a tuple with the PlacementGroupLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetPlacementGroupLimitsOk() (*GetRegions200ResponseDataInnerPlacementGroupLimits, bool) {
	if o == nil || IsNil(o.PlacementGroupLimits) {
		return nil, false
	}
	return o.PlacementGroupLimits, true
}

// HasPlacementGroupLimits returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasPlacementGroupLimits() bool {
	if o != nil && !IsNil(o.PlacementGroupLimits) {
		return true
	}

	return false
}

// SetPlacementGroupLimits gets a reference to the given GetRegions200ResponseDataInnerPlacementGroupLimits and assigns it to the PlacementGroupLimits field.
func (o *GetRegions200ResponseDataInner) SetPlacementGroupLimits(v GetRegions200ResponseDataInnerPlacementGroupLimits) {
	o.PlacementGroupLimits = &v
}

// GetResolvers returns the Resolvers field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetResolvers() GetRegions200ResponseDataInnerResolvers {
	if o == nil || IsNil(o.Resolvers) {
		var ret GetRegions200ResponseDataInnerResolvers
		return ret
	}
	return *o.Resolvers
}

// GetResolversOk returns a tuple with the Resolvers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetResolversOk() (*GetRegions200ResponseDataInnerResolvers, bool) {
	if o == nil || IsNil(o.Resolvers) {
		return nil, false
	}
	return o.Resolvers, true
}

// HasResolvers returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasResolvers() bool {
	if o != nil && !IsNil(o.Resolvers) {
		return true
	}

	return false
}

// SetResolvers gets a reference to the given GetRegions200ResponseDataInnerResolvers and assigns it to the Resolvers field.
func (o *GetRegions200ResponseDataInner) SetResolvers(v GetRegions200ResponseDataInnerResolvers) {
	o.Resolvers = &v
}

// GetSiteType returns the SiteType field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetSiteType() string {
	if o == nil || IsNil(o.SiteType) {
		var ret string
		return ret
	}
	return *o.SiteType
}

// GetSiteTypeOk returns a tuple with the SiteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetSiteTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SiteType) {
		return nil, false
	}
	return o.SiteType, true
}

// HasSiteType returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasSiteType() bool {
	if o != nil && !IsNil(o.SiteType) {
		return true
	}

	return false
}

// SetSiteType gets a reference to the given string and assigns it to the SiteType field.
func (o *GetRegions200ResponseDataInner) SetSiteType(v string) {
	o.SiteType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetRegions200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegions200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetRegions200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetRegions200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

func (o GetRegions200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRegions200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.PlacementGroupLimits) {
		toSerialize["placement_group_limits"] = o.PlacementGroupLimits
	}
	if !IsNil(o.Resolvers) {
		toSerialize["resolvers"] = o.Resolvers
	}
	if !IsNil(o.SiteType) {
		toSerialize["site_type"] = o.SiteType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableGetRegions200ResponseDataInner struct {
	value *GetRegions200ResponseDataInner
	isSet bool
}

func (v NullableGetRegions200ResponseDataInner) Get() *GetRegions200ResponseDataInner {
	return v.value
}

func (v *NullableGetRegions200ResponseDataInner) Set(val *GetRegions200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRegions200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRegions200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRegions200ResponseDataInner(val *GetRegions200ResponseDataInner) *NullableGetRegions200ResponseDataInner {
	return &NullableGetRegions200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetRegions200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRegions200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


