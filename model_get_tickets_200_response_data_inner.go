/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetTickets200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTickets200ResponseDataInner{}

// GetTickets200ResponseDataInner A Support Ticket opened on your Account.
type GetTickets200ResponseDataInner struct {
	// A list of filenames representing attached files associated with this Ticket.
	Attachments []string `json:"attachments,omitempty"`
	// Whether the Support Ticket may be closed.
	Closable *bool `json:"closable,omitempty"`
	// The date and time this Ticket was closed.
	Closed NullableTime `json:"closed,omitempty"`
	// The full details of the issue or question.
	Description *string `json:"description,omitempty"`
	Entity NullableGetTickets200ResponseDataInnerEntity `json:"entity,omitempty"`
	// The Gravatar ID of the User who opened this Ticket.
	GravatarId *string `json:"gravatar_id,omitempty"`
	// The ID of the Support Ticket.
	Id *int32 `json:"id,omitempty"`
	// The date and time this Ticket was created.
	Opened *time.Time `json:"opened,omitempty"`
	// The User who opened this Ticket.
	OpenedBy *string `json:"opened_by,omitempty"`
	// The current status of this Ticket.
	Status *string `json:"status,omitempty"`
	// The summary or title for this Ticket.
	Summary *string `json:"summary,omitempty"`
	// The date and time this Ticket was last updated.
	Updated *time.Time `json:"updated,omitempty"`
	// The User who last updated this Ticket.
	UpdatedBy NullableString `json:"updated_by,omitempty"`
}

// NewGetTickets200ResponseDataInner instantiates a new GetTickets200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTickets200ResponseDataInner() *GetTickets200ResponseDataInner {
	this := GetTickets200ResponseDataInner{}
	return &this
}

// NewGetTickets200ResponseDataInnerWithDefaults instantiates a new GetTickets200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTickets200ResponseDataInnerWithDefaults() *GetTickets200ResponseDataInner {
	this := GetTickets200ResponseDataInner{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetAttachments() []string {
	if o == nil || IsNil(o.Attachments) {
		var ret []string
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetAttachmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []string and assigns it to the Attachments field.
func (o *GetTickets200ResponseDataInner) SetAttachments(v []string) {
	o.Attachments = v
}

// GetClosable returns the Closable field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetClosable() bool {
	if o == nil || IsNil(o.Closable) {
		var ret bool
		return ret
	}
	return *o.Closable
}

// GetClosableOk returns a tuple with the Closable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetClosableOk() (*bool, bool) {
	if o == nil || IsNil(o.Closable) {
		return nil, false
	}
	return o.Closable, true
}

// HasClosable returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasClosable() bool {
	if o != nil && !IsNil(o.Closable) {
		return true
	}

	return false
}

// SetClosable gets a reference to the given bool and assigns it to the Closable field.
func (o *GetTickets200ResponseDataInner) SetClosable(v bool) {
	o.Closable = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTickets200ResponseDataInner) GetClosed() time.Time {
	if o == nil || IsNil(o.Closed.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Closed.Get()
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTickets200ResponseDataInner) GetClosedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Closed.Get(), o.Closed.IsSet()
}

// HasClosed returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasClosed() bool {
	if o != nil && o.Closed.IsSet() {
		return true
	}

	return false
}

// SetClosed gets a reference to the given NullableTime and assigns it to the Closed field.
func (o *GetTickets200ResponseDataInner) SetClosed(v time.Time) {
	o.Closed.Set(&v)
}
// SetClosedNil sets the value for Closed to be an explicit nil
func (o *GetTickets200ResponseDataInner) SetClosedNil() {
	o.Closed.Set(nil)
}

// UnsetClosed ensures that no value is present for Closed, not even an explicit nil
func (o *GetTickets200ResponseDataInner) UnsetClosed() {
	o.Closed.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetTickets200ResponseDataInner) SetDescription(v string) {
	o.Description = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTickets200ResponseDataInner) GetEntity() GetTickets200ResponseDataInnerEntity {
	if o == nil || IsNil(o.Entity.Get()) {
		var ret GetTickets200ResponseDataInnerEntity
		return ret
	}
	return *o.Entity.Get()
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTickets200ResponseDataInner) GetEntityOk() (*GetTickets200ResponseDataInnerEntity, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entity.Get(), o.Entity.IsSet()
}

// HasEntity returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasEntity() bool {
	if o != nil && o.Entity.IsSet() {
		return true
	}

	return false
}

// SetEntity gets a reference to the given NullableGetTickets200ResponseDataInnerEntity and assigns it to the Entity field.
func (o *GetTickets200ResponseDataInner) SetEntity(v GetTickets200ResponseDataInnerEntity) {
	o.Entity.Set(&v)
}
// SetEntityNil sets the value for Entity to be an explicit nil
func (o *GetTickets200ResponseDataInner) SetEntityNil() {
	o.Entity.Set(nil)
}

// UnsetEntity ensures that no value is present for Entity, not even an explicit nil
func (o *GetTickets200ResponseDataInner) UnsetEntity() {
	o.Entity.Unset()
}

// GetGravatarId returns the GravatarId field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetGravatarId() string {
	if o == nil || IsNil(o.GravatarId) {
		var ret string
		return ret
	}
	return *o.GravatarId
}

// GetGravatarIdOk returns a tuple with the GravatarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetGravatarIdOk() (*string, bool) {
	if o == nil || IsNil(o.GravatarId) {
		return nil, false
	}
	return o.GravatarId, true
}

// HasGravatarId returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasGravatarId() bool {
	if o != nil && !IsNil(o.GravatarId) {
		return true
	}

	return false
}

// SetGravatarId gets a reference to the given string and assigns it to the GravatarId field.
func (o *GetTickets200ResponseDataInner) SetGravatarId(v string) {
	o.GravatarId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetTickets200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetOpened returns the Opened field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetOpened() time.Time {
	if o == nil || IsNil(o.Opened) {
		var ret time.Time
		return ret
	}
	return *o.Opened
}

// GetOpenedOk returns a tuple with the Opened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetOpenedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Opened) {
		return nil, false
	}
	return o.Opened, true
}

// HasOpened returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasOpened() bool {
	if o != nil && !IsNil(o.Opened) {
		return true
	}

	return false
}

// SetOpened gets a reference to the given time.Time and assigns it to the Opened field.
func (o *GetTickets200ResponseDataInner) SetOpened(v time.Time) {
	o.Opened = &v
}

// GetOpenedBy returns the OpenedBy field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetOpenedBy() string {
	if o == nil || IsNil(o.OpenedBy) {
		var ret string
		return ret
	}
	return *o.OpenedBy
}

// GetOpenedByOk returns a tuple with the OpenedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetOpenedByOk() (*string, bool) {
	if o == nil || IsNil(o.OpenedBy) {
		return nil, false
	}
	return o.OpenedBy, true
}

// HasOpenedBy returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasOpenedBy() bool {
	if o != nil && !IsNil(o.OpenedBy) {
		return true
	}

	return false
}

// SetOpenedBy gets a reference to the given string and assigns it to the OpenedBy field.
func (o *GetTickets200ResponseDataInner) SetOpenedBy(v string) {
	o.OpenedBy = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetTickets200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *GetTickets200ResponseDataInner) SetSummary(v string) {
	o.Summary = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetTickets200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickets200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetTickets200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTickets200ResponseDataInner) GetUpdatedBy() string {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTickets200ResponseDataInner) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *GetTickets200ResponseDataInner) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableString and assigns it to the UpdatedBy field.
func (o *GetTickets200ResponseDataInner) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *GetTickets200ResponseDataInner) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *GetTickets200ResponseDataInner) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

func (o GetTickets200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTickets200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Closable) {
		toSerialize["closable"] = o.Closable
	}
	if o.Closed.IsSet() {
		toSerialize["closed"] = o.Closed.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.Entity.IsSet() {
		toSerialize["entity"] = o.Entity.Get()
	}
	if !IsNil(o.GravatarId) {
		toSerialize["gravatar_id"] = o.GravatarId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Opened) {
		toSerialize["opened"] = o.Opened
	}
	if !IsNil(o.OpenedBy) {
		toSerialize["opened_by"] = o.OpenedBy
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updated_by"] = o.UpdatedBy.Get()
	}
	return toSerialize, nil
}

type NullableGetTickets200ResponseDataInner struct {
	value *GetTickets200ResponseDataInner
	isSet bool
}

func (v NullableGetTickets200ResponseDataInner) Get() *GetTickets200ResponseDataInner {
	return v.value
}

func (v *NullableGetTickets200ResponseDataInner) Set(val *GetTickets200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTickets200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTickets200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTickets200ResponseDataInner(val *GetTickets200ResponseDataInner) *NullableGetTickets200ResponseDataInner {
	return &NullableGetTickets200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetTickets200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTickets200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


