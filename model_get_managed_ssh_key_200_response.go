/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetManagedSshKey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetManagedSshKey200Response{}

// GetManagedSshKey200Response A unique SSH public key that allows Linode's special forces to access a Managed server to respond to Issues.
type GetManagedSshKey200Response struct {
	// The unique SSH public key assigned to your Linode account's Managed service.
	SshKey *string `json:"ssh_key,omitempty"`
}

// NewGetManagedSshKey200Response instantiates a new GetManagedSshKey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetManagedSshKey200Response() *GetManagedSshKey200Response {
	this := GetManagedSshKey200Response{}
	return &this
}

// NewGetManagedSshKey200ResponseWithDefaults instantiates a new GetManagedSshKey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetManagedSshKey200ResponseWithDefaults() *GetManagedSshKey200Response {
	this := GetManagedSshKey200Response{}
	return &this
}

// GetSshKey returns the SshKey field value if set, zero value otherwise.
func (o *GetManagedSshKey200Response) GetSshKey() string {
	if o == nil || IsNil(o.SshKey) {
		var ret string
		return ret
	}
	return *o.SshKey
}

// GetSshKeyOk returns a tuple with the SshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSshKey200Response) GetSshKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SshKey) {
		return nil, false
	}
	return o.SshKey, true
}

// HasSshKey returns a boolean if a field has been set.
func (o *GetManagedSshKey200Response) HasSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}

// SetSshKey gets a reference to the given string and assigns it to the SshKey field.
func (o *GetManagedSshKey200Response) SetSshKey(v string) {
	o.SshKey = &v
}

func (o GetManagedSshKey200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetManagedSshKey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SshKey) {
		toSerialize["ssh_key"] = o.SshKey
	}
	return toSerialize, nil
}

type NullableGetManagedSshKey200Response struct {
	value *GetManagedSshKey200Response
	isSet bool
}

func (v NullableGetManagedSshKey200Response) Get() *GetManagedSshKey200Response {
	return v.value
}

func (v *NullableGetManagedSshKey200Response) Set(val *GetManagedSshKey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetManagedSshKey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetManagedSshKey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetManagedSshKey200Response(val *GetManagedSshKey200Response) *NullableGetManagedSshKey200Response {
	return &NullableGetManagedSshKey200Response{value: val, isSet: true}
}

func (v NullableGetManagedSshKey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetManagedSshKey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


