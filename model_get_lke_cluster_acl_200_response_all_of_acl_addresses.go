/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLkeClusterAcl200ResponseAllOfAclAddresses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusterAcl200ResponseAllOfAclAddresses{}

// GetLkeClusterAcl200ResponseAllOfAclAddresses struct for GetLkeClusterAcl200ResponseAllOfAclAddresses
type GetLkeClusterAcl200ResponseAllOfAclAddresses struct {
	Ipv4 interface{} `json:"ipv4,omitempty"`
	Ipv6 interface{} `json:"ipv6,omitempty"`
}

// NewGetLkeClusterAcl200ResponseAllOfAclAddresses instantiates a new GetLkeClusterAcl200ResponseAllOfAclAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusterAcl200ResponseAllOfAclAddresses() *GetLkeClusterAcl200ResponseAllOfAclAddresses {
	this := GetLkeClusterAcl200ResponseAllOfAclAddresses{}
	return &this
}

// NewGetLkeClusterAcl200ResponseAllOfAclAddressesWithDefaults instantiates a new GetLkeClusterAcl200ResponseAllOfAclAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusterAcl200ResponseAllOfAclAddressesWithDefaults() *GetLkeClusterAcl200ResponseAllOfAclAddresses {
	this := GetLkeClusterAcl200ResponseAllOfAclAddresses{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) GetIpv4() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) GetIpv4Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return &o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given interface{} and assigns it to the Ipv4 field.
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) SetIpv4(v interface{}) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) GetIpv6() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) GetIpv6Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return &o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given interface{} and assigns it to the Ipv6 field.
func (o *GetLkeClusterAcl200ResponseAllOfAclAddresses) SetIpv6(v interface{}) {
	o.Ipv6 = v
}

func (o GetLkeClusterAcl200ResponseAllOfAclAddresses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusterAcl200ResponseAllOfAclAddresses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ipv4 != nil {
		toSerialize["ipv4"] = o.Ipv4
	}
	if o.Ipv6 != nil {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

type NullableGetLkeClusterAcl200ResponseAllOfAclAddresses struct {
	value *GetLkeClusterAcl200ResponseAllOfAclAddresses
	isSet bool
}

func (v NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) Get() *GetLkeClusterAcl200ResponseAllOfAclAddresses {
	return v.value
}

func (v *NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) Set(val *GetLkeClusterAcl200ResponseAllOfAclAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusterAcl200ResponseAllOfAclAddresses(val *GetLkeClusterAcl200ResponseAllOfAclAddresses) *NullableGetLkeClusterAcl200ResponseAllOfAclAddresses {
	return &NullableGetLkeClusterAcl200ResponseAllOfAclAddresses{value: val, isSet: true}
}

func (v NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusterAcl200ResponseAllOfAclAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


