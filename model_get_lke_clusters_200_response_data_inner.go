/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetLkeClusters200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusters200ResponseDataInner{}

// GetLkeClusters200ResponseDataInner A Kubernetes cluster.
type GetLkeClusters200ResponseDataInner struct {
	ControlPlane *GetLkeClusters200ResponseDataInnerControlPlane `json:"control_plane,omitempty"`
	// When this Kubernetes cluster was created.
	Created *time.Time `json:"created,omitempty"`
	// This Kubernetes cluster's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The desired Kubernetes version for this Kubernetes cluster in the format of &lt;major&gt;.&lt;minor&gt;, and the latest supported patch version will be deployed.
	K8sVersion *string `json:"k8s_version,omitempty"`
	// This Kubernetes cluster's unique label for display purposes only. Labels have the following constraints:    - UTF-8 characters will be returned by the API using escape sequences of their Unicode code points. For example, the Japanese character _„Åã_ is 3 bytes in UTF-8 (`0xE382AB`). Its Unicode code point is 2 bytes (`0x30AB`). APIv4 supports this character and the API will return it as the escape sequence using six 1 byte characters which represent 2 bytes of Unicode code point (`\"\\u30ab\"`).    - 4 byte UTF-8 characters are not supported.    - If the label is entirely composed of UTF-8 characters, the API response will return the code points using up to 193 1 byte characters.
	Label *string `json:"label,omitempty"`
	// This Kubernetes cluster's location.
	Region *string `json:"region,omitempty"`
	// An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only.
	Tags []string `json:"tags,omitempty"`
	// When this Kubernetes cluster was updated.
	Updated *time.Time `json:"updated,omitempty"`
}

// NewGetLkeClusters200ResponseDataInner instantiates a new GetLkeClusters200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusters200ResponseDataInner() *GetLkeClusters200ResponseDataInner {
	this := GetLkeClusters200ResponseDataInner{}
	return &this
}

// NewGetLkeClusters200ResponseDataInnerWithDefaults instantiates a new GetLkeClusters200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusters200ResponseDataInnerWithDefaults() *GetLkeClusters200ResponseDataInner {
	this := GetLkeClusters200ResponseDataInner{}
	return &this
}

// GetControlPlane returns the ControlPlane field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetControlPlane() GetLkeClusters200ResponseDataInnerControlPlane {
	if o == nil || IsNil(o.ControlPlane) {
		var ret GetLkeClusters200ResponseDataInnerControlPlane
		return ret
	}
	return *o.ControlPlane
}

// GetControlPlaneOk returns a tuple with the ControlPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetControlPlaneOk() (*GetLkeClusters200ResponseDataInnerControlPlane, bool) {
	if o == nil || IsNil(o.ControlPlane) {
		return nil, false
	}
	return o.ControlPlane, true
}

// HasControlPlane returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasControlPlane() bool {
	if o != nil && !IsNil(o.ControlPlane) {
		return true
	}

	return false
}

// SetControlPlane gets a reference to the given GetLkeClusters200ResponseDataInnerControlPlane and assigns it to the ControlPlane field.
func (o *GetLkeClusters200ResponseDataInner) SetControlPlane(v GetLkeClusters200ResponseDataInnerControlPlane) {
	o.ControlPlane = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetLkeClusters200ResponseDataInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetLkeClusters200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetK8sVersion returns the K8sVersion field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetK8sVersion() string {
	if o == nil || IsNil(o.K8sVersion) {
		var ret string
		return ret
	}
	return *o.K8sVersion
}

// GetK8sVersionOk returns a tuple with the K8sVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetK8sVersionOk() (*string, bool) {
	if o == nil || IsNil(o.K8sVersion) {
		return nil, false
	}
	return o.K8sVersion, true
}

// HasK8sVersion returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasK8sVersion() bool {
	if o != nil && !IsNil(o.K8sVersion) {
		return true
	}

	return false
}

// SetK8sVersion gets a reference to the given string and assigns it to the K8sVersion field.
func (o *GetLkeClusters200ResponseDataInner) SetK8sVersion(v string) {
	o.K8sVersion = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetLkeClusters200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetLkeClusters200ResponseDataInner) SetRegion(v string) {
	o.Region = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetLkeClusters200ResponseDataInner) SetTags(v []string) {
	o.Tags = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetLkeClusters200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o GetLkeClusters200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusters200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlPlane) {
		toSerialize["control_plane"] = o.ControlPlane
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.K8sVersion) {
		toSerialize["k8s_version"] = o.K8sVersion
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableGetLkeClusters200ResponseDataInner struct {
	value *GetLkeClusters200ResponseDataInner
	isSet bool
}

func (v NullableGetLkeClusters200ResponseDataInner) Get() *GetLkeClusters200ResponseDataInner {
	return v.value
}

func (v *NullableGetLkeClusters200ResponseDataInner) Set(val *GetLkeClusters200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusters200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusters200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusters200ResponseDataInner(val *GetLkeClusters200ResponseDataInner) *NullableGetLkeClusters200ResponseDataInner {
	return &NullableGetLkeClusters200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetLkeClusters200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusters200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


