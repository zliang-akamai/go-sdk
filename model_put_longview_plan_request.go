/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PutLongviewPlanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutLongviewPlanRequest{}

// PutLongviewPlanRequest Longview Plan object.
type PutLongviewPlanRequest struct {
	// The subscription ID for a particular Longview plan. A value of `null` corresponds to Longview Free. You can send a request to the [List Longview subscriptions](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) operation to receive the details of each plan.
	LongviewSubscription NullableString `json:"longview_subscription,omitempty"`
}

// NewPutLongviewPlanRequest instantiates a new PutLongviewPlanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutLongviewPlanRequest() *PutLongviewPlanRequest {
	this := PutLongviewPlanRequest{}
	return &this
}

// NewPutLongviewPlanRequestWithDefaults instantiates a new PutLongviewPlanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutLongviewPlanRequestWithDefaults() *PutLongviewPlanRequest {
	this := PutLongviewPlanRequest{}
	return &this
}

// GetLongviewSubscription returns the LongviewSubscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutLongviewPlanRequest) GetLongviewSubscription() string {
	if o == nil || IsNil(o.LongviewSubscription.Get()) {
		var ret string
		return ret
	}
	return *o.LongviewSubscription.Get()
}

// GetLongviewSubscriptionOk returns a tuple with the LongviewSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutLongviewPlanRequest) GetLongviewSubscriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LongviewSubscription.Get(), o.LongviewSubscription.IsSet()
}

// HasLongviewSubscription returns a boolean if a field has been set.
func (o *PutLongviewPlanRequest) HasLongviewSubscription() bool {
	if o != nil && o.LongviewSubscription.IsSet() {
		return true
	}

	return false
}

// SetLongviewSubscription gets a reference to the given NullableString and assigns it to the LongviewSubscription field.
func (o *PutLongviewPlanRequest) SetLongviewSubscription(v string) {
	o.LongviewSubscription.Set(&v)
}
// SetLongviewSubscriptionNil sets the value for LongviewSubscription to be an explicit nil
func (o *PutLongviewPlanRequest) SetLongviewSubscriptionNil() {
	o.LongviewSubscription.Set(nil)
}

// UnsetLongviewSubscription ensures that no value is present for LongviewSubscription, not even an explicit nil
func (o *PutLongviewPlanRequest) UnsetLongviewSubscription() {
	o.LongviewSubscription.Unset()
}

func (o PutLongviewPlanRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutLongviewPlanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LongviewSubscription.IsSet() {
		toSerialize["longview_subscription"] = o.LongviewSubscription.Get()
	}
	return toSerialize, nil
}

type NullablePutLongviewPlanRequest struct {
	value *PutLongviewPlanRequest
	isSet bool
}

func (v NullablePutLongviewPlanRequest) Get() *PutLongviewPlanRequest {
	return v.value
}

func (v *NullablePutLongviewPlanRequest) Set(val *PutLongviewPlanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutLongviewPlanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutLongviewPlanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutLongviewPlanRequest(val *PutLongviewPlanRequest) *NullablePutLongviewPlanRequest {
	return &NullablePutLongviewPlanRequest{value: val, isSet: true}
}

func (v NullablePutLongviewPlanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutLongviewPlanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


