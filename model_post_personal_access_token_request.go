/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PostPersonalAccessTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostPersonalAccessTokenRequest{}

// PostPersonalAccessTokenRequest struct for PostPersonalAccessTokenRequest
type PostPersonalAccessTokenRequest struct {
	// When this token should be valid until.  If omitted, the new token will be valid until it is manually revoked.
	Expiry *time.Time `json:"expiry,omitempty"`
	// This token's label.  This is for display purposes only, but can be used to more easily track what you're using each token for.
	Label *string `json:"label,omitempty"`
	// The access [scopes](https://techdocs.akamai.com/linode-api/reference/get-started#oauth-reference) to grant to the created token. These cannot be changed after creation, and may not exceed the scopes of the acting token.  If omitted or entered with a wildcard character (`*`), the new token will have the same scopes as the acting token.  Multiple scopes are separated by a space character (` `).  For example, `linodes:read_write account:read_only`.
	Scopes *string `json:"scopes,omitempty"`
}

// NewPostPersonalAccessTokenRequest instantiates a new PostPersonalAccessTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPersonalAccessTokenRequest() *PostPersonalAccessTokenRequest {
	this := PostPersonalAccessTokenRequest{}
	return &this
}

// NewPostPersonalAccessTokenRequestWithDefaults instantiates a new PostPersonalAccessTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPersonalAccessTokenRequestWithDefaults() *PostPersonalAccessTokenRequest {
	this := PostPersonalAccessTokenRequest{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *PostPersonalAccessTokenRequest) GetExpiry() time.Time {
	if o == nil || IsNil(o.Expiry) {
		var ret time.Time
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalAccessTokenRequest) GetExpiryOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expiry) {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *PostPersonalAccessTokenRequest) HasExpiry() bool {
	if o != nil && !IsNil(o.Expiry) {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given time.Time and assigns it to the Expiry field.
func (o *PostPersonalAccessTokenRequest) SetExpiry(v time.Time) {
	o.Expiry = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PostPersonalAccessTokenRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalAccessTokenRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PostPersonalAccessTokenRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PostPersonalAccessTokenRequest) SetLabel(v string) {
	o.Label = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *PostPersonalAccessTokenRequest) GetScopes() string {
	if o == nil || IsNil(o.Scopes) {
		var ret string
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalAccessTokenRequest) GetScopesOk() (*string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *PostPersonalAccessTokenRequest) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *PostPersonalAccessTokenRequest) SetScopes(v string) {
	o.Scopes = &v
}

func (o PostPersonalAccessTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostPersonalAccessTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expiry) {
		toSerialize["expiry"] = o.Expiry
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

type NullablePostPersonalAccessTokenRequest struct {
	value *PostPersonalAccessTokenRequest
	isSet bool
}

func (v NullablePostPersonalAccessTokenRequest) Get() *PostPersonalAccessTokenRequest {
	return v.value
}

func (v *NullablePostPersonalAccessTokenRequest) Set(val *PostPersonalAccessTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPersonalAccessTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPersonalAccessTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPersonalAccessTokenRequest(val *PostPersonalAccessTokenRequest) *NullablePostPersonalAccessTokenRequest {
	return &NullablePostPersonalAccessTokenRequest{value: val, isSet: true}
}

func (v NullablePostPersonalAccessTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPersonalAccessTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


