/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LinodeBackupsSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinodeBackupsSchedule{}

// LinodeBackupsSchedule struct for LinodeBackupsSchedule
type LinodeBackupsSchedule struct {
	// The day of the week that your Linode's weekly backup is taken. If not set manually, a day will be chosen for you. Backups are taken every day, but backups taken on this day are preferred when selecting backups to retain for a longer period.  If not set manually, then when backups are initially enabled, this may come back as `Scheduling` until the `day` is automatically selected.
	Day NullableString `json:"day,omitempty"`
	// When your backups will be taken, in UTC. A backups window is a two-hour span of time in which the backup may occur.  For example, `W10` indicates that your backups should be taken between 10:00 and 12:00. If you don't choose a backup window, the API automatically assigns one.  If not set manually, when backups are initially enabled this may come back as `Scheduling` until the `window` is automatically selected.
	Window NullableString `json:"window,omitempty"`
}

// NewLinodeBackupsSchedule instantiates a new LinodeBackupsSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinodeBackupsSchedule() *LinodeBackupsSchedule {
	this := LinodeBackupsSchedule{}
	return &this
}

// NewLinodeBackupsScheduleWithDefaults instantiates a new LinodeBackupsSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinodeBackupsScheduleWithDefaults() *LinodeBackupsSchedule {
	this := LinodeBackupsSchedule{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinodeBackupsSchedule) GetDay() string {
	if o == nil || IsNil(o.Day.Get()) {
		var ret string
		return ret
	}
	return *o.Day.Get()
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinodeBackupsSchedule) GetDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Day.Get(), o.Day.IsSet()
}

// HasDay returns a boolean if a field has been set.
func (o *LinodeBackupsSchedule) HasDay() bool {
	if o != nil && o.Day.IsSet() {
		return true
	}

	return false
}

// SetDay gets a reference to the given NullableString and assigns it to the Day field.
func (o *LinodeBackupsSchedule) SetDay(v string) {
	o.Day.Set(&v)
}
// SetDayNil sets the value for Day to be an explicit nil
func (o *LinodeBackupsSchedule) SetDayNil() {
	o.Day.Set(nil)
}

// UnsetDay ensures that no value is present for Day, not even an explicit nil
func (o *LinodeBackupsSchedule) UnsetDay() {
	o.Day.Unset()
}

// GetWindow returns the Window field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinodeBackupsSchedule) GetWindow() string {
	if o == nil || IsNil(o.Window.Get()) {
		var ret string
		return ret
	}
	return *o.Window.Get()
}

// GetWindowOk returns a tuple with the Window field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinodeBackupsSchedule) GetWindowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Window.Get(), o.Window.IsSet()
}

// HasWindow returns a boolean if a field has been set.
func (o *LinodeBackupsSchedule) HasWindow() bool {
	if o != nil && o.Window.IsSet() {
		return true
	}

	return false
}

// SetWindow gets a reference to the given NullableString and assigns it to the Window field.
func (o *LinodeBackupsSchedule) SetWindow(v string) {
	o.Window.Set(&v)
}
// SetWindowNil sets the value for Window to be an explicit nil
func (o *LinodeBackupsSchedule) SetWindowNil() {
	o.Window.Set(nil)
}

// UnsetWindow ensures that no value is present for Window, not even an explicit nil
func (o *LinodeBackupsSchedule) UnsetWindow() {
	o.Window.Unset()
}

func (o LinodeBackupsSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinodeBackupsSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Day.IsSet() {
		toSerialize["day"] = o.Day.Get()
	}
	if o.Window.IsSet() {
		toSerialize["window"] = o.Window.Get()
	}
	return toSerialize, nil
}

type NullableLinodeBackupsSchedule struct {
	value *LinodeBackupsSchedule
	isSet bool
}

func (v NullableLinodeBackupsSchedule) Get() *LinodeBackupsSchedule {
	return v.value
}

func (v *NullableLinodeBackupsSchedule) Set(val *LinodeBackupsSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableLinodeBackupsSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableLinodeBackupsSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinodeBackupsSchedule(val *LinodeBackupsSchedule) *NullableLinodeBackupsSchedule {
	return &NullableLinodeBackupsSchedule{value: val, isSet: true}
}

func (v NullableLinodeBackupsSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinodeBackupsSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


