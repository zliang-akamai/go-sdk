/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AddedGetUser200AllOfLastLogin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddedGetUser200AllOfLastLogin{}

// AddedGetUser200AllOfLastLogin Information for the most recent login attempt for this User.  `null` if no login attempts have been made since creation of this User.  Run the [List user logins](https://techdocs.akamai.com/linode-api/reference/get-account-logins) operation for additional login information.
type AddedGetUser200AllOfLastLogin struct {
	// The date and time of this User's most recent login attempt.
	LoginDatetime *time.Time `json:"login_datetime,omitempty"`
	// The result of the most recent login attempt for this User.
	Status *string `json:"status,omitempty"`
}

// NewAddedGetUser200AllOfLastLogin instantiates a new AddedGetUser200AllOfLastLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddedGetUser200AllOfLastLogin() *AddedGetUser200AllOfLastLogin {
	this := AddedGetUser200AllOfLastLogin{}
	return &this
}

// NewAddedGetUser200AllOfLastLoginWithDefaults instantiates a new AddedGetUser200AllOfLastLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddedGetUser200AllOfLastLoginWithDefaults() *AddedGetUser200AllOfLastLogin {
	this := AddedGetUser200AllOfLastLogin{}
	return &this
}

// GetLoginDatetime returns the LoginDatetime field value if set, zero value otherwise.
func (o *AddedGetUser200AllOfLastLogin) GetLoginDatetime() time.Time {
	if o == nil || IsNil(o.LoginDatetime) {
		var ret time.Time
		return ret
	}
	return *o.LoginDatetime
}

// GetLoginDatetimeOk returns a tuple with the LoginDatetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddedGetUser200AllOfLastLogin) GetLoginDatetimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LoginDatetime) {
		return nil, false
	}
	return o.LoginDatetime, true
}

// HasLoginDatetime returns a boolean if a field has been set.
func (o *AddedGetUser200AllOfLastLogin) HasLoginDatetime() bool {
	if o != nil && !IsNil(o.LoginDatetime) {
		return true
	}

	return false
}

// SetLoginDatetime gets a reference to the given time.Time and assigns it to the LoginDatetime field.
func (o *AddedGetUser200AllOfLastLogin) SetLoginDatetime(v time.Time) {
	o.LoginDatetime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddedGetUser200AllOfLastLogin) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddedGetUser200AllOfLastLogin) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddedGetUser200AllOfLastLogin) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AddedGetUser200AllOfLastLogin) SetStatus(v string) {
	o.Status = &v
}

func (o AddedGetUser200AllOfLastLogin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddedGetUser200AllOfLastLogin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoginDatetime) {
		toSerialize["login_datetime"] = o.LoginDatetime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableAddedGetUser200AllOfLastLogin struct {
	value *AddedGetUser200AllOfLastLogin
	isSet bool
}

func (v NullableAddedGetUser200AllOfLastLogin) Get() *AddedGetUser200AllOfLastLogin {
	return v.value
}

func (v *NullableAddedGetUser200AllOfLastLogin) Set(val *AddedGetUser200AllOfLastLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableAddedGetUser200AllOfLastLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableAddedGetUser200AllOfLastLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddedGetUser200AllOfLastLogin(val *AddedGetUser200AllOfLastLogin) *NullableAddedGetUser200AllOfLastLogin {
	return &NullableAddedGetUser200AllOfLastLogin{value: val, isSet: true}
}

func (v NullableAddedGetUser200AllOfLastLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddedGetUser200AllOfLastLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


