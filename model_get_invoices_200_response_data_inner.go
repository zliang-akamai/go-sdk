/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetInvoices200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInvoices200ResponseDataInner{}

// GetInvoices200ResponseDataInner Account Invoice object.
type GetInvoices200ResponseDataInner struct {
	// `akamai`: This Invoice was generated according to the terms of an agreement between the customer and Akamai.  `linode`: This Invoice was generated according to the default terms, prices, and discounts.
	BillingSource *string `json:"billing_source,omitempty"`
	// When this Invoice was generated.
	Date *time.Time `json:"date,omitempty"`
	// The Invoice's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The Invoice's display label.
	Label *string `json:"label,omitempty"`
	// The amount of the Invoice before taxes in US Dollars.
	Subtotal *float32 `json:"subtotal,omitempty"`
	// The amount of tax levied on the Invoice in US Dollars.
	Tax *float32 `json:"tax,omitempty"`
	// The amount of tax broken down into subtotals by source.
	TaxSummary []GetInvoices200ResponseDataInnerTaxSummaryInner `json:"tax_summary,omitempty"`
	// The amount of the Invoice after taxes in US Dollars.
	Total *float32 `json:"total,omitempty"`
}

// NewGetInvoices200ResponseDataInner instantiates a new GetInvoices200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInvoices200ResponseDataInner() *GetInvoices200ResponseDataInner {
	this := GetInvoices200ResponseDataInner{}
	return &this
}

// NewGetInvoices200ResponseDataInnerWithDefaults instantiates a new GetInvoices200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInvoices200ResponseDataInnerWithDefaults() *GetInvoices200ResponseDataInner {
	this := GetInvoices200ResponseDataInner{}
	return &this
}

// GetBillingSource returns the BillingSource field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetBillingSource() string {
	if o == nil || IsNil(o.BillingSource) {
		var ret string
		return ret
	}
	return *o.BillingSource
}

// GetBillingSourceOk returns a tuple with the BillingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetBillingSourceOk() (*string, bool) {
	if o == nil || IsNil(o.BillingSource) {
		return nil, false
	}
	return o.BillingSource, true
}

// HasBillingSource returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasBillingSource() bool {
	if o != nil && !IsNil(o.BillingSource) {
		return true
	}

	return false
}

// SetBillingSource gets a reference to the given string and assigns it to the BillingSource field.
func (o *GetInvoices200ResponseDataInner) SetBillingSource(v string) {
	o.BillingSource = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *GetInvoices200ResponseDataInner) SetDate(v time.Time) {
	o.Date = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetInvoices200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetInvoices200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetSubtotal returns the Subtotal field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetSubtotal() float32 {
	if o == nil || IsNil(o.Subtotal) {
		var ret float32
		return ret
	}
	return *o.Subtotal
}

// GetSubtotalOk returns a tuple with the Subtotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetSubtotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Subtotal) {
		return nil, false
	}
	return o.Subtotal, true
}

// HasSubtotal returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasSubtotal() bool {
	if o != nil && !IsNil(o.Subtotal) {
		return true
	}

	return false
}

// SetSubtotal gets a reference to the given float32 and assigns it to the Subtotal field.
func (o *GetInvoices200ResponseDataInner) SetSubtotal(v float32) {
	o.Subtotal = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetTax() float32 {
	if o == nil || IsNil(o.Tax) {
		var ret float32
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetTaxOk() (*float32, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given float32 and assigns it to the Tax field.
func (o *GetInvoices200ResponseDataInner) SetTax(v float32) {
	o.Tax = &v
}

// GetTaxSummary returns the TaxSummary field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetTaxSummary() []GetInvoices200ResponseDataInnerTaxSummaryInner {
	if o == nil || IsNil(o.TaxSummary) {
		var ret []GetInvoices200ResponseDataInnerTaxSummaryInner
		return ret
	}
	return o.TaxSummary
}

// GetTaxSummaryOk returns a tuple with the TaxSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetTaxSummaryOk() ([]GetInvoices200ResponseDataInnerTaxSummaryInner, bool) {
	if o == nil || IsNil(o.TaxSummary) {
		return nil, false
	}
	return o.TaxSummary, true
}

// HasTaxSummary returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasTaxSummary() bool {
	if o != nil && !IsNil(o.TaxSummary) {
		return true
	}

	return false
}

// SetTaxSummary gets a reference to the given []GetInvoices200ResponseDataInnerTaxSummaryInner and assigns it to the TaxSummary field.
func (o *GetInvoices200ResponseDataInner) SetTaxSummary(v []GetInvoices200ResponseDataInnerTaxSummaryInner) {
	o.TaxSummary = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetInvoices200ResponseDataInner) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoices200ResponseDataInner) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetInvoices200ResponseDataInner) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetInvoices200ResponseDataInner) SetTotal(v float32) {
	o.Total = &v
}

func (o GetInvoices200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInvoices200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingSource) {
		toSerialize["billing_source"] = o.BillingSource
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Subtotal) {
		toSerialize["subtotal"] = o.Subtotal
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.TaxSummary) {
		toSerialize["tax_summary"] = o.TaxSummary
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableGetInvoices200ResponseDataInner struct {
	value *GetInvoices200ResponseDataInner
	isSet bool
}

func (v NullableGetInvoices200ResponseDataInner) Get() *GetInvoices200ResponseDataInner {
	return v.value
}

func (v *NullableGetInvoices200ResponseDataInner) Set(val *GetInvoices200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInvoices200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInvoices200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInvoices200ResponseDataInner(val *GetInvoices200ResponseDataInner) *NullableGetInvoices200ResponseDataInner {
	return &NullableGetInvoices200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetInvoices200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInvoices200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


