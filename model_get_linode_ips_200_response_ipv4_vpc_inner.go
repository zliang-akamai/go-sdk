/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeIps200ResponseIpv4VpcInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeIps200ResponseIpv4VpcInner{}

// GetLinodeIps200ResponseIpv4VpcInner A VPC IP address that exists in Linode's system, specific to the response for the [List VPC IP addresses](https://techdocs.akamai.com/linode-api/reference/get-vpcs-ips) operation. Returned as an empty set for Linodes that are not part of a VPC.
type GetLinodeIps200ResponseIpv4VpcInner struct {
	// Returns `true` if the VPC interface is in use, meaning that the Linode was powered on using the `config_id` to which the interface belongs. Otherwise returns `false`.
	Active *bool `json:"active,omitempty"`
	// An IPv4 address configured for this VPC interface. These follow the [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) private address format. Displayed as `null` if an `address_range`.
	Address NullableString `json:"address,omitempty"`
	// A range of IPv4 addresses configured for this VPC interface. Displayed as `null` if a single `address`.
	AddressRange NullableString `json:"address_range,omitempty"`
	// The globally general entity identifier for the Linode configuration profile where the VPC is included.
	ConfigId *int32 `json:"config_id,omitempty"`
	// The default gateway for the VPC subnet that the IP or IP range belongs to.
	Gateway NullableString `json:"gateway,omitempty"`
	// The globally general API entity identifier for the Linode interface.
	InterfaceId *int32 `json:"interface_id,omitempty"`
	// The identifier for the Linode the VPC interface currently belongs to.
	LinodeId *int32 `json:"linode_id,omitempty"`
	// The public IP address used for NAT 1:1 with the VPC. This is empty if NAT 1:1 isn't used.
	Nat11 *string `json:"nat_1_1,omitempty"`
	// The number of bits set in the `subnet_mask`.
	Prefix NullableInt32 `json:"prefix,omitempty"`
	// The region of the VPC.
	Region *string `json:"region,omitempty"`
	// The `id` of the VPC Subnet for this interface.
	SubnetId *int32 `json:"subnet_id,omitempty"`
	// The mask that separates host bits from network bits for the `address` or `address_range`.
	SubnetMask *string `json:"subnet_mask,omitempty"`
	// The unique globally general API entity identifier for the VPC.
	VpcId *int32 `json:"vpc_id,omitempty"`
}

// NewGetLinodeIps200ResponseIpv4VpcInner instantiates a new GetLinodeIps200ResponseIpv4VpcInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeIps200ResponseIpv4VpcInner() *GetLinodeIps200ResponseIpv4VpcInner {
	this := GetLinodeIps200ResponseIpv4VpcInner{}
	return &this
}

// NewGetLinodeIps200ResponseIpv4VpcInnerWithDefaults instantiates a new GetLinodeIps200ResponseIpv4VpcInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeIps200ResponseIpv4VpcInnerWithDefaults() *GetLinodeIps200ResponseIpv4VpcInner {
	this := GetLinodeIps200ResponseIpv4VpcInner{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetActive(v bool) {
	o.Active = &v
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetAddress() string {
	if o == nil || IsNil(o.Address.Get()) {
		var ret string
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableString and assigns it to the Address field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetAddress(v string) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) UnsetAddress() {
	o.Address.Unset()
}

// GetAddressRange returns the AddressRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetAddressRange() string {
	if o == nil || IsNil(o.AddressRange.Get()) {
		var ret string
		return ret
	}
	return *o.AddressRange.Get()
}

// GetAddressRangeOk returns a tuple with the AddressRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetAddressRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddressRange.Get(), o.AddressRange.IsSet()
}

// HasAddressRange returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasAddressRange() bool {
	if o != nil && o.AddressRange.IsSet() {
		return true
	}

	return false
}

// SetAddressRange gets a reference to the given NullableString and assigns it to the AddressRange field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetAddressRange(v string) {
	o.AddressRange.Set(&v)
}
// SetAddressRangeNil sets the value for AddressRange to be an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetAddressRangeNil() {
	o.AddressRange.Set(nil)
}

// UnsetAddressRange ensures that no value is present for AddressRange, not even an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) UnsetAddressRange() {
	o.AddressRange.Unset()
}

// GetConfigId returns the ConfigId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetConfigId() int32 {
	if o == nil || IsNil(o.ConfigId) {
		var ret int32
		return ret
	}
	return *o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetConfigIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigId) {
		return nil, false
	}
	return o.ConfigId, true
}

// HasConfigId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasConfigId() bool {
	if o != nil && !IsNil(o.ConfigId) {
		return true
	}

	return false
}

// SetConfigId gets a reference to the given int32 and assigns it to the ConfigId field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetConfigId(v int32) {
	o.ConfigId = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetGateway() string {
	if o == nil || IsNil(o.Gateway.Get()) {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) UnsetGateway() {
	o.Gateway.Unset()
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetInterfaceId() int32 {
	if o == nil || IsNil(o.InterfaceId) {
		var ret int32
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetInterfaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given int32 and assigns it to the InterfaceId field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetInterfaceId(v int32) {
	o.InterfaceId = &v
}

// GetLinodeId returns the LinodeId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetLinodeId() int32 {
	if o == nil || IsNil(o.LinodeId) {
		var ret int32
		return ret
	}
	return *o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetLinodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LinodeId) {
		return nil, false
	}
	return o.LinodeId, true
}

// HasLinodeId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasLinodeId() bool {
	if o != nil && !IsNil(o.LinodeId) {
		return true
	}

	return false
}

// SetLinodeId gets a reference to the given int32 and assigns it to the LinodeId field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetLinodeId(v int32) {
	o.LinodeId = &v
}

// GetNat11 returns the Nat11 field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetNat11() string {
	if o == nil || IsNil(o.Nat11) {
		var ret string
		return ret
	}
	return *o.Nat11
}

// GetNat11Ok returns a tuple with the Nat11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetNat11Ok() (*string, bool) {
	if o == nil || IsNil(o.Nat11) {
		return nil, false
	}
	return o.Nat11, true
}

// HasNat11 returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasNat11() bool {
	if o != nil && !IsNil(o.Nat11) {
		return true
	}

	return false
}

// SetNat11 gets a reference to the given string and assigns it to the Nat11 field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetNat11(v string) {
	o.Nat11 = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetPrefix() int32 {
	if o == nil || IsNil(o.Prefix.Get()) {
		var ret int32
		return ret
	}
	return *o.Prefix.Get()
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetPrefixOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prefix.Get(), o.Prefix.IsSet()
}

// HasPrefix returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasPrefix() bool {
	if o != nil && o.Prefix.IsSet() {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given NullableInt32 and assigns it to the Prefix field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetPrefix(v int32) {
	o.Prefix.Set(&v)
}
// SetPrefixNil sets the value for Prefix to be an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetPrefixNil() {
	o.Prefix.Set(nil)
}

// UnsetPrefix ensures that no value is present for Prefix, not even an explicit nil
func (o *GetLinodeIps200ResponseIpv4VpcInner) UnsetPrefix() {
	o.Prefix.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetRegion(v string) {
	o.Region = &v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetSubnetId() int32 {
	if o == nil || IsNil(o.SubnetId) {
		var ret int32
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetSubnetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubnetId) {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasSubnetId() bool {
	if o != nil && !IsNil(o.SubnetId) {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given int32 and assigns it to the SubnetId field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetSubnetId(v int32) {
	o.SubnetId = &v
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetSubnetMask() string {
	if o == nil || IsNil(o.SubnetMask) {
		var ret string
		return ret
	}
	return *o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetSubnetMaskOk() (*string, bool) {
	if o == nil || IsNil(o.SubnetMask) {
		return nil, false
	}
	return o.SubnetMask, true
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasSubnetMask() bool {
	if o != nil && !IsNil(o.SubnetMask) {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given string and assigns it to the SubnetMask field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetSubnetMask(v string) {
	o.SubnetMask = &v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetVpcId() int32 {
	if o == nil || IsNil(o.VpcId) {
		var ret int32
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) GetVpcIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VpcId) {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv4VpcInner) HasVpcId() bool {
	if o != nil && !IsNil(o.VpcId) {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given int32 and assigns it to the VpcId field.
func (o *GetLinodeIps200ResponseIpv4VpcInner) SetVpcId(v int32) {
	o.VpcId = &v
}

func (o GetLinodeIps200ResponseIpv4VpcInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeIps200ResponseIpv4VpcInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	if o.AddressRange.IsSet() {
		toSerialize["address_range"] = o.AddressRange.Get()
	}
	if !IsNil(o.ConfigId) {
		toSerialize["config_id"] = o.ConfigId
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interface_id"] = o.InterfaceId
	}
	if !IsNil(o.LinodeId) {
		toSerialize["linode_id"] = o.LinodeId
	}
	if !IsNil(o.Nat11) {
		toSerialize["nat_1_1"] = o.Nat11
	}
	if o.Prefix.IsSet() {
		toSerialize["prefix"] = o.Prefix.Get()
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SubnetId) {
		toSerialize["subnet_id"] = o.SubnetId
	}
	if !IsNil(o.SubnetMask) {
		toSerialize["subnet_mask"] = o.SubnetMask
	}
	if !IsNil(o.VpcId) {
		toSerialize["vpc_id"] = o.VpcId
	}
	return toSerialize, nil
}

type NullableGetLinodeIps200ResponseIpv4VpcInner struct {
	value *GetLinodeIps200ResponseIpv4VpcInner
	isSet bool
}

func (v NullableGetLinodeIps200ResponseIpv4VpcInner) Get() *GetLinodeIps200ResponseIpv4VpcInner {
	return v.value
}

func (v *NullableGetLinodeIps200ResponseIpv4VpcInner) Set(val *GetLinodeIps200ResponseIpv4VpcInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeIps200ResponseIpv4VpcInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeIps200ResponseIpv4VpcInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeIps200ResponseIpv4VpcInner(val *GetLinodeIps200ResponseIpv4VpcInner) *NullableGetLinodeIps200ResponseIpv4VpcInner {
	return &NullableGetLinodeIps200ResponseIpv4VpcInner{value: val, isSet: true}
}

func (v NullableGetLinodeIps200ResponseIpv4VpcInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeIps200ResponseIpv4VpcInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


