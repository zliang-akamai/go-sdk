/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GrantsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GrantsResponse{}

// GrantsResponse A structure representing all grants a restricted User has on the Account. Not available for unrestricted users, as they have access to everything without grants. If retrieved from the `/profile/grants` endpoint, entities to which a User has no access will be omitted.
type GrantsResponse struct {
	// The grants this User has for each Database that is owned by this Account.
	Database []GetUserGrants200ResponseDatabaseInner `json:"database,omitempty"`
	// The grants this User has for each Domain that is owned by this Account.
	Domain []GetUserGrants200ResponseDatabaseInner `json:"domain,omitempty"`
	// The grants this User has for each Firewall that is owned by this Account.
	Firewall []GetUserGrants200ResponseDatabaseInner `json:"firewall,omitempty"`
	Global *GetUserGrants200ResponseGlobal `json:"global,omitempty"`
	// The grants this User has for each Image that is owned by this Account.
	Image []GetUserGrants200ResponseDatabaseInner `json:"image,omitempty"`
	// The grants this User has for each Linode that is owned by this Account.
	Linode []GetUserGrants200ResponseDatabaseInner `json:"linode,omitempty"`
	// The grants this User has for each Longview Client that is owned by this Account.
	Longview []GetUserGrants200ResponseDatabaseInner `json:"longview,omitempty"`
	// The grants this User has for each NodeBalancer that is owned by this Account.
	Nodebalancer []GetUserGrants200ResponseDatabaseInner `json:"nodebalancer,omitempty"`
	// The grants this User has for each Placement Group that is owned by this Account.
	PlacementGroup []GetUserGrants200ResponseDatabaseInner `json:"placement_group,omitempty"`
	// The grants this User has for each StackScript that is owned by this Account.
	Stackscript []GetUserGrants200ResponseDatabaseInner `json:"stackscript,omitempty"`
	// The grants this User has for each Block Storage Volume that is owned by this Account.
	Volume []GetUserGrants200ResponseDatabaseInner `json:"volume,omitempty"`
	// The grants this User has for each VPC that is owned by this Account.
	Vpc []GetUserGrants200ResponseDatabaseInner `json:"vpc,omitempty"`
}

// NewGrantsResponse instantiates a new GrantsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrantsResponse() *GrantsResponse {
	this := GrantsResponse{}
	return &this
}

// NewGrantsResponseWithDefaults instantiates a new GrantsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrantsResponseWithDefaults() *GrantsResponse {
	this := GrantsResponse{}
	return &this
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *GrantsResponse) GetDatabase() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Database) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetDatabaseOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *GrantsResponse) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Database field.
func (o *GrantsResponse) SetDatabase(v []GetUserGrants200ResponseDatabaseInner) {
	o.Database = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *GrantsResponse) GetDomain() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Domain) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetDomainOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *GrantsResponse) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Domain field.
func (o *GrantsResponse) SetDomain(v []GetUserGrants200ResponseDatabaseInner) {
	o.Domain = v
}

// GetFirewall returns the Firewall field value if set, zero value otherwise.
func (o *GrantsResponse) GetFirewall() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Firewall) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Firewall
}

// GetFirewallOk returns a tuple with the Firewall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetFirewallOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Firewall) {
		return nil, false
	}
	return o.Firewall, true
}

// HasFirewall returns a boolean if a field has been set.
func (o *GrantsResponse) HasFirewall() bool {
	if o != nil && !IsNil(o.Firewall) {
		return true
	}

	return false
}

// SetFirewall gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Firewall field.
func (o *GrantsResponse) SetFirewall(v []GetUserGrants200ResponseDatabaseInner) {
	o.Firewall = v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *GrantsResponse) GetGlobal() GetUserGrants200ResponseGlobal {
	if o == nil || IsNil(o.Global) {
		var ret GetUserGrants200ResponseGlobal
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetGlobalOk() (*GetUserGrants200ResponseGlobal, bool) {
	if o == nil || IsNil(o.Global) {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *GrantsResponse) HasGlobal() bool {
	if o != nil && !IsNil(o.Global) {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given GetUserGrants200ResponseGlobal and assigns it to the Global field.
func (o *GrantsResponse) SetGlobal(v GetUserGrants200ResponseGlobal) {
	o.Global = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GrantsResponse) GetImage() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Image) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetImageOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GrantsResponse) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Image field.
func (o *GrantsResponse) SetImage(v []GetUserGrants200ResponseDatabaseInner) {
	o.Image = v
}

// GetLinode returns the Linode field value if set, zero value otherwise.
func (o *GrantsResponse) GetLinode() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Linode) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Linode
}

// GetLinodeOk returns a tuple with the Linode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetLinodeOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Linode) {
		return nil, false
	}
	return o.Linode, true
}

// HasLinode returns a boolean if a field has been set.
func (o *GrantsResponse) HasLinode() bool {
	if o != nil && !IsNil(o.Linode) {
		return true
	}

	return false
}

// SetLinode gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Linode field.
func (o *GrantsResponse) SetLinode(v []GetUserGrants200ResponseDatabaseInner) {
	o.Linode = v
}

// GetLongview returns the Longview field value if set, zero value otherwise.
func (o *GrantsResponse) GetLongview() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Longview) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Longview
}

// GetLongviewOk returns a tuple with the Longview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetLongviewOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Longview) {
		return nil, false
	}
	return o.Longview, true
}

// HasLongview returns a boolean if a field has been set.
func (o *GrantsResponse) HasLongview() bool {
	if o != nil && !IsNil(o.Longview) {
		return true
	}

	return false
}

// SetLongview gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Longview field.
func (o *GrantsResponse) SetLongview(v []GetUserGrants200ResponseDatabaseInner) {
	o.Longview = v
}

// GetNodebalancer returns the Nodebalancer field value if set, zero value otherwise.
func (o *GrantsResponse) GetNodebalancer() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Nodebalancer) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Nodebalancer
}

// GetNodebalancerOk returns a tuple with the Nodebalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetNodebalancerOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Nodebalancer) {
		return nil, false
	}
	return o.Nodebalancer, true
}

// HasNodebalancer returns a boolean if a field has been set.
func (o *GrantsResponse) HasNodebalancer() bool {
	if o != nil && !IsNil(o.Nodebalancer) {
		return true
	}

	return false
}

// SetNodebalancer gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Nodebalancer field.
func (o *GrantsResponse) SetNodebalancer(v []GetUserGrants200ResponseDatabaseInner) {
	o.Nodebalancer = v
}

// GetPlacementGroup returns the PlacementGroup field value if set, zero value otherwise.
func (o *GrantsResponse) GetPlacementGroup() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.PlacementGroup) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.PlacementGroup
}

// GetPlacementGroupOk returns a tuple with the PlacementGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetPlacementGroupOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.PlacementGroup) {
		return nil, false
	}
	return o.PlacementGroup, true
}

// HasPlacementGroup returns a boolean if a field has been set.
func (o *GrantsResponse) HasPlacementGroup() bool {
	if o != nil && !IsNil(o.PlacementGroup) {
		return true
	}

	return false
}

// SetPlacementGroup gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the PlacementGroup field.
func (o *GrantsResponse) SetPlacementGroup(v []GetUserGrants200ResponseDatabaseInner) {
	o.PlacementGroup = v
}

// GetStackscript returns the Stackscript field value if set, zero value otherwise.
func (o *GrantsResponse) GetStackscript() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Stackscript) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Stackscript
}

// GetStackscriptOk returns a tuple with the Stackscript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetStackscriptOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Stackscript) {
		return nil, false
	}
	return o.Stackscript, true
}

// HasStackscript returns a boolean if a field has been set.
func (o *GrantsResponse) HasStackscript() bool {
	if o != nil && !IsNil(o.Stackscript) {
		return true
	}

	return false
}

// SetStackscript gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Stackscript field.
func (o *GrantsResponse) SetStackscript(v []GetUserGrants200ResponseDatabaseInner) {
	o.Stackscript = v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *GrantsResponse) GetVolume() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Volume) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetVolumeOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *GrantsResponse) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Volume field.
func (o *GrantsResponse) SetVolume(v []GetUserGrants200ResponseDatabaseInner) {
	o.Volume = v
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *GrantsResponse) GetVpc() []GetUserGrants200ResponseDatabaseInner {
	if o == nil || IsNil(o.Vpc) {
		var ret []GetUserGrants200ResponseDatabaseInner
		return ret
	}
	return o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrantsResponse) GetVpcOk() ([]GetUserGrants200ResponseDatabaseInner, bool) {
	if o == nil || IsNil(o.Vpc) {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *GrantsResponse) HasVpc() bool {
	if o != nil && !IsNil(o.Vpc) {
		return true
	}

	return false
}

// SetVpc gets a reference to the given []GetUserGrants200ResponseDatabaseInner and assigns it to the Vpc field.
func (o *GrantsResponse) SetVpc(v []GetUserGrants200ResponseDatabaseInner) {
	o.Vpc = v
}

func (o GrantsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GrantsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Firewall) {
		toSerialize["firewall"] = o.Firewall
	}
	if !IsNil(o.Global) {
		toSerialize["global"] = o.Global
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Linode) {
		toSerialize["linode"] = o.Linode
	}
	if !IsNil(o.Longview) {
		toSerialize["longview"] = o.Longview
	}
	if !IsNil(o.Nodebalancer) {
		toSerialize["nodebalancer"] = o.Nodebalancer
	}
	if !IsNil(o.PlacementGroup) {
		toSerialize["placement_group"] = o.PlacementGroup
	}
	if !IsNil(o.Stackscript) {
		toSerialize["stackscript"] = o.Stackscript
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	if !IsNil(o.Vpc) {
		toSerialize["vpc"] = o.Vpc
	}
	return toSerialize, nil
}

type NullableGrantsResponse struct {
	value *GrantsResponse
	isSet bool
}

func (v NullableGrantsResponse) Get() *GrantsResponse {
	return v.value
}

func (v *NullableGrantsResponse) Set(val *GrantsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGrantsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGrantsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrantsResponse(val *GrantsResponse) *NullableGrantsResponse {
	return &NullableGrantsResponse{value: val, isSet: true}
}

func (v NullableGrantsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrantsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


