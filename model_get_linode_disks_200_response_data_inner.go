/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetLinodeDisks200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeDisks200ResponseDataInner{}

// GetLinodeDisks200ResponseDataInner struct for GetLinodeDisks200ResponseDataInner
type GetLinodeDisks200ResponseDataInner struct {
	// When this Disk was created.
	Created *time.Time `json:"created,omitempty"`
	// Displays if encryption is enabled on this disk. This setting is based on the `disk_encryption` setting of the Linode.
	DiskEncryption *string `json:"disk_encryption,omitempty"`
	// The file system of the disk. This can be `raw`, which indicates no file system, just a raw binary stream, `swap` for a Linux swap area, `ext3` or `ext4` for the ext3 of ext4 journaling file systems for Linux, respectively, or `initrd` for uncompressed initrd, ext2 with a maximum size of 32 MB.
	Filesystem *string `json:"filesystem,omitempty"`
	// This disk's ID. You need this value to run other operations that interact with the disk.
	Id *int32 `json:"id,omitempty"`
	// The name of the disk. This is for display purposes only.
	Label *string `json:"label,omitempty"`
	// The size of the disk in MB.
	Size *int32 `json:"size,omitempty"`
	// The current state of the disk.
	Status *string `json:"status,omitempty"`
	// When this disk was last updated.
	Updated *time.Time `json:"updated,omitempty"`
}

// NewGetLinodeDisks200ResponseDataInner instantiates a new GetLinodeDisks200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeDisks200ResponseDataInner() *GetLinodeDisks200ResponseDataInner {
	this := GetLinodeDisks200ResponseDataInner{}
	return &this
}

// NewGetLinodeDisks200ResponseDataInnerWithDefaults instantiates a new GetLinodeDisks200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeDisks200ResponseDataInnerWithDefaults() *GetLinodeDisks200ResponseDataInner {
	this := GetLinodeDisks200ResponseDataInner{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetLinodeDisks200ResponseDataInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDiskEncryption returns the DiskEncryption field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetDiskEncryption() string {
	if o == nil || IsNil(o.DiskEncryption) {
		var ret string
		return ret
	}
	return *o.DiskEncryption
}

// GetDiskEncryptionOk returns a tuple with the DiskEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetDiskEncryptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiskEncryption) {
		return nil, false
	}
	return o.DiskEncryption, true
}

// HasDiskEncryption returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasDiskEncryption() bool {
	if o != nil && !IsNil(o.DiskEncryption) {
		return true
	}

	return false
}

// SetDiskEncryption gets a reference to the given string and assigns it to the DiskEncryption field.
func (o *GetLinodeDisks200ResponseDataInner) SetDiskEncryption(v string) {
	o.DiskEncryption = &v
}

// GetFilesystem returns the Filesystem field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetFilesystem() string {
	if o == nil || IsNil(o.Filesystem) {
		var ret string
		return ret
	}
	return *o.Filesystem
}

// GetFilesystemOk returns a tuple with the Filesystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetFilesystemOk() (*string, bool) {
	if o == nil || IsNil(o.Filesystem) {
		return nil, false
	}
	return o.Filesystem, true
}

// HasFilesystem returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasFilesystem() bool {
	if o != nil && !IsNil(o.Filesystem) {
		return true
	}

	return false
}

// SetFilesystem gets a reference to the given string and assigns it to the Filesystem field.
func (o *GetLinodeDisks200ResponseDataInner) SetFilesystem(v string) {
	o.Filesystem = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetLinodeDisks200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetLinodeDisks200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *GetLinodeDisks200ResponseDataInner) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetLinodeDisks200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetLinodeDisks200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeDisks200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetLinodeDisks200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetLinodeDisks200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o GetLinodeDisks200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeDisks200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.DiskEncryption) {
		toSerialize["disk_encryption"] = o.DiskEncryption
	}
	if !IsNil(o.Filesystem) {
		toSerialize["filesystem"] = o.Filesystem
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullableGetLinodeDisks200ResponseDataInner struct {
	value *GetLinodeDisks200ResponseDataInner
	isSet bool
}

func (v NullableGetLinodeDisks200ResponseDataInner) Get() *GetLinodeDisks200ResponseDataInner {
	return v.value
}

func (v *NullableGetLinodeDisks200ResponseDataInner) Set(val *GetLinodeDisks200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeDisks200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeDisks200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeDisks200ResponseDataInner(val *GetLinodeDisks200ResponseDataInner) *NullableGetLinodeDisks200ResponseDataInner {
	return &NullableGetLinodeDisks200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetLinodeDisks200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeDisks200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


