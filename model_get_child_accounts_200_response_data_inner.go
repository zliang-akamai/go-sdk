/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetChildAccounts200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetChildAccounts200ResponseDataInner{}

// GetChildAccounts200ResponseDataInner Child account object.
type GetChildAccounts200ResponseDataInner struct {
	// The activation date and time for the child account.
	ActiveSince *time.Time `json:"active_since,omitempty"`
	// First line of this child account's billing address.
	Address1 *string `json:"address_1,omitempty"`
	// Second line of this child account's billing address, if applicable.
	Address2 *string `json:"address_2,omitempty"`
	// This child account's balance, in US dollars.
	Balance *float32 `json:"balance,omitempty"`
	// This child account's current estimated invoice in US dollars. This is not your final invoice balance. Transfer charges are not included in the estimate.
	BalanceUninvoiced *float32 `json:"balance_uninvoiced,omitempty"`
	// The source of service charges for this account, as determined by its relationship with Akamai. The API returns a value of `external` to describe a child account in a parent-child account environment.
	BillingSource *string `json:"billing_source,omitempty"`
	// A list of the capabilities the child account supports.
	Capabilities []string `json:"capabilities,omitempty"`
	// The city for this child account's billing address.
	City *string `json:"city,omitempty"`
	// The company name for the owner of this child account. It can't include any of these characters: `<` `>` `(` `)` `\"` `=`. You can't change this value yourself. We use it to create the proxy users that a parent account uses to access a child account. Talk to your account team if you need to change this value.
	Company *string `json:"company,omitempty"`
	// The two-letter ISO 3166 country code for this child account's billing address.
	Country *string `json:"country,omitempty"`
	CreditCard *GetChildAccounts200ResponseDataInnerCreditCard `json:"credit_card,omitempty"`
	// The email address of the owner of this child account.
	Email *string `json:"email,omitempty"`
	// An external, unique identifier that Akamai assigned to the child account.
	Euuid *string `json:"euuid,omitempty"`
	// The first name of the owner of this child account. It can't include any of these characters: `<` `>` `(` `)` `\"` `=`.
	FirstName *string `json:"first_name,omitempty"`
	// The last name of the owner of this child account. It can't include any of these characters: `<` `>` `(` `)` `\"` `=`.
	LastName *string `json:"last_name,omitempty"`
	// The phone number for the owner of this child account.
	Phone *string `json:"phone,omitempty"`
	// The state or province for the billing address (`address_1` and `address_2, if applicable`). If in the United States (US) or Canada (CA), this is the two-letter ISO 3166 State or Province code.  __Note__. If this is a US military address, use state abbreviations (AA, AE, AP).
	State *string `json:"state,omitempty"`
	// The tax identification number for this child account. Use this for tax calculations in some countries. If you live in a country that doesn't collect taxes, ensure this is an empty string (`\"\"`).
	TaxId *string `json:"tax_id,omitempty"`
	// The zip code of this Account's billing address. The following restrictions apply:  - Can only contain ASCII letters, numbers, and hyphens (`-`). - Can't contain more than 9 letter or number characters.
	Zip *string `json:"zip,omitempty"`
}

// NewGetChildAccounts200ResponseDataInner instantiates a new GetChildAccounts200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChildAccounts200ResponseDataInner() *GetChildAccounts200ResponseDataInner {
	this := GetChildAccounts200ResponseDataInner{}
	return &this
}

// NewGetChildAccounts200ResponseDataInnerWithDefaults instantiates a new GetChildAccounts200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChildAccounts200ResponseDataInnerWithDefaults() *GetChildAccounts200ResponseDataInner {
	this := GetChildAccounts200ResponseDataInner{}
	return &this
}

// GetActiveSince returns the ActiveSince field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetActiveSince() time.Time {
	if o == nil || IsNil(o.ActiveSince) {
		var ret time.Time
		return ret
	}
	return *o.ActiveSince
}

// GetActiveSinceOk returns a tuple with the ActiveSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetActiveSinceOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActiveSince) {
		return nil, false
	}
	return o.ActiveSince, true
}

// HasActiveSince returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasActiveSince() bool {
	if o != nil && !IsNil(o.ActiveSince) {
		return true
	}

	return false
}

// SetActiveSince gets a reference to the given time.Time and assigns it to the ActiveSince field.
func (o *GetChildAccounts200ResponseDataInner) SetActiveSince(v time.Time) {
	o.ActiveSince = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetAddress1() string {
	if o == nil || IsNil(o.Address1) {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.Address1) {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasAddress1() bool {
	if o != nil && !IsNil(o.Address1) {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *GetChildAccounts200ResponseDataInner) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *GetChildAccounts200ResponseDataInner) SetAddress2(v string) {
	o.Address2 = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetBalance() float32 {
	if o == nil || IsNil(o.Balance) {
		var ret float32
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetBalanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given float32 and assigns it to the Balance field.
func (o *GetChildAccounts200ResponseDataInner) SetBalance(v float32) {
	o.Balance = &v
}

// GetBalanceUninvoiced returns the BalanceUninvoiced field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetBalanceUninvoiced() float32 {
	if o == nil || IsNil(o.BalanceUninvoiced) {
		var ret float32
		return ret
	}
	return *o.BalanceUninvoiced
}

// GetBalanceUninvoicedOk returns a tuple with the BalanceUninvoiced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetBalanceUninvoicedOk() (*float32, bool) {
	if o == nil || IsNil(o.BalanceUninvoiced) {
		return nil, false
	}
	return o.BalanceUninvoiced, true
}

// HasBalanceUninvoiced returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasBalanceUninvoiced() bool {
	if o != nil && !IsNil(o.BalanceUninvoiced) {
		return true
	}

	return false
}

// SetBalanceUninvoiced gets a reference to the given float32 and assigns it to the BalanceUninvoiced field.
func (o *GetChildAccounts200ResponseDataInner) SetBalanceUninvoiced(v float32) {
	o.BalanceUninvoiced = &v
}

// GetBillingSource returns the BillingSource field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetBillingSource() string {
	if o == nil || IsNil(o.BillingSource) {
		var ret string
		return ret
	}
	return *o.BillingSource
}

// GetBillingSourceOk returns a tuple with the BillingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetBillingSourceOk() (*string, bool) {
	if o == nil || IsNil(o.BillingSource) {
		return nil, false
	}
	return o.BillingSource, true
}

// HasBillingSource returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasBillingSource() bool {
	if o != nil && !IsNil(o.BillingSource) {
		return true
	}

	return false
}

// SetBillingSource gets a reference to the given string and assigns it to the BillingSource field.
func (o *GetChildAccounts200ResponseDataInner) SetBillingSource(v string) {
	o.BillingSource = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetCapabilities() []string {
	if o == nil || IsNil(o.Capabilities) {
		var ret []string
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetCapabilitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []string and assigns it to the Capabilities field.
func (o *GetChildAccounts200ResponseDataInner) SetCapabilities(v []string) {
	o.Capabilities = v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *GetChildAccounts200ResponseDataInner) SetCity(v string) {
	o.City = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *GetChildAccounts200ResponseDataInner) SetCompany(v string) {
	o.Company = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *GetChildAccounts200ResponseDataInner) SetCountry(v string) {
	o.Country = &v
}

// GetCreditCard returns the CreditCard field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetCreditCard() GetChildAccounts200ResponseDataInnerCreditCard {
	if o == nil || IsNil(o.CreditCard) {
		var ret GetChildAccounts200ResponseDataInnerCreditCard
		return ret
	}
	return *o.CreditCard
}

// GetCreditCardOk returns a tuple with the CreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetCreditCardOk() (*GetChildAccounts200ResponseDataInnerCreditCard, bool) {
	if o == nil || IsNil(o.CreditCard) {
		return nil, false
	}
	return o.CreditCard, true
}

// HasCreditCard returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasCreditCard() bool {
	if o != nil && !IsNil(o.CreditCard) {
		return true
	}

	return false
}

// SetCreditCard gets a reference to the given GetChildAccounts200ResponseDataInnerCreditCard and assigns it to the CreditCard field.
func (o *GetChildAccounts200ResponseDataInner) SetCreditCard(v GetChildAccounts200ResponseDataInnerCreditCard) {
	o.CreditCard = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetChildAccounts200ResponseDataInner) SetEmail(v string) {
	o.Email = &v
}

// GetEuuid returns the Euuid field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetEuuid() string {
	if o == nil || IsNil(o.Euuid) {
		var ret string
		return ret
	}
	return *o.Euuid
}

// GetEuuidOk returns a tuple with the Euuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetEuuidOk() (*string, bool) {
	if o == nil || IsNil(o.Euuid) {
		return nil, false
	}
	return o.Euuid, true
}

// HasEuuid returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasEuuid() bool {
	if o != nil && !IsNil(o.Euuid) {
		return true
	}

	return false
}

// SetEuuid gets a reference to the given string and assigns it to the Euuid field.
func (o *GetChildAccounts200ResponseDataInner) SetEuuid(v string) {
	o.Euuid = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *GetChildAccounts200ResponseDataInner) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *GetChildAccounts200ResponseDataInner) SetLastName(v string) {
	o.LastName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *GetChildAccounts200ResponseDataInner) SetPhone(v string) {
	o.Phone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetChildAccounts200ResponseDataInner) SetState(v string) {
	o.State = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetTaxId() string {
	if o == nil || IsNil(o.TaxId) {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxId) {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasTaxId() bool {
	if o != nil && !IsNil(o.TaxId) {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *GetChildAccounts200ResponseDataInner) SetTaxId(v string) {
	o.TaxId = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *GetChildAccounts200ResponseDataInner) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildAccounts200ResponseDataInner) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *GetChildAccounts200ResponseDataInner) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *GetChildAccounts200ResponseDataInner) SetZip(v string) {
	o.Zip = &v
}

func (o GetChildAccounts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetChildAccounts200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveSince) {
		toSerialize["active_since"] = o.ActiveSince
	}
	if !IsNil(o.Address1) {
		toSerialize["address_1"] = o.Address1
	}
	if !IsNil(o.Address2) {
		toSerialize["address_2"] = o.Address2
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.BalanceUninvoiced) {
		toSerialize["balance_uninvoiced"] = o.BalanceUninvoiced
	}
	if !IsNil(o.BillingSource) {
		toSerialize["billing_source"] = o.BillingSource
	}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CreditCard) {
		toSerialize["credit_card"] = o.CreditCard
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Euuid) {
		toSerialize["euuid"] = o.Euuid
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.TaxId) {
		toSerialize["tax_id"] = o.TaxId
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	return toSerialize, nil
}

type NullableGetChildAccounts200ResponseDataInner struct {
	value *GetChildAccounts200ResponseDataInner
	isSet bool
}

func (v NullableGetChildAccounts200ResponseDataInner) Get() *GetChildAccounts200ResponseDataInner {
	return v.value
}

func (v *NullableGetChildAccounts200ResponseDataInner) Set(val *GetChildAccounts200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChildAccounts200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChildAccounts200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChildAccounts200ResponseDataInner(val *GetChildAccounts200ResponseDataInner) *NullableGetChildAccounts200ResponseDataInner {
	return &NullableGetChildAccounts200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetChildAccounts200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChildAccounts200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


