/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostNodeBalancerRequestConfigsInnerNodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostNodeBalancerRequestConfigsInnerNodesInner{}

// PostNodeBalancerRequestConfigsInnerNodesInner A NodeBalancerNode represents a single backend serving requests for a single port of a NodeBalancer.  Nodes are specific to NodeBalancer Configs, and serve traffic over their private IP.  If the same Linode is serving traffic for more than one port on the same NodeBalancer, one NodeBalancer Node is required for each config (port) it should serve requests on.  For example, if you have four backends, and each should response to both HTTP and HTTPS requests, you will need two NodeBalancerConfigs (port 80 and port 443) and four backends each - one for each of the Linodes serving requests for that port.
type PostNodeBalancerRequestConfigsInnerNodesInner struct {
	// The private IP Address where this backend can be reached. This _must_ be a private IP address.
	Address *string `json:"address,omitempty"`
	// The NodeBalancer Config ID that this Node belongs to.
	ConfigId *int32 `json:"config_id,omitempty"`
	// This node's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The label for this node.  This is for display purposes only.
	Label *string `json:"label,omitempty" validate:"regexp=[a-zA-Z0-9-_.]{3,32}"`
	// The mode this NodeBalancer should use when sending traffic to this backend.  - If set to `accept` this backend is accepting traffic. - If set to `reject` this backend will not receive traffic. - If set to `drain` this backend will not receive _new_ traffic, but connections already pinned to it will continue to be routed to it. - If set to `backup`, this backend will only receive traffic if all `accept` nodes are down.
	Mode *string `json:"mode,omitempty"`
	// The NodeBalancer ID that this Node belongs to.
	NodebalancerId *int32 `json:"nodebalancer_id,omitempty"`
	// The current status of this node, based on the configured checks of its NodeBalancer Config.
	Status *string `json:"status,omitempty"`
	// Used when picking a backend to serve a request and is not pinned to a single backend yet.  Nodes with a higher weight will receive more traffic.
	Weight *int32 `json:"weight,omitempty"`
}

// NewPostNodeBalancerRequestConfigsInnerNodesInner instantiates a new PostNodeBalancerRequestConfigsInnerNodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostNodeBalancerRequestConfigsInnerNodesInner() *PostNodeBalancerRequestConfigsInnerNodesInner {
	this := PostNodeBalancerRequestConfigsInnerNodesInner{}
	return &this
}

// NewPostNodeBalancerRequestConfigsInnerNodesInnerWithDefaults instantiates a new PostNodeBalancerRequestConfigsInnerNodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostNodeBalancerRequestConfigsInnerNodesInnerWithDefaults() *PostNodeBalancerRequestConfigsInnerNodesInner {
	this := PostNodeBalancerRequestConfigsInnerNodesInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetAddress(v string) {
	o.Address = &v
}

// GetConfigId returns the ConfigId field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetConfigId() int32 {
	if o == nil || IsNil(o.ConfigId) {
		var ret int32
		return ret
	}
	return *o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetConfigIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigId) {
		return nil, false
	}
	return o.ConfigId, true
}

// HasConfigId returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasConfigId() bool {
	if o != nil && !IsNil(o.ConfigId) {
		return true
	}

	return false
}

// SetConfigId gets a reference to the given int32 and assigns it to the ConfigId field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetConfigId(v int32) {
	o.ConfigId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetLabel(v string) {
	o.Label = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetMode(v string) {
	o.Mode = &v
}

// GetNodebalancerId returns the NodebalancerId field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetNodebalancerId() int32 {
	if o == nil || IsNil(o.NodebalancerId) {
		var ret int32
		return ret
	}
	return *o.NodebalancerId
}

// GetNodebalancerIdOk returns a tuple with the NodebalancerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetNodebalancerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NodebalancerId) {
		return nil, false
	}
	return o.NodebalancerId, true
}

// HasNodebalancerId returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasNodebalancerId() bool {
	if o != nil && !IsNil(o.NodebalancerId) {
		return true
	}

	return false
}

// SetNodebalancerId gets a reference to the given int32 and assigns it to the NodebalancerId field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetNodebalancerId(v int32) {
	o.NodebalancerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetStatus(v string) {
	o.Status = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *PostNodeBalancerRequestConfigsInnerNodesInner) SetWeight(v int32) {
	o.Weight = &v
}

func (o PostNodeBalancerRequestConfigsInnerNodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostNodeBalancerRequestConfigsInnerNodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ConfigId) {
		toSerialize["config_id"] = o.ConfigId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.NodebalancerId) {
		toSerialize["nodebalancer_id"] = o.NodebalancerId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullablePostNodeBalancerRequestConfigsInnerNodesInner struct {
	value *PostNodeBalancerRequestConfigsInnerNodesInner
	isSet bool
}

func (v NullablePostNodeBalancerRequestConfigsInnerNodesInner) Get() *PostNodeBalancerRequestConfigsInnerNodesInner {
	return v.value
}

func (v *NullablePostNodeBalancerRequestConfigsInnerNodesInner) Set(val *PostNodeBalancerRequestConfigsInnerNodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostNodeBalancerRequestConfigsInnerNodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostNodeBalancerRequestConfigsInnerNodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostNodeBalancerRequestConfigsInnerNodesInner(val *PostNodeBalancerRequestConfigsInnerNodesInner) *NullablePostNodeBalancerRequestConfigsInnerNodesInner {
	return &NullablePostNodeBalancerRequestConfigsInnerNodesInner{value: val, isSet: true}
}

func (v NullablePostNodeBalancerRequestConfigsInnerNodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostNodeBalancerRequestConfigsInnerNodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


