/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeIps200ResponseIpv6Slaac type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeIps200ResponseIpv6Slaac{}

// GetLinodeIps200ResponseIpv6Slaac A SLAAC IPv6 address that exists in Linode's system.
type GetLinodeIps200ResponseIpv6Slaac struct {
	// The address.
	Address *string `json:"address,omitempty"`
	// The default gateway for this address.
	Gateway *string `json:"gateway,omitempty"`
	// The ID of the Linode this address currently belongs to.
	LinodeId *int32 `json:"linode_id,omitempty"`
	// The network prefix.
	Prefix *int32 `json:"prefix,omitempty"`
	// Whether this is a public or private IP address.
	Public *bool `json:"public,omitempty"`
	// The reverse DNS assigned to this address.
	Rdns *string `json:"rdns,omitempty"`
	// The Region this address resides in.
	Region *string `json:"region,omitempty"`
	// The subnet mask.
	SubnetMask *string `json:"subnet_mask,omitempty"`
	// The type of address this is.
	Type *string `json:"type,omitempty"`
}

// NewGetLinodeIps200ResponseIpv6Slaac instantiates a new GetLinodeIps200ResponseIpv6Slaac object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeIps200ResponseIpv6Slaac() *GetLinodeIps200ResponseIpv6Slaac {
	this := GetLinodeIps200ResponseIpv6Slaac{}
	return &this
}

// NewGetLinodeIps200ResponseIpv6SlaacWithDefaults instantiates a new GetLinodeIps200ResponseIpv6Slaac object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeIps200ResponseIpv6SlaacWithDefaults() *GetLinodeIps200ResponseIpv6Slaac {
	this := GetLinodeIps200ResponseIpv6Slaac{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetAddress(v string) {
	o.Address = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetGateway(v string) {
	o.Gateway = &v
}

// GetLinodeId returns the LinodeId field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetLinodeId() int32 {
	if o == nil || IsNil(o.LinodeId) {
		var ret int32
		return ret
	}
	return *o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetLinodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LinodeId) {
		return nil, false
	}
	return o.LinodeId, true
}

// HasLinodeId returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasLinodeId() bool {
	if o != nil && !IsNil(o.LinodeId) {
		return true
	}

	return false
}

// SetLinodeId gets a reference to the given int32 and assigns it to the LinodeId field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetLinodeId(v int32) {
	o.LinodeId = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetPrefix() int32 {
	if o == nil || IsNil(o.Prefix) {
		var ret int32
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetPrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given int32 and assigns it to the Prefix field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetPrefix(v int32) {
	o.Prefix = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetPublic(v bool) {
	o.Public = &v
}

// GetRdns returns the Rdns field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetRdns() string {
	if o == nil || IsNil(o.Rdns) {
		var ret string
		return ret
	}
	return *o.Rdns
}

// GetRdnsOk returns a tuple with the Rdns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetRdnsOk() (*string, bool) {
	if o == nil || IsNil(o.Rdns) {
		return nil, false
	}
	return o.Rdns, true
}

// HasRdns returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasRdns() bool {
	if o != nil && !IsNil(o.Rdns) {
		return true
	}

	return false
}

// SetRdns gets a reference to the given string and assigns it to the Rdns field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetRdns(v string) {
	o.Rdns = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetRegion(v string) {
	o.Region = &v
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetSubnetMask() string {
	if o == nil || IsNil(o.SubnetMask) {
		var ret string
		return ret
	}
	return *o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetSubnetMaskOk() (*string, bool) {
	if o == nil || IsNil(o.SubnetMask) {
		return nil, false
	}
	return o.SubnetMask, true
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasSubnetMask() bool {
	if o != nil && !IsNil(o.SubnetMask) {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given string and assigns it to the SubnetMask field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetSubnetMask(v string) {
	o.SubnetMask = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetLinodeIps200ResponseIpv6Slaac) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetLinodeIps200ResponseIpv6Slaac) SetType(v string) {
	o.Type = &v
}

func (o GetLinodeIps200ResponseIpv6Slaac) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeIps200ResponseIpv6Slaac) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.LinodeId) {
		toSerialize["linode_id"] = o.LinodeId
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.Rdns) {
		toSerialize["rdns"] = o.Rdns
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SubnetMask) {
		toSerialize["subnet_mask"] = o.SubnetMask
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetLinodeIps200ResponseIpv6Slaac struct {
	value *GetLinodeIps200ResponseIpv6Slaac
	isSet bool
}

func (v NullableGetLinodeIps200ResponseIpv6Slaac) Get() *GetLinodeIps200ResponseIpv6Slaac {
	return v.value
}

func (v *NullableGetLinodeIps200ResponseIpv6Slaac) Set(val *GetLinodeIps200ResponseIpv6Slaac) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeIps200ResponseIpv6Slaac) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeIps200ResponseIpv6Slaac) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeIps200ResponseIpv6Slaac(val *GetLinodeIps200ResponseIpv6Slaac) *NullableGetLinodeIps200ResponseIpv6Slaac {
	return &NullableGetLinodeIps200ResponseIpv6Slaac{value: val, isSet: true}
}

func (v NullableGetLinodeIps200ResponseIpv6Slaac) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeIps200ResponseIpv6Slaac) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


