/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostFirewallsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostFirewallsRequest{}

// PostFirewallsRequest struct for PostFirewallsRequest
type PostFirewallsRequest struct {
	// When this Firewall was created.
	Created *time.Time `json:"created,omitempty"`
	// The Firewall's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The Firewall's label, for display purposes only.  Firewall labels have the following constraints:    - Must begin and end with an alphanumeric character.   - May only consist of alphanumeric characters, hyphens (`-`), underscores (`_`) or periods (`.`).   - Cannot have two hyphens (`--`), underscores (`__`) or periods (`..`) in a row.   - Must be between 3 and 32 characters.   - Must be unique.
	Label *string `json:"label,omitempty" validate:"regexp=^[a-zA-Z]((?!--|__|\\\\.\\\\.)[a-zA-Z0-9-_.])+$"`
	Rules PostFirewallsRequestAllOfRules `json:"rules"`
	// The status of this Firewall.    - When a Firewall is first created its status is `enabled`.   - Run the [Update a firewall](https://techdocs.akamai.com/linode-api/reference/put-firewall) operation to set a Firewall's status to `enabled` or `disabled`.   - Run the [Delete a firewall](https://techdocs.akamai.com/linode-api/reference/delete-firewall) operation to delete a Firewall.
	Status *string `json:"status,omitempty"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `json:"tags,omitempty"`
	// When this Firewall was last updated.
	Updated *time.Time `json:"updated,omitempty"`
	Devices *PostFirewallsRequestAllOfDevices `json:"devices,omitempty"`
}

type _PostFirewallsRequest PostFirewallsRequest

// NewPostFirewallsRequest instantiates a new PostFirewallsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostFirewallsRequest(rules PostFirewallsRequestAllOfRules) *PostFirewallsRequest {
	this := PostFirewallsRequest{}
	this.Rules = rules
	return &this
}

// NewPostFirewallsRequestWithDefaults instantiates a new PostFirewallsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostFirewallsRequestWithDefaults() *PostFirewallsRequest {
	this := PostFirewallsRequest{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PostFirewallsRequest) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PostFirewallsRequest) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PostFirewallsRequest) SetLabel(v string) {
	o.Label = &v
}

// GetRules returns the Rules field value
func (o *PostFirewallsRequest) GetRules() PostFirewallsRequestAllOfRules {
	if o == nil {
		var ret PostFirewallsRequestAllOfRules
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetRulesOk() (*PostFirewallsRequestAllOfRules, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rules, true
}

// SetRules sets field value
func (o *PostFirewallsRequest) SetRules(v PostFirewallsRequestAllOfRules) {
	o.Rules = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostFirewallsRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PostFirewallsRequest) SetTags(v []string) {
	o.Tags = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *PostFirewallsRequest) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *PostFirewallsRequest) GetDevices() PostFirewallsRequestAllOfDevices {
	if o == nil || IsNil(o.Devices) {
		var ret PostFirewallsRequestAllOfDevices
		return ret
	}
	return *o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostFirewallsRequest) GetDevicesOk() (*PostFirewallsRequestAllOfDevices, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *PostFirewallsRequest) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given PostFirewallsRequestAllOfDevices and assigns it to the Devices field.
func (o *PostFirewallsRequest) SetDevices(v PostFirewallsRequestAllOfDevices) {
	o.Devices = &v
}

func (o PostFirewallsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostFirewallsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	toSerialize["rules"] = o.Rules
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	return toSerialize, nil
}

func (o *PostFirewallsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostFirewallsRequest := _PostFirewallsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostFirewallsRequest)

	if err != nil {
		return err
	}

	*o = PostFirewallsRequest(varPostFirewallsRequest)

	return err
}

type NullablePostFirewallsRequest struct {
	value *PostFirewallsRequest
	isSet bool
}

func (v NullablePostFirewallsRequest) Get() *PostFirewallsRequest {
	return v.value
}

func (v *NullablePostFirewallsRequest) Set(val *PostFirewallsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostFirewallsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostFirewallsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostFirewallsRequest(val *PostFirewallsRequest) *NullablePostFirewallsRequest {
	return &NullablePostFirewallsRequest{value: val, isSet: true}
}

func (v NullablePostFirewallsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostFirewallsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


