/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostAttachVolumeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAttachVolumeRequest{}

// PostAttachVolumeRequest struct for PostAttachVolumeRequest
type PostAttachVolumeRequest struct {
	// The ID of the Linode Config to include this Volume in. Must belong to the Linode referenced by `linode_id`. If not given, the last booted Config will be chosen.
	ConfigId *int32 `json:"config_id,omitempty"`
	// The ID of the Linode to attach the volume to.
	LinodeId int32 `json:"linode_id"`
	// Defaults to true, if false is provided, the Volume will not be attached to the Linode Config. In this case more than 8 Volumes may be attached to a Linode if a Linode has 16GB of RAM or more. The number of volumes that can be attached is equal to the number of GB of RAM that the Linode has, up to a maximum of 64. `config_id` should not be passed if this is set to false and linode_id must be passed. The Linode must be running.
	PersistAcrossBoots *bool `json:"persist_across_boots,omitempty"`
}

type _PostAttachVolumeRequest PostAttachVolumeRequest

// NewPostAttachVolumeRequest instantiates a new PostAttachVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAttachVolumeRequest(linodeId int32) *PostAttachVolumeRequest {
	this := PostAttachVolumeRequest{}
	this.LinodeId = linodeId
	return &this
}

// NewPostAttachVolumeRequestWithDefaults instantiates a new PostAttachVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAttachVolumeRequestWithDefaults() *PostAttachVolumeRequest {
	this := PostAttachVolumeRequest{}
	return &this
}

// GetConfigId returns the ConfigId field value if set, zero value otherwise.
func (o *PostAttachVolumeRequest) GetConfigId() int32 {
	if o == nil || IsNil(o.ConfigId) {
		var ret int32
		return ret
	}
	return *o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAttachVolumeRequest) GetConfigIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigId) {
		return nil, false
	}
	return o.ConfigId, true
}

// HasConfigId returns a boolean if a field has been set.
func (o *PostAttachVolumeRequest) HasConfigId() bool {
	if o != nil && !IsNil(o.ConfigId) {
		return true
	}

	return false
}

// SetConfigId gets a reference to the given int32 and assigns it to the ConfigId field.
func (o *PostAttachVolumeRequest) SetConfigId(v int32) {
	o.ConfigId = &v
}

// GetLinodeId returns the LinodeId field value
func (o *PostAttachVolumeRequest) GetLinodeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value
// and a boolean to check if the value has been set.
func (o *PostAttachVolumeRequest) GetLinodeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinodeId, true
}

// SetLinodeId sets field value
func (o *PostAttachVolumeRequest) SetLinodeId(v int32) {
	o.LinodeId = v
}

// GetPersistAcrossBoots returns the PersistAcrossBoots field value if set, zero value otherwise.
func (o *PostAttachVolumeRequest) GetPersistAcrossBoots() bool {
	if o == nil || IsNil(o.PersistAcrossBoots) {
		var ret bool
		return ret
	}
	return *o.PersistAcrossBoots
}

// GetPersistAcrossBootsOk returns a tuple with the PersistAcrossBoots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAttachVolumeRequest) GetPersistAcrossBootsOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistAcrossBoots) {
		return nil, false
	}
	return o.PersistAcrossBoots, true
}

// HasPersistAcrossBoots returns a boolean if a field has been set.
func (o *PostAttachVolumeRequest) HasPersistAcrossBoots() bool {
	if o != nil && !IsNil(o.PersistAcrossBoots) {
		return true
	}

	return false
}

// SetPersistAcrossBoots gets a reference to the given bool and assigns it to the PersistAcrossBoots field.
func (o *PostAttachVolumeRequest) SetPersistAcrossBoots(v bool) {
	o.PersistAcrossBoots = &v
}

func (o PostAttachVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAttachVolumeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigId) {
		toSerialize["config_id"] = o.ConfigId
	}
	toSerialize["linode_id"] = o.LinodeId
	if !IsNil(o.PersistAcrossBoots) {
		toSerialize["persist_across_boots"] = o.PersistAcrossBoots
	}
	return toSerialize, nil
}

func (o *PostAttachVolumeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"linode_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostAttachVolumeRequest := _PostAttachVolumeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostAttachVolumeRequest)

	if err != nil {
		return err
	}

	*o = PostAttachVolumeRequest(varPostAttachVolumeRequest)

	return err
}

type NullablePostAttachVolumeRequest struct {
	value *PostAttachVolumeRequest
	isSet bool
}

func (v NullablePostAttachVolumeRequest) Get() *PostAttachVolumeRequest {
	return v.value
}

func (v *NullablePostAttachVolumeRequest) Set(val *PostAttachVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAttachVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAttachVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAttachVolumeRequest(val *PostAttachVolumeRequest) *NullablePostAttachVolumeRequest {
	return &NullablePostAttachVolumeRequest{value: val, isSet: true}
}

func (v NullablePostAttachVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAttachVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


