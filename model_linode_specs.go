/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LinodeSpecs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinodeSpecs{}

// LinodeSpecs Information about the resources available to this Linode.
type LinodeSpecs struct {
	// The amount of storage space, in MB, this Linode has access to. A typical Linode divides this space between a primary disk with an `image` deployed to it, and a swap disk, usually 512 MB. This is the default configuration created when deploying a Linode with an `image` through [Create a Linode](https://techdocs.akamai.com/linode-api/reference/post-linode-instance). While this configuration is suitable for 99% of use cases, if you need finer control over your Linode's disks, see the [List disks](https://techdocs.akamai.com/linode-api/reference/get-linode-disks) operations.
	Disk *int32 `json:"disk,omitempty"`
	// The number of GPUs this Linode has access to.
	Gpus *int32 `json:"gpus,omitempty"`
	// The amount of RAM, in MB, this Linode has access to.  Typically, a Linode boots with all of its available RAM, but this can be configured in a config profile. See the [List config profiles](https://techdocs.akamai.com/linode-api/reference/get-linode-configs) operation for more information.
	Memory *int32 `json:"memory,omitempty"`
	// The amount of network transfer this Linode is allotted each month.
	Transfer *int32 `json:"transfer,omitempty"`
	// The number of VCPUs this Linode has access to.
	Vcpus *int32 `json:"vcpus,omitempty"`
}

// NewLinodeSpecs instantiates a new LinodeSpecs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinodeSpecs() *LinodeSpecs {
	this := LinodeSpecs{}
	return &this
}

// NewLinodeSpecsWithDefaults instantiates a new LinodeSpecs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinodeSpecsWithDefaults() *LinodeSpecs {
	this := LinodeSpecs{}
	return &this
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *LinodeSpecs) GetDisk() int32 {
	if o == nil || IsNil(o.Disk) {
		var ret int32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeSpecs) GetDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *LinodeSpecs) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given int32 and assigns it to the Disk field.
func (o *LinodeSpecs) SetDisk(v int32) {
	o.Disk = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *LinodeSpecs) GetGpus() int32 {
	if o == nil || IsNil(o.Gpus) {
		var ret int32
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeSpecs) GetGpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *LinodeSpecs) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given int32 and assigns it to the Gpus field.
func (o *LinodeSpecs) SetGpus(v int32) {
	o.Gpus = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *LinodeSpecs) GetMemory() int32 {
	if o == nil || IsNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeSpecs) GetMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *LinodeSpecs) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *LinodeSpecs) SetMemory(v int32) {
	o.Memory = &v
}

// GetTransfer returns the Transfer field value if set, zero value otherwise.
func (o *LinodeSpecs) GetTransfer() int32 {
	if o == nil || IsNil(o.Transfer) {
		var ret int32
		return ret
	}
	return *o.Transfer
}

// GetTransferOk returns a tuple with the Transfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeSpecs) GetTransferOk() (*int32, bool) {
	if o == nil || IsNil(o.Transfer) {
		return nil, false
	}
	return o.Transfer, true
}

// HasTransfer returns a boolean if a field has been set.
func (o *LinodeSpecs) HasTransfer() bool {
	if o != nil && !IsNil(o.Transfer) {
		return true
	}

	return false
}

// SetTransfer gets a reference to the given int32 and assigns it to the Transfer field.
func (o *LinodeSpecs) SetTransfer(v int32) {
	o.Transfer = &v
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise.
func (o *LinodeSpecs) GetVcpus() int32 {
	if o == nil || IsNil(o.Vcpus) {
		var ret int32
		return ret
	}
	return *o.Vcpus
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinodeSpecs) GetVcpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Vcpus) {
		return nil, false
	}
	return o.Vcpus, true
}

// HasVcpus returns a boolean if a field has been set.
func (o *LinodeSpecs) HasVcpus() bool {
	if o != nil && !IsNil(o.Vcpus) {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given int32 and assigns it to the Vcpus field.
func (o *LinodeSpecs) SetVcpus(v int32) {
	o.Vcpus = &v
}

func (o LinodeSpecs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinodeSpecs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Transfer) {
		toSerialize["transfer"] = o.Transfer
	}
	if !IsNil(o.Vcpus) {
		toSerialize["vcpus"] = o.Vcpus
	}
	return toSerialize, nil
}

type NullableLinodeSpecs struct {
	value *LinodeSpecs
	isSet bool
}

func (v NullableLinodeSpecs) Get() *LinodeSpecs {
	return v.value
}

func (v *NullableLinodeSpecs) Set(val *LinodeSpecs) {
	v.value = val
	v.isSet = true
}

func (v NullableLinodeSpecs) IsSet() bool {
	return v.isSet
}

func (v *NullableLinodeSpecs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinodeSpecs(val *LinodeSpecs) *NullableLinodeSpecs {
	return &NullableLinodeSpecs{value: val, isSet: true}
}

func (v NullableLinodeSpecs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinodeSpecs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


