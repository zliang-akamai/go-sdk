/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetNotifications200ResponseDataInnerEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNotifications200ResponseDataInnerEntity{}

// GetNotifications200ResponseDataInnerEntity Detailed information about the notification.
type GetNotifications200ResponseDataInnerEntity struct {
	// The unique ID of the notification's entity, based on the entity type. Returns `null` for an `account` or `promotion` entity.
	Id NullableInt32 `json:"id,omitempty"`
	// The current label for this notification's entity.  Returns `null` for the following entity types:  - `entity_transfer` - `promotion` - `region`
	Label NullableString `json:"label,omitempty"`
	// The type of entity this is related to.
	Type *string `json:"type,omitempty"`
	// The URL where you can access the notification's object. The URL is relative to the domain where you retrieved the notification. This value is `null` for the `promotion` entity type.
	Url NullableString `json:"url,omitempty"`
}

// NewGetNotifications200ResponseDataInnerEntity instantiates a new GetNotifications200ResponseDataInnerEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNotifications200ResponseDataInnerEntity() *GetNotifications200ResponseDataInnerEntity {
	this := GetNotifications200ResponseDataInnerEntity{}
	return &this
}

// NewGetNotifications200ResponseDataInnerEntityWithDefaults instantiates a new GetNotifications200ResponseDataInnerEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNotifications200ResponseDataInnerEntityWithDefaults() *GetNotifications200ResponseDataInnerEntity {
	this := GetNotifications200ResponseDataInnerEntity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetNotifications200ResponseDataInnerEntity) GetId() int32 {
	if o == nil || IsNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetNotifications200ResponseDataInnerEntity) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *GetNotifications200ResponseDataInnerEntity) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *GetNotifications200ResponseDataInnerEntity) SetId(v int32) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) UnsetId() {
	o.Id.Unset()
}

// GetLabel returns the Label field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetNotifications200ResponseDataInnerEntity) GetLabel() string {
	if o == nil || IsNil(o.Label.Get()) {
		var ret string
		return ret
	}
	return *o.Label.Get()
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetNotifications200ResponseDataInnerEntity) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Label.Get(), o.Label.IsSet()
}

// HasLabel returns a boolean if a field has been set.
func (o *GetNotifications200ResponseDataInnerEntity) HasLabel() bool {
	if o != nil && o.Label.IsSet() {
		return true
	}

	return false
}

// SetLabel gets a reference to the given NullableString and assigns it to the Label field.
func (o *GetNotifications200ResponseDataInnerEntity) SetLabel(v string) {
	o.Label.Set(&v)
}
// SetLabelNil sets the value for Label to be an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) SetLabelNil() {
	o.Label.Set(nil)
}

// UnsetLabel ensures that no value is present for Label, not even an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) UnsetLabel() {
	o.Label.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetNotifications200ResponseDataInnerEntity) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNotifications200ResponseDataInnerEntity) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetNotifications200ResponseDataInnerEntity) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetNotifications200ResponseDataInnerEntity) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetNotifications200ResponseDataInnerEntity) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetNotifications200ResponseDataInnerEntity) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *GetNotifications200ResponseDataInnerEntity) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *GetNotifications200ResponseDataInnerEntity) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *GetNotifications200ResponseDataInnerEntity) UnsetUrl() {
	o.Url.Unset()
}

func (o GetNotifications200ResponseDataInnerEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNotifications200ResponseDataInnerEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Label.IsSet() {
		toSerialize["label"] = o.Label.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return toSerialize, nil
}

type NullableGetNotifications200ResponseDataInnerEntity struct {
	value *GetNotifications200ResponseDataInnerEntity
	isSet bool
}

func (v NullableGetNotifications200ResponseDataInnerEntity) Get() *GetNotifications200ResponseDataInnerEntity {
	return v.value
}

func (v *NullableGetNotifications200ResponseDataInnerEntity) Set(val *GetNotifications200ResponseDataInnerEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNotifications200ResponseDataInnerEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNotifications200ResponseDataInnerEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNotifications200ResponseDataInnerEntity(val *GetNotifications200ResponseDataInnerEntity) *NullableGetNotifications200ResponseDataInnerEntity {
	return &NullableGetNotifications200ResponseDataInnerEntity{value: val, isSet: true}
}

func (v NullableGetNotifications200ResponseDataInnerEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNotifications200ResponseDataInnerEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


