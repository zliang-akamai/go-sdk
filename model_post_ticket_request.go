/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostTicketRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTicketRequest{}

// PostTicketRequest An object representing a created Support Ticket - a question or issue and request for help from the Linode support team. Only one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.
type PostTicketRequest struct {
	// The ID of the Managed Database this ticket is regarding, if relevant.
	DatabaseId *int32 `json:"database_id,omitempty"`
	// The full details of the issue or question.
	Description string `json:"description"`
	// The ID of the Domain this ticket is regarding, if relevant.
	DomainId *int32 `json:"domain_id,omitempty"`
	// The ID of the Firewall this ticket is regarding, if relevant.
	FirewallId *int32 `json:"firewall_id,omitempty"`
	// The ID of the Linode this ticket is regarding, if relevant.
	LinodeId *int32 `json:"linode_id,omitempty"`
	// The ID of the Kubernetes cluster this ticket is regarding, if relevant.
	LkeclusterId *int32 `json:"lkecluster_id,omitempty"`
	// The ID of the Longview client this ticket is regarding, if relevant.
	LongviewclientId *int32 `json:"longviewclient_id,omitempty"`
	// Designates if this ticket is related to a [Managed service](https://www.linode.com/products/managed/). If `true`, the following constraints will apply:  - No ID attributes (i.e. `linode_id`, `domain_id`, etc.) should be provided with this request. - Your account must have a managed service [enabled](https://techdocs.akamai.com/linode-api/reference/post-enable-managed-service).
	ManagedIssue *bool `json:"managed_issue,omitempty"`
	// The ID of the NodeBalancer this ticket is regarding, if relevant.
	NodebalancerId *int32 `json:"nodebalancer_id,omitempty"`
	// The [Region](https://techdocs.akamai.com/linode-api/reference/get-regions) ID for the associated VLAN this ticket is regarding.  Only allowed when submitting a VLAN ticket.
	Region *string `json:"region,omitempty"`
	// The summary or title for this SupportTicket.
	Summary string `json:"summary"`
	// The label of the VLAN this ticket is regarding, if relevant. To view your VLANs, run the [List VLANs](https://techdocs.akamai.com/linode-api/reference/get-vlans)) operation.  Requires a specified `region` to identify the VLAN.
	Vlan *string `json:"vlan,omitempty"`
	// The ID of the Volume this ticket is regarding, if relevant.
	VolumeId *int32 `json:"volume_id,omitempty"`
	// The ID of the VPC this ticket is regarding, if relevant.
	VpcId *int32 `json:"vpc_id,omitempty"`
}

type _PostTicketRequest PostTicketRequest

// NewPostTicketRequest instantiates a new PostTicketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTicketRequest(description string, summary string) *PostTicketRequest {
	this := PostTicketRequest{}
	this.Description = description
	this.Summary = summary
	return &this
}

// NewPostTicketRequestWithDefaults instantiates a new PostTicketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTicketRequestWithDefaults() *PostTicketRequest {
	this := PostTicketRequest{}
	return &this
}

// GetDatabaseId returns the DatabaseId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetDatabaseId() int32 {
	if o == nil || IsNil(o.DatabaseId) {
		var ret int32
		return ret
	}
	return *o.DatabaseId
}

// GetDatabaseIdOk returns a tuple with the DatabaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetDatabaseIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DatabaseId) {
		return nil, false
	}
	return o.DatabaseId, true
}

// HasDatabaseId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasDatabaseId() bool {
	if o != nil && !IsNil(o.DatabaseId) {
		return true
	}

	return false
}

// SetDatabaseId gets a reference to the given int32 and assigns it to the DatabaseId field.
func (o *PostTicketRequest) SetDatabaseId(v int32) {
	o.DatabaseId = &v
}

// GetDescription returns the Description field value
func (o *PostTicketRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PostTicketRequest) SetDescription(v string) {
	o.Description = v
}

// GetDomainId returns the DomainId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetDomainId() int32 {
	if o == nil || IsNil(o.DomainId) {
		var ret int32
		return ret
	}
	return *o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetDomainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DomainId) {
		return nil, false
	}
	return o.DomainId, true
}

// HasDomainId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasDomainId() bool {
	if o != nil && !IsNil(o.DomainId) {
		return true
	}

	return false
}

// SetDomainId gets a reference to the given int32 and assigns it to the DomainId field.
func (o *PostTicketRequest) SetDomainId(v int32) {
	o.DomainId = &v
}

// GetFirewallId returns the FirewallId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetFirewallId() int32 {
	if o == nil || IsNil(o.FirewallId) {
		var ret int32
		return ret
	}
	return *o.FirewallId
}

// GetFirewallIdOk returns a tuple with the FirewallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetFirewallIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FirewallId) {
		return nil, false
	}
	return o.FirewallId, true
}

// HasFirewallId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasFirewallId() bool {
	if o != nil && !IsNil(o.FirewallId) {
		return true
	}

	return false
}

// SetFirewallId gets a reference to the given int32 and assigns it to the FirewallId field.
func (o *PostTicketRequest) SetFirewallId(v int32) {
	o.FirewallId = &v
}

// GetLinodeId returns the LinodeId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetLinodeId() int32 {
	if o == nil || IsNil(o.LinodeId) {
		var ret int32
		return ret
	}
	return *o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetLinodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LinodeId) {
		return nil, false
	}
	return o.LinodeId, true
}

// HasLinodeId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasLinodeId() bool {
	if o != nil && !IsNil(o.LinodeId) {
		return true
	}

	return false
}

// SetLinodeId gets a reference to the given int32 and assigns it to the LinodeId field.
func (o *PostTicketRequest) SetLinodeId(v int32) {
	o.LinodeId = &v
}

// GetLkeclusterId returns the LkeclusterId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetLkeclusterId() int32 {
	if o == nil || IsNil(o.LkeclusterId) {
		var ret int32
		return ret
	}
	return *o.LkeclusterId
}

// GetLkeclusterIdOk returns a tuple with the LkeclusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetLkeclusterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LkeclusterId) {
		return nil, false
	}
	return o.LkeclusterId, true
}

// HasLkeclusterId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasLkeclusterId() bool {
	if o != nil && !IsNil(o.LkeclusterId) {
		return true
	}

	return false
}

// SetLkeclusterId gets a reference to the given int32 and assigns it to the LkeclusterId field.
func (o *PostTicketRequest) SetLkeclusterId(v int32) {
	o.LkeclusterId = &v
}

// GetLongviewclientId returns the LongviewclientId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetLongviewclientId() int32 {
	if o == nil || IsNil(o.LongviewclientId) {
		var ret int32
		return ret
	}
	return *o.LongviewclientId
}

// GetLongviewclientIdOk returns a tuple with the LongviewclientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetLongviewclientIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LongviewclientId) {
		return nil, false
	}
	return o.LongviewclientId, true
}

// HasLongviewclientId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasLongviewclientId() bool {
	if o != nil && !IsNil(o.LongviewclientId) {
		return true
	}

	return false
}

// SetLongviewclientId gets a reference to the given int32 and assigns it to the LongviewclientId field.
func (o *PostTicketRequest) SetLongviewclientId(v int32) {
	o.LongviewclientId = &v
}

// GetManagedIssue returns the ManagedIssue field value if set, zero value otherwise.
func (o *PostTicketRequest) GetManagedIssue() bool {
	if o == nil || IsNil(o.ManagedIssue) {
		var ret bool
		return ret
	}
	return *o.ManagedIssue
}

// GetManagedIssueOk returns a tuple with the ManagedIssue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetManagedIssueOk() (*bool, bool) {
	if o == nil || IsNil(o.ManagedIssue) {
		return nil, false
	}
	return o.ManagedIssue, true
}

// HasManagedIssue returns a boolean if a field has been set.
func (o *PostTicketRequest) HasManagedIssue() bool {
	if o != nil && !IsNil(o.ManagedIssue) {
		return true
	}

	return false
}

// SetManagedIssue gets a reference to the given bool and assigns it to the ManagedIssue field.
func (o *PostTicketRequest) SetManagedIssue(v bool) {
	o.ManagedIssue = &v
}

// GetNodebalancerId returns the NodebalancerId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetNodebalancerId() int32 {
	if o == nil || IsNil(o.NodebalancerId) {
		var ret int32
		return ret
	}
	return *o.NodebalancerId
}

// GetNodebalancerIdOk returns a tuple with the NodebalancerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetNodebalancerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NodebalancerId) {
		return nil, false
	}
	return o.NodebalancerId, true
}

// HasNodebalancerId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasNodebalancerId() bool {
	if o != nil && !IsNil(o.NodebalancerId) {
		return true
	}

	return false
}

// SetNodebalancerId gets a reference to the given int32 and assigns it to the NodebalancerId field.
func (o *PostTicketRequest) SetNodebalancerId(v int32) {
	o.NodebalancerId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PostTicketRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PostTicketRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PostTicketRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSummary returns the Summary field value
func (o *PostTicketRequest) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *PostTicketRequest) SetSummary(v string) {
	o.Summary = v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *PostTicketRequest) GetVlan() string {
	if o == nil || IsNil(o.Vlan) {
		var ret string
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetVlanOk() (*string, bool) {
	if o == nil || IsNil(o.Vlan) {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *PostTicketRequest) HasVlan() bool {
	if o != nil && !IsNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given string and assigns it to the Vlan field.
func (o *PostTicketRequest) SetVlan(v string) {
	o.Vlan = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetVolumeId() int32 {
	if o == nil || IsNil(o.VolumeId) {
		var ret int32
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetVolumeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given int32 and assigns it to the VolumeId field.
func (o *PostTicketRequest) SetVolumeId(v int32) {
	o.VolumeId = &v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *PostTicketRequest) GetVpcId() int32 {
	if o == nil || IsNil(o.VpcId) {
		var ret int32
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTicketRequest) GetVpcIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VpcId) {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *PostTicketRequest) HasVpcId() bool {
	if o != nil && !IsNil(o.VpcId) {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given int32 and assigns it to the VpcId field.
func (o *PostTicketRequest) SetVpcId(v int32) {
	o.VpcId = &v
}

func (o PostTicketRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTicketRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatabaseId) {
		toSerialize["database_id"] = o.DatabaseId
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.DomainId) {
		toSerialize["domain_id"] = o.DomainId
	}
	if !IsNil(o.FirewallId) {
		toSerialize["firewall_id"] = o.FirewallId
	}
	if !IsNil(o.LinodeId) {
		toSerialize["linode_id"] = o.LinodeId
	}
	if !IsNil(o.LkeclusterId) {
		toSerialize["lkecluster_id"] = o.LkeclusterId
	}
	if !IsNil(o.LongviewclientId) {
		toSerialize["longviewclient_id"] = o.LongviewclientId
	}
	if !IsNil(o.ManagedIssue) {
		toSerialize["managed_issue"] = o.ManagedIssue
	}
	if !IsNil(o.NodebalancerId) {
		toSerialize["nodebalancer_id"] = o.NodebalancerId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["summary"] = o.Summary
	if !IsNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	if !IsNil(o.VpcId) {
		toSerialize["vpc_id"] = o.VpcId
	}
	return toSerialize, nil
}

func (o *PostTicketRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"summary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTicketRequest := _PostTicketRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTicketRequest)

	if err != nil {
		return err
	}

	*o = PostTicketRequest(varPostTicketRequest)

	return err
}

type NullablePostTicketRequest struct {
	value *PostTicketRequest
	isSet bool
}

func (v NullablePostTicketRequest) Get() *PostTicketRequest {
	return v.value
}

func (v *NullablePostTicketRequest) Set(val *PostTicketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTicketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTicketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTicketRequest(val *PostTicketRequest) *NullablePostTicketRequest {
	return &NullablePostTicketRequest{value: val, isSet: true}
}

func (v NullablePostTicketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTicketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


