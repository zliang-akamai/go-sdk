/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetPayments200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPayments200ResponseDataInner{}

// GetPayments200ResponseDataInner Payment object response.
type GetPayments200ResponseDataInner struct {
	// When the Payment was made.
	Date *time.Time `json:"date,omitempty"`
	// The unique ID of the Payment.
	Id *int32 `json:"id,omitempty"`
	// The amount, in US dollars, of the Payment.
	Usd *int32 `json:"usd,omitempty"`
}

// NewGetPayments200ResponseDataInner instantiates a new GetPayments200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPayments200ResponseDataInner() *GetPayments200ResponseDataInner {
	this := GetPayments200ResponseDataInner{}
	return &this
}

// NewGetPayments200ResponseDataInnerWithDefaults instantiates a new GetPayments200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPayments200ResponseDataInnerWithDefaults() *GetPayments200ResponseDataInner {
	this := GetPayments200ResponseDataInner{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *GetPayments200ResponseDataInner) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayments200ResponseDataInner) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *GetPayments200ResponseDataInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *GetPayments200ResponseDataInner) SetDate(v time.Time) {
	o.Date = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetPayments200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayments200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetPayments200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetPayments200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetUsd returns the Usd field value if set, zero value otherwise.
func (o *GetPayments200ResponseDataInner) GetUsd() int32 {
	if o == nil || IsNil(o.Usd) {
		var ret int32
		return ret
	}
	return *o.Usd
}

// GetUsdOk returns a tuple with the Usd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayments200ResponseDataInner) GetUsdOk() (*int32, bool) {
	if o == nil || IsNil(o.Usd) {
		return nil, false
	}
	return o.Usd, true
}

// HasUsd returns a boolean if a field has been set.
func (o *GetPayments200ResponseDataInner) HasUsd() bool {
	if o != nil && !IsNil(o.Usd) {
		return true
	}

	return false
}

// SetUsd gets a reference to the given int32 and assigns it to the Usd field.
func (o *GetPayments200ResponseDataInner) SetUsd(v int32) {
	o.Usd = &v
}

func (o GetPayments200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPayments200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Usd) {
		toSerialize["usd"] = o.Usd
	}
	return toSerialize, nil
}

type NullableGetPayments200ResponseDataInner struct {
	value *GetPayments200ResponseDataInner
	isSet bool
}

func (v NullableGetPayments200ResponseDataInner) Get() *GetPayments200ResponseDataInner {
	return v.value
}

func (v *NullableGetPayments200ResponseDataInner) Set(val *GetPayments200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPayments200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPayments200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPayments200ResponseDataInner(val *GetPayments200ResponseDataInner) *NullableGetPayments200ResponseDataInner {
	return &NullableGetPayments200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetPayments200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPayments200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


