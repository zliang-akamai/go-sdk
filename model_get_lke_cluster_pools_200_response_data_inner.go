/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLkeClusterPools200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusterPools200ResponseDataInner{}

// GetLkeClusterPools200ResponseDataInner The set of Node Pools which are members of the Kubernetes cluster. Node Pools consist of a Linode type, the number of Linodes to deploy of that type, and additional status information.
type GetLkeClusterPools200ResponseDataInner struct {
	Autoscaler *GetLkeClusterPools200ResponseDataInnerAutoscaler `json:"autoscaler,omitempty"`
	// The number of nodes in the Node Pool.
	Count *int32 `json:"count,omitempty"`
	// For new LKE node pools, `disk_encryption` is automatically `enabled` where disk encryption is supported. It can't be `disabled`. For existing LKE node pools, this derives from the Linode's `disk_encryption` setting. If a Linode's node pool is not encrypted and you want an encrypted node pool, delete the node pool and create a new node pool.
	DiskEncryption *string `json:"disk_encryption,omitempty"`
	// This Node Pool's custom disk layout.
	Disks []PostLkeClusterRequestNodePoolsInnerDisksInner `json:"disks,omitempty"`
	// This Node Pool's unique ID.
	Id *int32 `json:"id,omitempty"`
	Labels *GetLkeClusterPools200ResponseDataInnerLabels `json:"labels,omitempty"`
	// Status information for the Nodes which are members of this Node Pool. If a Linode has not been provisioned for a given Node slot, the instance_id will be returned as null.
	Nodes []GetLkeClusterPools200ResponseDataInnerNodesInner `json:"nodes,omitempty"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `json:"tags,omitempty"`
	// Kubernetes taints added to nodes in the node pool. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods.
	Taints []GetLkeClusterPools200ResponseDataInnerTaintsInner `json:"taints,omitempty"`
	// The Linode Type for all of the nodes in the Node Pool.
	Type *string `json:"type,omitempty"`
}

// NewGetLkeClusterPools200ResponseDataInner instantiates a new GetLkeClusterPools200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusterPools200ResponseDataInner() *GetLkeClusterPools200ResponseDataInner {
	this := GetLkeClusterPools200ResponseDataInner{}
	return &this
}

// NewGetLkeClusterPools200ResponseDataInnerWithDefaults instantiates a new GetLkeClusterPools200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusterPools200ResponseDataInnerWithDefaults() *GetLkeClusterPools200ResponseDataInner {
	this := GetLkeClusterPools200ResponseDataInner{}
	return &this
}

// GetAutoscaler returns the Autoscaler field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetAutoscaler() GetLkeClusterPools200ResponseDataInnerAutoscaler {
	if o == nil || IsNil(o.Autoscaler) {
		var ret GetLkeClusterPools200ResponseDataInnerAutoscaler
		return ret
	}
	return *o.Autoscaler
}

// GetAutoscalerOk returns a tuple with the Autoscaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetAutoscalerOk() (*GetLkeClusterPools200ResponseDataInnerAutoscaler, bool) {
	if o == nil || IsNil(o.Autoscaler) {
		return nil, false
	}
	return o.Autoscaler, true
}

// HasAutoscaler returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasAutoscaler() bool {
	if o != nil && !IsNil(o.Autoscaler) {
		return true
	}

	return false
}

// SetAutoscaler gets a reference to the given GetLkeClusterPools200ResponseDataInnerAutoscaler and assigns it to the Autoscaler field.
func (o *GetLkeClusterPools200ResponseDataInner) SetAutoscaler(v GetLkeClusterPools200ResponseDataInnerAutoscaler) {
	o.Autoscaler = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GetLkeClusterPools200ResponseDataInner) SetCount(v int32) {
	o.Count = &v
}

// GetDiskEncryption returns the DiskEncryption field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetDiskEncryption() string {
	if o == nil || IsNil(o.DiskEncryption) {
		var ret string
		return ret
	}
	return *o.DiskEncryption
}

// GetDiskEncryptionOk returns a tuple with the DiskEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetDiskEncryptionOk() (*string, bool) {
	if o == nil || IsNil(o.DiskEncryption) {
		return nil, false
	}
	return o.DiskEncryption, true
}

// HasDiskEncryption returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasDiskEncryption() bool {
	if o != nil && !IsNil(o.DiskEncryption) {
		return true
	}

	return false
}

// SetDiskEncryption gets a reference to the given string and assigns it to the DiskEncryption field.
func (o *GetLkeClusterPools200ResponseDataInner) SetDiskEncryption(v string) {
	o.DiskEncryption = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetDisks() []PostLkeClusterRequestNodePoolsInnerDisksInner {
	if o == nil || IsNil(o.Disks) {
		var ret []PostLkeClusterRequestNodePoolsInnerDisksInner
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetDisksOk() ([]PostLkeClusterRequestNodePoolsInnerDisksInner, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []PostLkeClusterRequestNodePoolsInnerDisksInner and assigns it to the Disks field.
func (o *GetLkeClusterPools200ResponseDataInner) SetDisks(v []PostLkeClusterRequestNodePoolsInnerDisksInner) {
	o.Disks = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetLkeClusterPools200ResponseDataInner) SetId(v int32) {
	o.Id = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetLabels() GetLkeClusterPools200ResponseDataInnerLabels {
	if o == nil || IsNil(o.Labels) {
		var ret GetLkeClusterPools200ResponseDataInnerLabels
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetLabelsOk() (*GetLkeClusterPools200ResponseDataInnerLabels, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given GetLkeClusterPools200ResponseDataInnerLabels and assigns it to the Labels field.
func (o *GetLkeClusterPools200ResponseDataInner) SetLabels(v GetLkeClusterPools200ResponseDataInnerLabels) {
	o.Labels = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetNodes() []GetLkeClusterPools200ResponseDataInnerNodesInner {
	if o == nil || IsNil(o.Nodes) {
		var ret []GetLkeClusterPools200ResponseDataInnerNodesInner
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetNodesOk() ([]GetLkeClusterPools200ResponseDataInnerNodesInner, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []GetLkeClusterPools200ResponseDataInnerNodesInner and assigns it to the Nodes field.
func (o *GetLkeClusterPools200ResponseDataInner) SetNodes(v []GetLkeClusterPools200ResponseDataInnerNodesInner) {
	o.Nodes = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetLkeClusterPools200ResponseDataInner) SetTags(v []string) {
	o.Tags = v
}

// GetTaints returns the Taints field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetTaints() []GetLkeClusterPools200ResponseDataInnerTaintsInner {
	if o == nil || IsNil(o.Taints) {
		var ret []GetLkeClusterPools200ResponseDataInnerTaintsInner
		return ret
	}
	return o.Taints
}

// GetTaintsOk returns a tuple with the Taints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetTaintsOk() ([]GetLkeClusterPools200ResponseDataInnerTaintsInner, bool) {
	if o == nil || IsNil(o.Taints) {
		return nil, false
	}
	return o.Taints, true
}

// HasTaints returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasTaints() bool {
	if o != nil && !IsNil(o.Taints) {
		return true
	}

	return false
}

// SetTaints gets a reference to the given []GetLkeClusterPools200ResponseDataInnerTaintsInner and assigns it to the Taints field.
func (o *GetLkeClusterPools200ResponseDataInner) SetTaints(v []GetLkeClusterPools200ResponseDataInnerTaintsInner) {
	o.Taints = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetLkeClusterPools200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterPools200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetLkeClusterPools200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetLkeClusterPools200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

func (o GetLkeClusterPools200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusterPools200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autoscaler) {
		toSerialize["autoscaler"] = o.Autoscaler
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.DiskEncryption) {
		toSerialize["disk_encryption"] = o.DiskEncryption
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Taints) {
		toSerialize["taints"] = o.Taints
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetLkeClusterPools200ResponseDataInner struct {
	value *GetLkeClusterPools200ResponseDataInner
	isSet bool
}

func (v NullableGetLkeClusterPools200ResponseDataInner) Get() *GetLkeClusterPools200ResponseDataInner {
	return v.value
}

func (v *NullableGetLkeClusterPools200ResponseDataInner) Set(val *GetLkeClusterPools200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusterPools200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusterPools200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusterPools200ResponseDataInner(val *GetLkeClusterPools200ResponseDataInner) *NullableGetLkeClusterPools200ResponseDataInner {
	return &NullableGetLkeClusterPools200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetLkeClusterPools200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusterPools200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


