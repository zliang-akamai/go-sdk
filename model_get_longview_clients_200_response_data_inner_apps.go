/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLongviewClients200ResponseDataInnerApps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLongviewClients200ResponseDataInnerApps{}

// GetLongviewClients200ResponseDataInnerApps The apps this Client is monitoring on your Linode. This is configured when you install the Longview Client application, and is present here for information purposes only.
type GetLongviewClients200ResponseDataInnerApps struct {
	// If True, the Apache Longview Client module is monitoring Apache on your server.
	Apache *bool `json:"apache,omitempty"`
	// If True, the MySQL Longview Client modules is monitoring MySQL on your server.
	Mysql *bool `json:"mysql,omitempty"`
	// If True, the Nginx Longview Client module is monitoring Nginx on your server.
	Nginx *bool `json:"nginx,omitempty"`
}

// NewGetLongviewClients200ResponseDataInnerApps instantiates a new GetLongviewClients200ResponseDataInnerApps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLongviewClients200ResponseDataInnerApps() *GetLongviewClients200ResponseDataInnerApps {
	this := GetLongviewClients200ResponseDataInnerApps{}
	return &this
}

// NewGetLongviewClients200ResponseDataInnerAppsWithDefaults instantiates a new GetLongviewClients200ResponseDataInnerApps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLongviewClients200ResponseDataInnerAppsWithDefaults() *GetLongviewClients200ResponseDataInnerApps {
	this := GetLongviewClients200ResponseDataInnerApps{}
	return &this
}

// GetApache returns the Apache field value if set, zero value otherwise.
func (o *GetLongviewClients200ResponseDataInnerApps) GetApache() bool {
	if o == nil || IsNil(o.Apache) {
		var ret bool
		return ret
	}
	return *o.Apache
}

// GetApacheOk returns a tuple with the Apache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) GetApacheOk() (*bool, bool) {
	if o == nil || IsNil(o.Apache) {
		return nil, false
	}
	return o.Apache, true
}

// HasApache returns a boolean if a field has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) HasApache() bool {
	if o != nil && !IsNil(o.Apache) {
		return true
	}

	return false
}

// SetApache gets a reference to the given bool and assigns it to the Apache field.
func (o *GetLongviewClients200ResponseDataInnerApps) SetApache(v bool) {
	o.Apache = &v
}

// GetMysql returns the Mysql field value if set, zero value otherwise.
func (o *GetLongviewClients200ResponseDataInnerApps) GetMysql() bool {
	if o == nil || IsNil(o.Mysql) {
		var ret bool
		return ret
	}
	return *o.Mysql
}

// GetMysqlOk returns a tuple with the Mysql field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) GetMysqlOk() (*bool, bool) {
	if o == nil || IsNil(o.Mysql) {
		return nil, false
	}
	return o.Mysql, true
}

// HasMysql returns a boolean if a field has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) HasMysql() bool {
	if o != nil && !IsNil(o.Mysql) {
		return true
	}

	return false
}

// SetMysql gets a reference to the given bool and assigns it to the Mysql field.
func (o *GetLongviewClients200ResponseDataInnerApps) SetMysql(v bool) {
	o.Mysql = &v
}

// GetNginx returns the Nginx field value if set, zero value otherwise.
func (o *GetLongviewClients200ResponseDataInnerApps) GetNginx() bool {
	if o == nil || IsNil(o.Nginx) {
		var ret bool
		return ret
	}
	return *o.Nginx
}

// GetNginxOk returns a tuple with the Nginx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) GetNginxOk() (*bool, bool) {
	if o == nil || IsNil(o.Nginx) {
		return nil, false
	}
	return o.Nginx, true
}

// HasNginx returns a boolean if a field has been set.
func (o *GetLongviewClients200ResponseDataInnerApps) HasNginx() bool {
	if o != nil && !IsNil(o.Nginx) {
		return true
	}

	return false
}

// SetNginx gets a reference to the given bool and assigns it to the Nginx field.
func (o *GetLongviewClients200ResponseDataInnerApps) SetNginx(v bool) {
	o.Nginx = &v
}

func (o GetLongviewClients200ResponseDataInnerApps) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLongviewClients200ResponseDataInnerApps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apache) {
		toSerialize["apache"] = o.Apache
	}
	if !IsNil(o.Mysql) {
		toSerialize["mysql"] = o.Mysql
	}
	if !IsNil(o.Nginx) {
		toSerialize["nginx"] = o.Nginx
	}
	return toSerialize, nil
}

type NullableGetLongviewClients200ResponseDataInnerApps struct {
	value *GetLongviewClients200ResponseDataInnerApps
	isSet bool
}

func (v NullableGetLongviewClients200ResponseDataInnerApps) Get() *GetLongviewClients200ResponseDataInnerApps {
	return v.value
}

func (v *NullableGetLongviewClients200ResponseDataInnerApps) Set(val *GetLongviewClients200ResponseDataInnerApps) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLongviewClients200ResponseDataInnerApps) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLongviewClients200ResponseDataInnerApps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLongviewClients200ResponseDataInnerApps(val *GetLongviewClients200ResponseDataInnerApps) *NullableGetLongviewClients200ResponseDataInnerApps {
	return &NullableGetLongviewClients200ResponseDataInnerApps{value: val, isSet: true}
}

func (v NullableGetLongviewClients200ResponseDataInnerApps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLongviewClients200ResponseDataInnerApps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


