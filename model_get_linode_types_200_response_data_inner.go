/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeTypes200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeTypes200ResponseDataInner{}

// GetLinodeTypes200ResponseDataInner Returns collection of Linode types, including pricing and specifications for each type. These are used when [creating](https://techdocs.akamai.com/linode-api/reference/post-linode-instance) or [resizing](https://techdocs.akamai.com/linode-api/reference/post-resize-linode-instance) Linodes.
type GetLinodeTypes200ResponseDataInner struct {
	Addons *GetLinodeTypes200ResponseDataInnerAddons `json:"addons,omitempty"`
	// The class of the Linode Type.  We currently offer six classes of compute instances:    - `nanode` - Nanode instances are good for low-duty workloads, where performance isn't critical. __Note__. As of June 16th, 2020, Nanodes became 1 GB Linodes in the Cloud Manager, however, the API, the CLI, and billing will continue to refer to these instances as Nanodes.   - `standard` - Standard Shared instances are good for medium-duty workloads and are a good mix of performance, resources, and price. __Note__. As of June 16th, 2020, Standard Linodes in the Cloud Manager became Shared Linodes, however, the API, the CLI, and billing will continue to refer to these instances as Standard Linodes.   - `dedicated` - Dedicated CPU instances are good for full-duty workloads where consistent performance is important.   - `premium` (limited Regions) - In addition to the features of Dedicated instances, Premium instances come equipped with the latest AMD EPYC&trade; CPUs, ensuring your applications are running on the latest hardware with consistently high performance. Only available in [regions](https://techdocs.akamai.com/linode-api/reference/get-regions) with \"Premium Plans\" in their `capabilities`   - `gpu` (limited Regions) - Linodes with dedicated NVIDIA Quadro&reg; RTX 6000 GPUs accelerate highly specialized applications such as machine learning, AI, and video transcoding. Only available in [regions](https://techdocs.akamai.com/linode-api/reference/get-regions) with \"GPU Linodes\" in their `capabilities`   - `highmem` - High Memory instances favor RAM over other resources, and can be good for memory hungry use cases like caching and in-memory databases. All High Memory plans contain dedicated CPU cores.
	Class *string `json:"class,omitempty"`
	// The Disk size, in MB, of the Linode Type.
	Disk *int32 `json:"disk,omitempty"`
	// The number of GPUs this Linode Type offers.
	Gpus *int32 `json:"gpus,omitempty"`
	// The ID representing the Linode Type.
	Id *string `json:"id,omitempty"`
	// The Linode Type's label is for display purposes only.
	Label *string `json:"label,omitempty"`
	// Amount of RAM included in this Linode Type.
	Memory *int32 `json:"memory,omitempty"`
	// The Mbits outbound bandwidth allocation.
	NetworkOut *int32 `json:"network_out,omitempty"`
	Price *GetLinodeTypes200ResponseDataInnerPrice `json:"price,omitempty"`
	RegionPrices []GetLinodeTypes200ResponseDataInnerRegionPricesInner `json:"region_prices,omitempty"`
	// The Linode Type that a [mutate](https://techdocs.akamai.com/linode-api/reference/post-mutate-linode-instance) will upgrade to for a Linode of this type.  If `null`, a Linode of this type may not mutate.
	Successor NullableString `json:"successor,omitempty"`
	// The monthly outbound transfer amount, in MB.
	Transfer *int32 `json:"transfer,omitempty"`
	// The number of VCPU cores this Linode Type offers.
	Vcpus *int32 `json:"vcpus,omitempty"`
}

// NewGetLinodeTypes200ResponseDataInner instantiates a new GetLinodeTypes200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeTypes200ResponseDataInner() *GetLinodeTypes200ResponseDataInner {
	this := GetLinodeTypes200ResponseDataInner{}
	return &this
}

// NewGetLinodeTypes200ResponseDataInnerWithDefaults instantiates a new GetLinodeTypes200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeTypes200ResponseDataInnerWithDefaults() *GetLinodeTypes200ResponseDataInner {
	this := GetLinodeTypes200ResponseDataInner{}
	return &this
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetAddons() GetLinodeTypes200ResponseDataInnerAddons {
	if o == nil || IsNil(o.Addons) {
		var ret GetLinodeTypes200ResponseDataInnerAddons
		return ret
	}
	return *o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetAddonsOk() (*GetLinodeTypes200ResponseDataInnerAddons, bool) {
	if o == nil || IsNil(o.Addons) {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasAddons() bool {
	if o != nil && !IsNil(o.Addons) {
		return true
	}

	return false
}

// SetAddons gets a reference to the given GetLinodeTypes200ResponseDataInnerAddons and assigns it to the Addons field.
func (o *GetLinodeTypes200ResponseDataInner) SetAddons(v GetLinodeTypes200ResponseDataInnerAddons) {
	o.Addons = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *GetLinodeTypes200ResponseDataInner) SetClass(v string) {
	o.Class = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetDisk() int32 {
	if o == nil || IsNil(o.Disk) {
		var ret int32
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given int32 and assigns it to the Disk field.
func (o *GetLinodeTypes200ResponseDataInner) SetDisk(v int32) {
	o.Disk = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetGpus() int32 {
	if o == nil || IsNil(o.Gpus) {
		var ret int32
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetGpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given int32 and assigns it to the Gpus field.
func (o *GetLinodeTypes200ResponseDataInner) SetGpus(v int32) {
	o.Gpus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetLinodeTypes200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetLinodeTypes200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetMemory() int32 {
	if o == nil || IsNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *GetLinodeTypes200ResponseDataInner) SetMemory(v int32) {
	o.Memory = &v
}

// GetNetworkOut returns the NetworkOut field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetNetworkOut() int32 {
	if o == nil || IsNil(o.NetworkOut) {
		var ret int32
		return ret
	}
	return *o.NetworkOut
}

// GetNetworkOutOk returns a tuple with the NetworkOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetNetworkOutOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkOut) {
		return nil, false
	}
	return o.NetworkOut, true
}

// HasNetworkOut returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasNetworkOut() bool {
	if o != nil && !IsNil(o.NetworkOut) {
		return true
	}

	return false
}

// SetNetworkOut gets a reference to the given int32 and assigns it to the NetworkOut field.
func (o *GetLinodeTypes200ResponseDataInner) SetNetworkOut(v int32) {
	o.NetworkOut = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetPrice() GetLinodeTypes200ResponseDataInnerPrice {
	if o == nil || IsNil(o.Price) {
		var ret GetLinodeTypes200ResponseDataInnerPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetPriceOk() (*GetLinodeTypes200ResponseDataInnerPrice, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given GetLinodeTypes200ResponseDataInnerPrice and assigns it to the Price field.
func (o *GetLinodeTypes200ResponseDataInner) SetPrice(v GetLinodeTypes200ResponseDataInnerPrice) {
	o.Price = &v
}

// GetRegionPrices returns the RegionPrices field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetRegionPrices() []GetLinodeTypes200ResponseDataInnerRegionPricesInner {
	if o == nil || IsNil(o.RegionPrices) {
		var ret []GetLinodeTypes200ResponseDataInnerRegionPricesInner
		return ret
	}
	return o.RegionPrices
}

// GetRegionPricesOk returns a tuple with the RegionPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetRegionPricesOk() ([]GetLinodeTypes200ResponseDataInnerRegionPricesInner, bool) {
	if o == nil || IsNil(o.RegionPrices) {
		return nil, false
	}
	return o.RegionPrices, true
}

// HasRegionPrices returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasRegionPrices() bool {
	if o != nil && !IsNil(o.RegionPrices) {
		return true
	}

	return false
}

// SetRegionPrices gets a reference to the given []GetLinodeTypes200ResponseDataInnerRegionPricesInner and assigns it to the RegionPrices field.
func (o *GetLinodeTypes200ResponseDataInner) SetRegionPrices(v []GetLinodeTypes200ResponseDataInnerRegionPricesInner) {
	o.RegionPrices = v
}

// GetSuccessor returns the Successor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLinodeTypes200ResponseDataInner) GetSuccessor() string {
	if o == nil || IsNil(o.Successor.Get()) {
		var ret string
		return ret
	}
	return *o.Successor.Get()
}

// GetSuccessorOk returns a tuple with the Successor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLinodeTypes200ResponseDataInner) GetSuccessorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Successor.Get(), o.Successor.IsSet()
}

// HasSuccessor returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasSuccessor() bool {
	if o != nil && o.Successor.IsSet() {
		return true
	}

	return false
}

// SetSuccessor gets a reference to the given NullableString and assigns it to the Successor field.
func (o *GetLinodeTypes200ResponseDataInner) SetSuccessor(v string) {
	o.Successor.Set(&v)
}
// SetSuccessorNil sets the value for Successor to be an explicit nil
func (o *GetLinodeTypes200ResponseDataInner) SetSuccessorNil() {
	o.Successor.Set(nil)
}

// UnsetSuccessor ensures that no value is present for Successor, not even an explicit nil
func (o *GetLinodeTypes200ResponseDataInner) UnsetSuccessor() {
	o.Successor.Unset()
}

// GetTransfer returns the Transfer field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetTransfer() int32 {
	if o == nil || IsNil(o.Transfer) {
		var ret int32
		return ret
	}
	return *o.Transfer
}

// GetTransferOk returns a tuple with the Transfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetTransferOk() (*int32, bool) {
	if o == nil || IsNil(o.Transfer) {
		return nil, false
	}
	return o.Transfer, true
}

// HasTransfer returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasTransfer() bool {
	if o != nil && !IsNil(o.Transfer) {
		return true
	}

	return false
}

// SetTransfer gets a reference to the given int32 and assigns it to the Transfer field.
func (o *GetLinodeTypes200ResponseDataInner) SetTransfer(v int32) {
	o.Transfer = &v
}

// GetVcpus returns the Vcpus field value if set, zero value otherwise.
func (o *GetLinodeTypes200ResponseDataInner) GetVcpus() int32 {
	if o == nil || IsNil(o.Vcpus) {
		var ret int32
		return ret
	}
	return *o.Vcpus
}

// GetVcpusOk returns a tuple with the Vcpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeTypes200ResponseDataInner) GetVcpusOk() (*int32, bool) {
	if o == nil || IsNil(o.Vcpus) {
		return nil, false
	}
	return o.Vcpus, true
}

// HasVcpus returns a boolean if a field has been set.
func (o *GetLinodeTypes200ResponseDataInner) HasVcpus() bool {
	if o != nil && !IsNil(o.Vcpus) {
		return true
	}

	return false
}

// SetVcpus gets a reference to the given int32 and assigns it to the Vcpus field.
func (o *GetLinodeTypes200ResponseDataInner) SetVcpus(v int32) {
	o.Vcpus = &v
}

func (o GetLinodeTypes200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeTypes200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addons) {
		toSerialize["addons"] = o.Addons
	}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.NetworkOut) {
		toSerialize["network_out"] = o.NetworkOut
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.RegionPrices) {
		toSerialize["region_prices"] = o.RegionPrices
	}
	if o.Successor.IsSet() {
		toSerialize["successor"] = o.Successor.Get()
	}
	if !IsNil(o.Transfer) {
		toSerialize["transfer"] = o.Transfer
	}
	if !IsNil(o.Vcpus) {
		toSerialize["vcpus"] = o.Vcpus
	}
	return toSerialize, nil
}

type NullableGetLinodeTypes200ResponseDataInner struct {
	value *GetLinodeTypes200ResponseDataInner
	isSet bool
}

func (v NullableGetLinodeTypes200ResponseDataInner) Get() *GetLinodeTypes200ResponseDataInner {
	return v.value
}

func (v *NullableGetLinodeTypes200ResponseDataInner) Set(val *GetLinodeTypes200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeTypes200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeTypes200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeTypes200ResponseDataInner(val *GetLinodeTypes200ResponseDataInner) *NullableGetLinodeTypes200ResponseDataInner {
	return &NullableGetLinodeTypes200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetLinodeTypes200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeTypes200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


