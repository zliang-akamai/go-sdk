/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner{}

// GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner struct for GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner
type GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner struct {
	// ID of a Linode assigned to the VPC Subnet.
	Id *int32 `json:"id,omitempty"`
	// VPC purpose interfaces with the subnet's `subnet_id` assigned to the Linode.
	Interfaces []GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner `json:"interfaces,omitempty"`
}

// NewGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner instantiates a new GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner() *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner {
	this := GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner{}
	return &this
}

// NewGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerWithDefaults instantiates a new GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerWithDefaults() *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner {
	this := GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) SetId(v int32) {
	o.Id = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) GetInterfaces() []GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner {
	if o == nil || IsNil(o.Interfaces) {
		var ret []GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) GetInterfacesOk() ([]GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner and assigns it to the Interfaces field.
func (o *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) SetInterfaces(v []GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInnerInterfacesInner) {
	o.Interfaces = v
}

func (o GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	return toSerialize, nil
}

type NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner struct {
	value *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner
	isSet bool
}

func (v NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) Get() *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner {
	return v.value
}

func (v *NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) Set(val *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner(val *GetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) *NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner {
	return &NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner{value: val, isSet: true}
}

func (v NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVpcs200ResponseAllOfDataInnerSubnetsInnerLinodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


