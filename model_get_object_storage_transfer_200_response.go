/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetObjectStorageTransfer200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetObjectStorageTransfer200Response{}

// GetObjectStorageTransfer200Response struct for GetObjectStorageTransfer200Response
type GetObjectStorageTransfer200Response struct {
	// The amount of outbound data transfer used by your account's Object Storage buckets, in bytes, for the current month's billing cycle.
	Used *int32 `json:"used,omitempty"`
}

// NewGetObjectStorageTransfer200Response instantiates a new GetObjectStorageTransfer200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetObjectStorageTransfer200Response() *GetObjectStorageTransfer200Response {
	this := GetObjectStorageTransfer200Response{}
	return &this
}

// NewGetObjectStorageTransfer200ResponseWithDefaults instantiates a new GetObjectStorageTransfer200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetObjectStorageTransfer200ResponseWithDefaults() *GetObjectStorageTransfer200Response {
	this := GetObjectStorageTransfer200Response{}
	return &this
}

// GetUsed returns the Used field value if set, zero value otherwise.
func (o *GetObjectStorageTransfer200Response) GetUsed() int32 {
	if o == nil || IsNil(o.Used) {
		var ret int32
		return ret
	}
	return *o.Used
}

// GetUsedOk returns a tuple with the Used field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetObjectStorageTransfer200Response) GetUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.Used) {
		return nil, false
	}
	return o.Used, true
}

// HasUsed returns a boolean if a field has been set.
func (o *GetObjectStorageTransfer200Response) HasUsed() bool {
	if o != nil && !IsNil(o.Used) {
		return true
	}

	return false
}

// SetUsed gets a reference to the given int32 and assigns it to the Used field.
func (o *GetObjectStorageTransfer200Response) SetUsed(v int32) {
	o.Used = &v
}

func (o GetObjectStorageTransfer200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetObjectStorageTransfer200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Used) {
		toSerialize["used"] = o.Used
	}
	return toSerialize, nil
}

type NullableGetObjectStorageTransfer200Response struct {
	value *GetObjectStorageTransfer200Response
	isSet bool
}

func (v NullableGetObjectStorageTransfer200Response) Get() *GetObjectStorageTransfer200Response {
	return v.value
}

func (v *NullableGetObjectStorageTransfer200Response) Set(val *GetObjectStorageTransfer200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetObjectStorageTransfer200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetObjectStorageTransfer200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetObjectStorageTransfer200Response(val *GetObjectStorageTransfer200Response) *NullableGetObjectStorageTransfer200Response {
	return &NullableGetObjectStorageTransfer200Response{value: val, isSet: true}
}

func (v NullableGetObjectStorageTransfer200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetObjectStorageTransfer200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


