/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeConfigs200ResponseDataInnerDevicesSda type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeConfigs200ResponseDataInnerDevicesSda{}

// GetLinodeConfigs200ResponseDataInnerDevicesSda Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only one type per slot allowed. Can be null. Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
type GetLinodeConfigs200ResponseDataInnerDevicesSda struct {
	// The Disk ID, or `null` if a Volume is assigned to this slot.
	DiskId *int32 `json:"disk_id,omitempty"`
	// The Volume ID, or `null` if a Disk is assigned to this slot.
	VolumeId *int32 `json:"volume_id,omitempty"`
}

// NewGetLinodeConfigs200ResponseDataInnerDevicesSda instantiates a new GetLinodeConfigs200ResponseDataInnerDevicesSda object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeConfigs200ResponseDataInnerDevicesSda() *GetLinodeConfigs200ResponseDataInnerDevicesSda {
	this := GetLinodeConfigs200ResponseDataInnerDevicesSda{}
	return &this
}

// NewGetLinodeConfigs200ResponseDataInnerDevicesSdaWithDefaults instantiates a new GetLinodeConfigs200ResponseDataInnerDevicesSda object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeConfigs200ResponseDataInnerDevicesSdaWithDefaults() *GetLinodeConfigs200ResponseDataInnerDevicesSda {
	this := GetLinodeConfigs200ResponseDataInnerDevicesSda{}
	return &this
}

// GetDiskId returns the DiskId field value if set, zero value otherwise.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) GetDiskId() int32 {
	if o == nil || IsNil(o.DiskId) {
		var ret int32
		return ret
	}
	return *o.DiskId
}

// GetDiskIdOk returns a tuple with the DiskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) GetDiskIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskId) {
		return nil, false
	}
	return o.DiskId, true
}

// HasDiskId returns a boolean if a field has been set.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) HasDiskId() bool {
	if o != nil && !IsNil(o.DiskId) {
		return true
	}

	return false
}

// SetDiskId gets a reference to the given int32 and assigns it to the DiskId field.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) SetDiskId(v int32) {
	o.DiskId = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) GetVolumeId() int32 {
	if o == nil || IsNil(o.VolumeId) {
		var ret int32
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) GetVolumeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given int32 and assigns it to the VolumeId field.
func (o *GetLinodeConfigs200ResponseDataInnerDevicesSda) SetVolumeId(v int32) {
	o.VolumeId = &v
}

func (o GetLinodeConfigs200ResponseDataInnerDevicesSda) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeConfigs200ResponseDataInnerDevicesSda) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiskId) {
		toSerialize["disk_id"] = o.DiskId
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	return toSerialize, nil
}

type NullableGetLinodeConfigs200ResponseDataInnerDevicesSda struct {
	value *GetLinodeConfigs200ResponseDataInnerDevicesSda
	isSet bool
}

func (v NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) Get() *GetLinodeConfigs200ResponseDataInnerDevicesSda {
	return v.value
}

func (v *NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) Set(val *GetLinodeConfigs200ResponseDataInnerDevicesSda) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeConfigs200ResponseDataInnerDevicesSda(val *GetLinodeConfigs200ResponseDataInnerDevicesSda) *NullableGetLinodeConfigs200ResponseDataInnerDevicesSda {
	return &NullableGetLinodeConfigs200ResponseDataInnerDevicesSda{value: val, isSet: true}
}

func (v NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeConfigs200ResponseDataInnerDevicesSda) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


