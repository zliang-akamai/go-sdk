/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPlacementGroups200ResponseDataInnerMigrations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPlacementGroups200ResponseDataInnerMigrations{}

// GetPlacementGroups200ResponseDataInnerMigrations Any compute instances that are being migrated to or from the placement group. Returns an empty object if no migrations are taking place.
type GetPlacementGroups200ResponseDataInnerMigrations struct {
	Inbound []GetPlacementGroups200ResponseDataInnerMigrationsInboundInner `json:"inbound,omitempty"`
	Outbound []GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner `json:"outbound,omitempty"`
}

// NewGetPlacementGroups200ResponseDataInnerMigrations instantiates a new GetPlacementGroups200ResponseDataInnerMigrations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPlacementGroups200ResponseDataInnerMigrations() *GetPlacementGroups200ResponseDataInnerMigrations {
	this := GetPlacementGroups200ResponseDataInnerMigrations{}
	return &this
}

// NewGetPlacementGroups200ResponseDataInnerMigrationsWithDefaults instantiates a new GetPlacementGroups200ResponseDataInnerMigrations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPlacementGroups200ResponseDataInnerMigrationsWithDefaults() *GetPlacementGroups200ResponseDataInnerMigrations {
	this := GetPlacementGroups200ResponseDataInnerMigrations{}
	return &this
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) GetInbound() []GetPlacementGroups200ResponseDataInnerMigrationsInboundInner {
	if o == nil || IsNil(o.Inbound) {
		var ret []GetPlacementGroups200ResponseDataInnerMigrationsInboundInner
		return ret
	}
	return o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) GetInboundOk() ([]GetPlacementGroups200ResponseDataInnerMigrationsInboundInner, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given []GetPlacementGroups200ResponseDataInnerMigrationsInboundInner and assigns it to the Inbound field.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) SetInbound(v []GetPlacementGroups200ResponseDataInnerMigrationsInboundInner) {
	o.Inbound = v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) GetOutbound() []GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner {
	if o == nil || IsNil(o.Outbound) {
		var ret []GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner
		return ret
	}
	return o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) GetOutboundOk() ([]GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given []GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner and assigns it to the Outbound field.
func (o *GetPlacementGroups200ResponseDataInnerMigrations) SetOutbound(v []GetPlacementGroups200ResponseDataInnerMigrationsOutboundInner) {
	o.Outbound = v
}

func (o GetPlacementGroups200ResponseDataInnerMigrations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPlacementGroups200ResponseDataInnerMigrations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}
	return toSerialize, nil
}

type NullableGetPlacementGroups200ResponseDataInnerMigrations struct {
	value *GetPlacementGroups200ResponseDataInnerMigrations
	isSet bool
}

func (v NullableGetPlacementGroups200ResponseDataInnerMigrations) Get() *GetPlacementGroups200ResponseDataInnerMigrations {
	return v.value
}

func (v *NullableGetPlacementGroups200ResponseDataInnerMigrations) Set(val *GetPlacementGroups200ResponseDataInnerMigrations) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlacementGroups200ResponseDataInnerMigrations) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlacementGroups200ResponseDataInnerMigrations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlacementGroups200ResponseDataInnerMigrations(val *GetPlacementGroups200ResponseDataInnerMigrations) *NullableGetPlacementGroups200ResponseDataInnerMigrations {
	return &NullableGetPlacementGroups200ResponseDataInnerMigrations{value: val, isSet: true}
}

func (v NullableGetPlacementGroups200ResponseDataInnerMigrations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlacementGroups200ResponseDataInnerMigrations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


