/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostCloneLinodeInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCloneLinodeInstanceRequest{}

// PostCloneLinodeInstanceRequest struct for PostCloneLinodeInstanceRequest
type PostCloneLinodeInstanceRequest struct {
	// If this field is set to `true`, the created Linode will automatically be enrolled in the Linode Backup service. This will incur an additional charge. Pricing is included in the response from [List types](https://techdocs.akamai.com/linode-api/reference/get-linode-types).  - Can only be included when cloning to a new Linode.
	BackupsEnabled *bool `json:"backups_enabled,omitempty"`
	// An array of configuration profile IDs.  - If the `configs` parameter __is not provided__, then __all configuration profiles and their associated disks will be cloned__ from the source Linode. Any disks specified by the `disks` parameter will also be cloned. - __If an empty array is provided__ for the `configs` parameter, then __no configuration profiles (nor their associated disks) will be cloned__ from the source Linode. Any disks specified by the `disks` parameter will still be cloned. - __If a non-empty array is provided__ for the `configs` parameter, then __the configuration profiles specified in the array (and their associated disks) will be cloned__ from the source Linode. Any disks specified by the `disks` parameter will also be cloned.
	Configs []int32 `json:"configs,omitempty"`
	// An array of disk IDs.  - If the `disks` parameter __is not provided__, then __no extra disks will be cloned__ from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned. - __If an empty array is provided__ for the `disks` parameter, then __no extra disks will be cloned__ from the source Linode. All disks associated with the configuration profiles specified by the `configs` parameter will still be cloned. - __If a non-empty array is provided__ for the `disks` parameter, then __the disks specified in the array will be cloned__ from the source Linode, in addition to any disks associated with the configuration profiles specified by the `configs` parameter.
	Disks []int32 `json:"disks,omitempty"`
	// A label used to group Linodes for display. Linodes are not required to have a group.
	// Deprecated
	Group *string `json:"group,omitempty"`
	// The label to assign this Linode when cloning to a new Linode.  - Can only be provided when cloning to a new Linode. - Defaults to `linode`.
	Label *string `json:"label,omitempty"`
	// If an existing Linode is the target for the clone, the ID of that Linode. The existing Linode must have enough resources to accept the clone.
	LinodeId *int32 `json:"linode_id,omitempty"`
	Metadata *PostLinodeInstanceRequestAllOfMetadata `json:"metadata,omitempty"`
	PlacementGroup *PostCloneLinodeInstanceRequestPlacementGroup `json:"placement_group,omitempty"`
	// If true, the created Linode will have private networking enabled and assigned a private IPv4 address.  - Can only be provided when cloning to a new Linode.
	PrivateIp *bool `json:"private_ip,omitempty"`
	// This is the Region where the Linode will be deployed. To view all available Regions you can deploy to, run [List regions](https://techdocs.akamai.com/linode-api/reference/get-regions).  - Region can only be provided and is required when cloning to a new Linode.
	Region *string `json:"region,omitempty"`
	// A Linode's Type determines what resources are available to it, including disk space, memory, and virtual cpus. The amounts available to a specific Linode are returned as `specs` on the Linode object.  To view all available Linode Types you can deploy with, run [List types](https://techdocs.akamai.com/linode-api/reference/get-linode-types).  - Type can only be provided and is required when cloning to a new Linode.
	Type *string `json:"type,omitempty"`
}

// NewPostCloneLinodeInstanceRequest instantiates a new PostCloneLinodeInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCloneLinodeInstanceRequest() *PostCloneLinodeInstanceRequest {
	this := PostCloneLinodeInstanceRequest{}
	return &this
}

// NewPostCloneLinodeInstanceRequestWithDefaults instantiates a new PostCloneLinodeInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCloneLinodeInstanceRequestWithDefaults() *PostCloneLinodeInstanceRequest {
	this := PostCloneLinodeInstanceRequest{}
	return &this
}

// GetBackupsEnabled returns the BackupsEnabled field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetBackupsEnabled() bool {
	if o == nil || IsNil(o.BackupsEnabled) {
		var ret bool
		return ret
	}
	return *o.BackupsEnabled
}

// GetBackupsEnabledOk returns a tuple with the BackupsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetBackupsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.BackupsEnabled) {
		return nil, false
	}
	return o.BackupsEnabled, true
}

// HasBackupsEnabled returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasBackupsEnabled() bool {
	if o != nil && !IsNil(o.BackupsEnabled) {
		return true
	}

	return false
}

// SetBackupsEnabled gets a reference to the given bool and assigns it to the BackupsEnabled field.
func (o *PostCloneLinodeInstanceRequest) SetBackupsEnabled(v bool) {
	o.BackupsEnabled = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetConfigs() []int32 {
	if o == nil || IsNil(o.Configs) {
		var ret []int32
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetConfigsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Configs) {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasConfigs() bool {
	if o != nil && !IsNil(o.Configs) {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []int32 and assigns it to the Configs field.
func (o *PostCloneLinodeInstanceRequest) SetConfigs(v []int32) {
	o.Configs = v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetDisks() []int32 {
	if o == nil || IsNil(o.Disks) {
		var ret []int32
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetDisksOk() ([]int32, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []int32 and assigns it to the Disks field.
func (o *PostCloneLinodeInstanceRequest) SetDisks(v []int32) {
	o.Disks = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
// Deprecated
func (o *PostCloneLinodeInstanceRequest) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PostCloneLinodeInstanceRequest) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
// Deprecated
func (o *PostCloneLinodeInstanceRequest) SetGroup(v string) {
	o.Group = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PostCloneLinodeInstanceRequest) SetLabel(v string) {
	o.Label = &v
}

// GetLinodeId returns the LinodeId field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetLinodeId() int32 {
	if o == nil || IsNil(o.LinodeId) {
		var ret int32
		return ret
	}
	return *o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetLinodeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LinodeId) {
		return nil, false
	}
	return o.LinodeId, true
}

// HasLinodeId returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasLinodeId() bool {
	if o != nil && !IsNil(o.LinodeId) {
		return true
	}

	return false
}

// SetLinodeId gets a reference to the given int32 and assigns it to the LinodeId field.
func (o *PostCloneLinodeInstanceRequest) SetLinodeId(v int32) {
	o.LinodeId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetMetadata() PostLinodeInstanceRequestAllOfMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret PostLinodeInstanceRequestAllOfMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetMetadataOk() (*PostLinodeInstanceRequestAllOfMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given PostLinodeInstanceRequestAllOfMetadata and assigns it to the Metadata field.
func (o *PostCloneLinodeInstanceRequest) SetMetadata(v PostLinodeInstanceRequestAllOfMetadata) {
	o.Metadata = &v
}

// GetPlacementGroup returns the PlacementGroup field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetPlacementGroup() PostCloneLinodeInstanceRequestPlacementGroup {
	if o == nil || IsNil(o.PlacementGroup) {
		var ret PostCloneLinodeInstanceRequestPlacementGroup
		return ret
	}
	return *o.PlacementGroup
}

// GetPlacementGroupOk returns a tuple with the PlacementGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetPlacementGroupOk() (*PostCloneLinodeInstanceRequestPlacementGroup, bool) {
	if o == nil || IsNil(o.PlacementGroup) {
		return nil, false
	}
	return o.PlacementGroup, true
}

// HasPlacementGroup returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasPlacementGroup() bool {
	if o != nil && !IsNil(o.PlacementGroup) {
		return true
	}

	return false
}

// SetPlacementGroup gets a reference to the given PostCloneLinodeInstanceRequestPlacementGroup and assigns it to the PlacementGroup field.
func (o *PostCloneLinodeInstanceRequest) SetPlacementGroup(v PostCloneLinodeInstanceRequestPlacementGroup) {
	o.PlacementGroup = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetPrivateIp() bool {
	if o == nil || IsNil(o.PrivateIp) {
		var ret bool
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetPrivateIpOk() (*bool, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given bool and assigns it to the PrivateIp field.
func (o *PostCloneLinodeInstanceRequest) SetPrivateIp(v bool) {
	o.PrivateIp = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PostCloneLinodeInstanceRequest) SetRegion(v string) {
	o.Region = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PostCloneLinodeInstanceRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCloneLinodeInstanceRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PostCloneLinodeInstanceRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PostCloneLinodeInstanceRequest) SetType(v string) {
	o.Type = &v
}

func (o PostCloneLinodeInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCloneLinodeInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupsEnabled) {
		toSerialize["backups_enabled"] = o.BackupsEnabled
	}
	if !IsNil(o.Configs) {
		toSerialize["configs"] = o.Configs
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.LinodeId) {
		toSerialize["linode_id"] = o.LinodeId
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PlacementGroup) {
		toSerialize["placement_group"] = o.PlacementGroup
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullablePostCloneLinodeInstanceRequest struct {
	value *PostCloneLinodeInstanceRequest
	isSet bool
}

func (v NullablePostCloneLinodeInstanceRequest) Get() *PostCloneLinodeInstanceRequest {
	return v.value
}

func (v *NullablePostCloneLinodeInstanceRequest) Set(val *PostCloneLinodeInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCloneLinodeInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCloneLinodeInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCloneLinodeInstanceRequest(val *PostCloneLinodeInstanceRequest) *NullablePostCloneLinodeInstanceRequest {
	return &NullablePostCloneLinodeInstanceRequest{value: val, isSet: true}
}

func (v NullablePostCloneLinodeInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCloneLinodeInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


