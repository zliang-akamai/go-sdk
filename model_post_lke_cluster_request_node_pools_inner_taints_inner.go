/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostLkeClusterRequestNodePoolsInnerTaintsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostLkeClusterRequestNodePoolsInnerTaintsInner{}

// PostLkeClusterRequestNodePoolsInnerTaintsInner struct for PostLkeClusterRequestNodePoolsInnerTaintsInner
type PostLkeClusterRequestNodePoolsInnerTaintsInner struct {
	// The Kubernetes taint effect. For `NoSchedule`, `PreferNoSchedule` and `NoExecute` descriptions, see [Kubernetes Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).
	Effect string `json:"effect"`
	// The Kubernetes taint key.  - A key can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.  - If the key begins with a DNS subdomain prefix followed by a single slash, for example `example.com/my-app`, the prefix part needs to adhere to [RFC 1123](https://datatracker.ietf.org/doc/html/rfc1123) DNS subdomain restrictions and be a maximum of 253 characters.
	Key string `json:"key" validate:"regexp=^([A-Za-z0-9][-A-Za-z0-9_.]*)?(\\/)?([A-Za-z0-9][-A-Za-z0-9_.]{1,63})?$"`
	// The Kubernetes taint value.  - A key can contain alphanumeric characters, dashes (`-`), underscores (`_`), or dots (`.`). Start and end it with an alphanumeric character.  - Can be specified as an empty string value with `\"\"`.
	Value string `json:"value" validate:"regexp=^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?"`
}

type _PostLkeClusterRequestNodePoolsInnerTaintsInner PostLkeClusterRequestNodePoolsInnerTaintsInner

// NewPostLkeClusterRequestNodePoolsInnerTaintsInner instantiates a new PostLkeClusterRequestNodePoolsInnerTaintsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostLkeClusterRequestNodePoolsInnerTaintsInner(effect string, key string, value string) *PostLkeClusterRequestNodePoolsInnerTaintsInner {
	this := PostLkeClusterRequestNodePoolsInnerTaintsInner{}
	this.Effect = effect
	this.Key = key
	this.Value = value
	return &this
}

// NewPostLkeClusterRequestNodePoolsInnerTaintsInnerWithDefaults instantiates a new PostLkeClusterRequestNodePoolsInnerTaintsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostLkeClusterRequestNodePoolsInnerTaintsInnerWithDefaults() *PostLkeClusterRequestNodePoolsInnerTaintsInner {
	this := PostLkeClusterRequestNodePoolsInnerTaintsInner{}
	return &this
}

// GetEffect returns the Effect field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetEffect() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Effect
}

// GetEffectOk returns a tuple with the Effect field value
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetEffectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Effect, true
}

// SetEffect sets field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) SetEffect(v string) {
	o.Effect = v
}

// GetKey returns the Key field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) SetValue(v string) {
	o.Value = v
}

func (o PostLkeClusterRequestNodePoolsInnerTaintsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostLkeClusterRequestNodePoolsInnerTaintsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["effect"] = o.Effect
	toSerialize["key"] = o.Key
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *PostLkeClusterRequestNodePoolsInnerTaintsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"effect",
		"key",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostLkeClusterRequestNodePoolsInnerTaintsInner := _PostLkeClusterRequestNodePoolsInnerTaintsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostLkeClusterRequestNodePoolsInnerTaintsInner)

	if err != nil {
		return err
	}

	*o = PostLkeClusterRequestNodePoolsInnerTaintsInner(varPostLkeClusterRequestNodePoolsInnerTaintsInner)

	return err
}

type NullablePostLkeClusterRequestNodePoolsInnerTaintsInner struct {
	value *PostLkeClusterRequestNodePoolsInnerTaintsInner
	isSet bool
}

func (v NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) Get() *PostLkeClusterRequestNodePoolsInnerTaintsInner {
	return v.value
}

func (v *NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) Set(val *PostLkeClusterRequestNodePoolsInnerTaintsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostLkeClusterRequestNodePoolsInnerTaintsInner(val *PostLkeClusterRequestNodePoolsInnerTaintsInner) *NullablePostLkeClusterRequestNodePoolsInnerTaintsInner {
	return &NullablePostLkeClusterRequestNodePoolsInnerTaintsInner{value: val, isSet: true}
}

func (v NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostLkeClusterRequestNodePoolsInnerTaintsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


