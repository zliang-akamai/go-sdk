/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PutFirewallRulesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutFirewallRulesRequest{}

// PutFirewallRulesRequest struct for PutFirewallRulesRequest
type PutFirewallRulesRequest struct {
	// The fingerprint is a 32-bit hash. It represents the firewall rules as an 8 character hex string. You can use `fingerprint` to compare rule versions.
	Fingerprint *string `json:"fingerprint,omitempty"`
	Inbound interface{} `json:"inbound,omitempty"`
	// The default behavior for inbound traffic. This setting can be overridden by [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules) the `inbound.action` property of the Firewall Rule.
	InboundPolicy *string `json:"inbound_policy,omitempty"`
	Outbound interface{} `json:"outbound,omitempty"`
	// The default behavior for outbound traffic. This setting can be overridden by [updating](https://techdocs.akamai.com/linode-api/reference/put-firewall-rules) the `outbound.action` property of the Firewall Rule.
	OutboundPolicy *string `json:"outbound_policy,omitempty"`
	// The firewall's rule version. The first version is `1`. The version number is incremented when the firewall's rules change.
	Version *int32 `json:"version,omitempty"`
}

// NewPutFirewallRulesRequest instantiates a new PutFirewallRulesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutFirewallRulesRequest() *PutFirewallRulesRequest {
	this := PutFirewallRulesRequest{}
	return &this
}

// NewPutFirewallRulesRequestWithDefaults instantiates a new PutFirewallRulesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutFirewallRulesRequestWithDefaults() *PutFirewallRulesRequest {
	this := PutFirewallRulesRequest{}
	return &this
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *PutFirewallRulesRequest) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutFirewallRulesRequest) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *PutFirewallRulesRequest) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetInbound returns the Inbound field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutFirewallRulesRequest) GetInbound() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutFirewallRulesRequest) GetInboundOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return &o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given interface{} and assigns it to the Inbound field.
func (o *PutFirewallRulesRequest) SetInbound(v interface{}) {
	o.Inbound = v
}

// GetInboundPolicy returns the InboundPolicy field value if set, zero value otherwise.
func (o *PutFirewallRulesRequest) GetInboundPolicy() string {
	if o == nil || IsNil(o.InboundPolicy) {
		var ret string
		return ret
	}
	return *o.InboundPolicy
}

// GetInboundPolicyOk returns a tuple with the InboundPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutFirewallRulesRequest) GetInboundPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.InboundPolicy) {
		return nil, false
	}
	return o.InboundPolicy, true
}

// HasInboundPolicy returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasInboundPolicy() bool {
	if o != nil && !IsNil(o.InboundPolicy) {
		return true
	}

	return false
}

// SetInboundPolicy gets a reference to the given string and assigns it to the InboundPolicy field.
func (o *PutFirewallRulesRequest) SetInboundPolicy(v string) {
	o.InboundPolicy = &v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutFirewallRulesRequest) GetOutbound() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutFirewallRulesRequest) GetOutboundOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return &o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given interface{} and assigns it to the Outbound field.
func (o *PutFirewallRulesRequest) SetOutbound(v interface{}) {
	o.Outbound = v
}

// GetOutboundPolicy returns the OutboundPolicy field value if set, zero value otherwise.
func (o *PutFirewallRulesRequest) GetOutboundPolicy() string {
	if o == nil || IsNil(o.OutboundPolicy) {
		var ret string
		return ret
	}
	return *o.OutboundPolicy
}

// GetOutboundPolicyOk returns a tuple with the OutboundPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutFirewallRulesRequest) GetOutboundPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.OutboundPolicy) {
		return nil, false
	}
	return o.OutboundPolicy, true
}

// HasOutboundPolicy returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasOutboundPolicy() bool {
	if o != nil && !IsNil(o.OutboundPolicy) {
		return true
	}

	return false
}

// SetOutboundPolicy gets a reference to the given string and assigns it to the OutboundPolicy field.
func (o *PutFirewallRulesRequest) SetOutboundPolicy(v string) {
	o.OutboundPolicy = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PutFirewallRulesRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutFirewallRulesRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PutFirewallRulesRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *PutFirewallRulesRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o PutFirewallRulesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutFirewallRulesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if o.Inbound != nil {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.InboundPolicy) {
		toSerialize["inbound_policy"] = o.InboundPolicy
	}
	if o.Outbound != nil {
		toSerialize["outbound"] = o.Outbound
	}
	if !IsNil(o.OutboundPolicy) {
		toSerialize["outbound_policy"] = o.OutboundPolicy
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullablePutFirewallRulesRequest struct {
	value *PutFirewallRulesRequest
	isSet bool
}

func (v NullablePutFirewallRulesRequest) Get() *PutFirewallRulesRequest {
	return v.value
}

func (v *NullablePutFirewallRulesRequest) Set(val *PutFirewallRulesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutFirewallRulesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutFirewallRulesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutFirewallRulesRequest(val *PutFirewallRulesRequest) *NullablePutFirewallRulesRequest {
	return &NullablePutFirewallRulesRequest{value: val, isSet: true}
}

func (v NullablePutFirewallRulesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutFirewallRulesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


