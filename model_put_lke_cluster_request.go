/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PutLkeClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutLkeClusterRequest{}

// PutLkeClusterRequest struct for PutLkeClusterRequest
type PutLkeClusterRequest struct {
	ControlPlane *PutLkeClusterRequestControlPlane `json:"control_plane,omitempty"`
	// The desired Kubernetes version for this Kubernetes cluster in the format of &lt;major&gt;.&lt;minor&gt;. New and recycled Nodes in this cluster will be installed with the latest available patch for the Cluster's Kubernetes version.  When upgrading the Kubernetes version, only the next latest minor version following the current version can be deployed. For example, a cluster with Kubernetes version 1.19 can be upgraded to version 1.20, but not directly to 1.21.  The Kubernetes version of a cluster can not be downgraded.
	K8sVersion *string `json:"k8s_version,omitempty"`
	// This Kubernetes cluster's unique label for display purposes only. Labels have the following constraints:    - UTF-8 characters will be returned by the API using escape sequences of their Unicode code points. For example, the Japanese character _„Åã_ is 3 bytes in UTF-8 (`0xE382AB`). Its Unicode code point is 2 bytes (`0x30AB`). APIv4 supports this character and the API will return it as the escape sequence using six 1 byte characters which represent 2 bytes of Unicode code point (`\"\\u30ab\"`).    - 4 byte UTF-8 characters are not supported.    - If the label is entirely composed of UTF-8 characters, the API response will return the code points using up to 193 1 byte characters.
	Label *string `json:"label,omitempty"`
	// An array of tags applied to the Kubernetes cluster. Tags are for organizational purposes only. To delete a tag, exclude it from your `tags` array.
	Tags []string `json:"tags,omitempty"`
}

// NewPutLkeClusterRequest instantiates a new PutLkeClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutLkeClusterRequest() *PutLkeClusterRequest {
	this := PutLkeClusterRequest{}
	return &this
}

// NewPutLkeClusterRequestWithDefaults instantiates a new PutLkeClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutLkeClusterRequestWithDefaults() *PutLkeClusterRequest {
	this := PutLkeClusterRequest{}
	return &this
}

// GetControlPlane returns the ControlPlane field value if set, zero value otherwise.
func (o *PutLkeClusterRequest) GetControlPlane() PutLkeClusterRequestControlPlane {
	if o == nil || IsNil(o.ControlPlane) {
		var ret PutLkeClusterRequestControlPlane
		return ret
	}
	return *o.ControlPlane
}

// GetControlPlaneOk returns a tuple with the ControlPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLkeClusterRequest) GetControlPlaneOk() (*PutLkeClusterRequestControlPlane, bool) {
	if o == nil || IsNil(o.ControlPlane) {
		return nil, false
	}
	return o.ControlPlane, true
}

// HasControlPlane returns a boolean if a field has been set.
func (o *PutLkeClusterRequest) HasControlPlane() bool {
	if o != nil && !IsNil(o.ControlPlane) {
		return true
	}

	return false
}

// SetControlPlane gets a reference to the given PutLkeClusterRequestControlPlane and assigns it to the ControlPlane field.
func (o *PutLkeClusterRequest) SetControlPlane(v PutLkeClusterRequestControlPlane) {
	o.ControlPlane = &v
}

// GetK8sVersion returns the K8sVersion field value if set, zero value otherwise.
func (o *PutLkeClusterRequest) GetK8sVersion() string {
	if o == nil || IsNil(o.K8sVersion) {
		var ret string
		return ret
	}
	return *o.K8sVersion
}

// GetK8sVersionOk returns a tuple with the K8sVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLkeClusterRequest) GetK8sVersionOk() (*string, bool) {
	if o == nil || IsNil(o.K8sVersion) {
		return nil, false
	}
	return o.K8sVersion, true
}

// HasK8sVersion returns a boolean if a field has been set.
func (o *PutLkeClusterRequest) HasK8sVersion() bool {
	if o != nil && !IsNil(o.K8sVersion) {
		return true
	}

	return false
}

// SetK8sVersion gets a reference to the given string and assigns it to the K8sVersion field.
func (o *PutLkeClusterRequest) SetK8sVersion(v string) {
	o.K8sVersion = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PutLkeClusterRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLkeClusterRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PutLkeClusterRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PutLkeClusterRequest) SetLabel(v string) {
	o.Label = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PutLkeClusterRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutLkeClusterRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PutLkeClusterRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PutLkeClusterRequest) SetTags(v []string) {
	o.Tags = v
}

func (o PutLkeClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutLkeClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlPlane) {
		toSerialize["control_plane"] = o.ControlPlane
	}
	if !IsNil(o.K8sVersion) {
		toSerialize["k8s_version"] = o.K8sVersion
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullablePutLkeClusterRequest struct {
	value *PutLkeClusterRequest
	isSet bool
}

func (v NullablePutLkeClusterRequest) Get() *PutLkeClusterRequest {
	return v.value
}

func (v *NullablePutLkeClusterRequest) Set(val *PutLkeClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutLkeClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutLkeClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutLkeClusterRequest(val *PutLkeClusterRequest) *NullablePutLkeClusterRequest {
	return &NullablePutLkeClusterRequest{value: val, isSet: true}
}

func (v NullablePutLkeClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutLkeClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


