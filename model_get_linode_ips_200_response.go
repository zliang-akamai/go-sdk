/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeIps200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeIps200Response{}

// GetLinodeIps200Response struct for GetLinodeIps200Response
type GetLinodeIps200Response struct {
	Ipv4 *GetLinodeIps200ResponseIpv4 `json:"ipv4,omitempty"`
	Ipv6 *GetLinodeIps200ResponseIpv6 `json:"ipv6,omitempty"`
}

// NewGetLinodeIps200Response instantiates a new GetLinodeIps200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeIps200Response() *GetLinodeIps200Response {
	this := GetLinodeIps200Response{}
	return &this
}

// NewGetLinodeIps200ResponseWithDefaults instantiates a new GetLinodeIps200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeIps200ResponseWithDefaults() *GetLinodeIps200Response {
	this := GetLinodeIps200Response{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *GetLinodeIps200Response) GetIpv4() GetLinodeIps200ResponseIpv4 {
	if o == nil || IsNil(o.Ipv4) {
		var ret GetLinodeIps200ResponseIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200Response) GetIpv4Ok() (*GetLinodeIps200ResponseIpv4, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetLinodeIps200Response) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given GetLinodeIps200ResponseIpv4 and assigns it to the Ipv4 field.
func (o *GetLinodeIps200Response) SetIpv4(v GetLinodeIps200ResponseIpv4) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *GetLinodeIps200Response) GetIpv6() GetLinodeIps200ResponseIpv6 {
	if o == nil || IsNil(o.Ipv6) {
		var ret GetLinodeIps200ResponseIpv6
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeIps200Response) GetIpv6Ok() (*GetLinodeIps200ResponseIpv6, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetLinodeIps200Response) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given GetLinodeIps200ResponseIpv6 and assigns it to the Ipv6 field.
func (o *GetLinodeIps200Response) SetIpv6(v GetLinodeIps200ResponseIpv6) {
	o.Ipv6 = &v
}

func (o GetLinodeIps200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeIps200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

type NullableGetLinodeIps200Response struct {
	value *GetLinodeIps200Response
	isSet bool
}

func (v NullableGetLinodeIps200Response) Get() *GetLinodeIps200Response {
	return v.value
}

func (v *NullableGetLinodeIps200Response) Set(val *GetLinodeIps200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeIps200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeIps200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeIps200Response(val *GetLinodeIps200Response) *NullableGetLinodeIps200Response {
	return &NullableGetLinodeIps200Response{value: val, isSet: true}
}

func (v NullableGetLinodeIps200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeIps200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


