/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostUploadImage200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostUploadImage200Response{}

// PostUploadImage200Response struct for PostUploadImage200Response
type PostUploadImage200Response struct {
	Image *GetImages200ResponseDataInner `json:"image,omitempty"`
	// The URL to upload the Image to.
	UploadTo *string `json:"upload_to,omitempty"`
}

// NewPostUploadImage200Response instantiates a new PostUploadImage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostUploadImage200Response() *PostUploadImage200Response {
	this := PostUploadImage200Response{}
	return &this
}

// NewPostUploadImage200ResponseWithDefaults instantiates a new PostUploadImage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostUploadImage200ResponseWithDefaults() *PostUploadImage200Response {
	this := PostUploadImage200Response{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *PostUploadImage200Response) GetImage() GetImages200ResponseDataInner {
	if o == nil || IsNil(o.Image) {
		var ret GetImages200ResponseDataInner
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUploadImage200Response) GetImageOk() (*GetImages200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *PostUploadImage200Response) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given GetImages200ResponseDataInner and assigns it to the Image field.
func (o *PostUploadImage200Response) SetImage(v GetImages200ResponseDataInner) {
	o.Image = &v
}

// GetUploadTo returns the UploadTo field value if set, zero value otherwise.
func (o *PostUploadImage200Response) GetUploadTo() string {
	if o == nil || IsNil(o.UploadTo) {
		var ret string
		return ret
	}
	return *o.UploadTo
}

// GetUploadToOk returns a tuple with the UploadTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUploadImage200Response) GetUploadToOk() (*string, bool) {
	if o == nil || IsNil(o.UploadTo) {
		return nil, false
	}
	return o.UploadTo, true
}

// HasUploadTo returns a boolean if a field has been set.
func (o *PostUploadImage200Response) HasUploadTo() bool {
	if o != nil && !IsNil(o.UploadTo) {
		return true
	}

	return false
}

// SetUploadTo gets a reference to the given string and assigns it to the UploadTo field.
func (o *PostUploadImage200Response) SetUploadTo(v string) {
	o.UploadTo = &v
}

func (o PostUploadImage200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostUploadImage200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.UploadTo) {
		toSerialize["upload_to"] = o.UploadTo
	}
	return toSerialize, nil
}

type NullablePostUploadImage200Response struct {
	value *PostUploadImage200Response
	isSet bool
}

func (v NullablePostUploadImage200Response) Get() *PostUploadImage200Response {
	return v.value
}

func (v *NullablePostUploadImage200Response) Set(val *PostUploadImage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostUploadImage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostUploadImage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostUploadImage200Response(val *PostUploadImage200Response) *NullablePostUploadImage200Response {
	return &NullablePostUploadImage200Response{value: val, isSet: true}
}

func (v NullablePostUploadImage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostUploadImage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


