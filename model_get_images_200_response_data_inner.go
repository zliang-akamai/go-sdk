/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetImages200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetImages200ResponseDataInner{}

// GetImages200ResponseDataInner Image object.
type GetImages200ResponseDataInner struct {
	// A list of the possible capabilities of this image.  - `cloud-init`. The image supports the cloud-init multi-distribution method with our [Metadata service](https://www.linode.com/docs/products/compute/compute-instances/guides/metadata/#troubleshoot-metadata-and-cloud-init). This only applies to public images.  - `distributed-sites`. Whether the image can be used in distributed compute regions. Compared to a core compute region, distributed compute regions offer limited functionality, but they're globally distributed. Your image can be geographically closer to you, potentially letting you deploy it quicker. See [Regions and images](https://techdocs.akamai.com/cloud-computing/docs/images#regions-and-images) for complete details.
	Capabilities []string `json:"capabilities,omitempty"`
	// When this image was created.
	Created *time.Time `json:"created,omitempty"`
	// The name of the user who created this image, or `linode` for public images.
	CreatedBy *string `json:"created_by,omitempty"`
	// Whether this image is deprecated. Only public images can be deprecated.
	Deprecated *bool `json:"deprecated,omitempty"`
	// A detailed description of this image.
	Description NullableString `json:"description,omitempty"`
	// The date of the public image's planned removal from service. This is `null` for private images.
	Eol NullableTime `json:"eol,omitempty"`
	// Only images created automatically from a deleted compute instance (type=automatic) expire. This is `null` for private images.
	Expiry NullableTime `json:"expiry,omitempty"`
	// The unique identifier for each image.
	Id *string `json:"id,omitempty"`
	// Revealed as `true` if the image is a public distribution image. Private, account-specific images are listed as `false`.
	IsPublic *bool `json:"is_public,omitempty"`
	// A short description of the image.
	Label *string `json:"label,omitempty"`
	// Details on the regions where this image is stored. See [Regions and images](https://techdocs.akamai.com/cloud-computing/docs/images#regions-and-images) for full details on support for `regions`.
	Regions []GetImages200ResponseDataInnerRegionsInner `json:"regions,omitempty"`
	// The minimum size in MB this image needs to deploy.
	Size *int32 `json:"size,omitempty"`
	// The current status of the image. Possible values are `available`, `creating`, and `pending_upload`.  > ðŸ“˜ > > The `+order_by` and `+order` operators are not available when [filtering](https://techdocs.akamai.com/linode-api/reference/filtering-and-sorting) on this key.
	Status *string `json:"status,omitempty"`
	// Tags used for organizational purposes. A tag can be from 3 to 100 characters long, and an image can have a maximum of 500 total tags.
	Tags []string `json:"tags,omitempty"`
	// The total size in bytes of all instances of this image, in all `regions`.  > ðŸ“˜ > > This object is empty for existing images. It's intended for use with future functionality.
	TotalSize *int32 `json:"total_size,omitempty"`
	// How the image was created. Create a `manual` image at any time. An `automatic` image is created automatically from a deleted compute instance.
	Type *string `json:"type,omitempty"`
	// When this image was last updated.
	Updated *time.Time `json:"updated,omitempty"`
	// The upstream distribution vendor. This is `null` for private images.
	Vendor NullableString `json:"vendor,omitempty"`
}

// NewGetImages200ResponseDataInner instantiates a new GetImages200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetImages200ResponseDataInner() *GetImages200ResponseDataInner {
	this := GetImages200ResponseDataInner{}
	return &this
}

// NewGetImages200ResponseDataInnerWithDefaults instantiates a new GetImages200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetImages200ResponseDataInnerWithDefaults() *GetImages200ResponseDataInner {
	this := GetImages200ResponseDataInner{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetCapabilities() []string {
	if o == nil || IsNil(o.Capabilities) {
		var ret []string
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetCapabilitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []string and assigns it to the Capabilities field.
func (o *GetImages200ResponseDataInner) SetCapabilities(v []string) {
	o.Capabilities = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GetImages200ResponseDataInner) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *GetImages200ResponseDataInner) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetDeprecated returns the Deprecated field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetDeprecated() bool {
	if o == nil || IsNil(o.Deprecated) {
		var ret bool
		return ret
	}
	return *o.Deprecated
}

// GetDeprecatedOk returns a tuple with the Deprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deprecated) {
		return nil, false
	}
	return o.Deprecated, true
}

// HasDeprecated returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasDeprecated() bool {
	if o != nil && !IsNil(o.Deprecated) {
		return true
	}

	return false
}

// SetDeprecated gets a reference to the given bool and assigns it to the Deprecated field.
func (o *GetImages200ResponseDataInner) SetDeprecated(v bool) {
	o.Deprecated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImages200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImages200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *GetImages200ResponseDataInner) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *GetImages200ResponseDataInner) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *GetImages200ResponseDataInner) UnsetDescription() {
	o.Description.Unset()
}

// GetEol returns the Eol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImages200ResponseDataInner) GetEol() time.Time {
	if o == nil || IsNil(o.Eol.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Eol.Get()
}

// GetEolOk returns a tuple with the Eol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImages200ResponseDataInner) GetEolOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Eol.Get(), o.Eol.IsSet()
}

// HasEol returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasEol() bool {
	if o != nil && o.Eol.IsSet() {
		return true
	}

	return false
}

// SetEol gets a reference to the given NullableTime and assigns it to the Eol field.
func (o *GetImages200ResponseDataInner) SetEol(v time.Time) {
	o.Eol.Set(&v)
}
// SetEolNil sets the value for Eol to be an explicit nil
func (o *GetImages200ResponseDataInner) SetEolNil() {
	o.Eol.Set(nil)
}

// UnsetEol ensures that no value is present for Eol, not even an explicit nil
func (o *GetImages200ResponseDataInner) UnsetEol() {
	o.Eol.Unset()
}

// GetExpiry returns the Expiry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImages200ResponseDataInner) GetExpiry() time.Time {
	if o == nil || IsNil(o.Expiry.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Expiry.Get()
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImages200ResponseDataInner) GetExpiryOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expiry.Get(), o.Expiry.IsSet()
}

// HasExpiry returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasExpiry() bool {
	if o != nil && o.Expiry.IsSet() {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given NullableTime and assigns it to the Expiry field.
func (o *GetImages200ResponseDataInner) SetExpiry(v time.Time) {
	o.Expiry.Set(&v)
}
// SetExpiryNil sets the value for Expiry to be an explicit nil
func (o *GetImages200ResponseDataInner) SetExpiryNil() {
	o.Expiry.Set(nil)
}

// UnsetExpiry ensures that no value is present for Expiry, not even an explicit nil
func (o *GetImages200ResponseDataInner) UnsetExpiry() {
	o.Expiry.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetImages200ResponseDataInner) SetId(v string) {
	o.Id = &v
}

// GetIsPublic returns the IsPublic field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetIsPublic() bool {
	if o == nil || IsNil(o.IsPublic) {
		var ret bool
		return ret
	}
	return *o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetIsPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPublic) {
		return nil, false
	}
	return o.IsPublic, true
}

// HasIsPublic returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasIsPublic() bool {
	if o != nil && !IsNil(o.IsPublic) {
		return true
	}

	return false
}

// SetIsPublic gets a reference to the given bool and assigns it to the IsPublic field.
func (o *GetImages200ResponseDataInner) SetIsPublic(v bool) {
	o.IsPublic = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetImages200ResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetRegions() []GetImages200ResponseDataInnerRegionsInner {
	if o == nil || IsNil(o.Regions) {
		var ret []GetImages200ResponseDataInnerRegionsInner
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetRegionsOk() ([]GetImages200ResponseDataInnerRegionsInner, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []GetImages200ResponseDataInnerRegionsInner and assigns it to the Regions field.
func (o *GetImages200ResponseDataInner) SetRegions(v []GetImages200ResponseDataInnerRegionsInner) {
	o.Regions = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *GetImages200ResponseDataInner) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetImages200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetImages200ResponseDataInner) SetTags(v []string) {
	o.Tags = v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetTotalSize() int32 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetTotalSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *GetImages200ResponseDataInner) SetTotalSize(v int32) {
	o.TotalSize = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetImages200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GetImages200ResponseDataInner) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImages200ResponseDataInner) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GetImages200ResponseDataInner) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImages200ResponseDataInner) GetVendor() string {
	if o == nil || IsNil(o.Vendor.Get()) {
		var ret string
		return ret
	}
	return *o.Vendor.Get()
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImages200ResponseDataInner) GetVendorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vendor.Get(), o.Vendor.IsSet()
}

// HasVendor returns a boolean if a field has been set.
func (o *GetImages200ResponseDataInner) HasVendor() bool {
	if o != nil && o.Vendor.IsSet() {
		return true
	}

	return false
}

// SetVendor gets a reference to the given NullableString and assigns it to the Vendor field.
func (o *GetImages200ResponseDataInner) SetVendor(v string) {
	o.Vendor.Set(&v)
}
// SetVendorNil sets the value for Vendor to be an explicit nil
func (o *GetImages200ResponseDataInner) SetVendorNil() {
	o.Vendor.Set(nil)
}

// UnsetVendor ensures that no value is present for Vendor, not even an explicit nil
func (o *GetImages200ResponseDataInner) UnsetVendor() {
	o.Vendor.Unset()
}

func (o GetImages200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetImages200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["created_by"] = o.CreatedBy
	}
	if !IsNil(o.Deprecated) {
		toSerialize["deprecated"] = o.Deprecated
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Eol.IsSet() {
		toSerialize["eol"] = o.Eol.Get()
	}
	if o.Expiry.IsSet() {
		toSerialize["expiry"] = o.Expiry.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsPublic) {
		toSerialize["is_public"] = o.IsPublic
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TotalSize) {
		toSerialize["total_size"] = o.TotalSize
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if o.Vendor.IsSet() {
		toSerialize["vendor"] = o.Vendor.Get()
	}
	return toSerialize, nil
}

type NullableGetImages200ResponseDataInner struct {
	value *GetImages200ResponseDataInner
	isSet bool
}

func (v NullableGetImages200ResponseDataInner) Get() *GetImages200ResponseDataInner {
	return v.value
}

func (v *NullableGetImages200ResponseDataInner) Set(val *GetImages200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetImages200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetImages200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetImages200ResponseDataInner(val *GetImages200ResponseDataInner) *NullableGetImages200ResponseDataInner {
	return &NullableGetImages200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetImages200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetImages200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


