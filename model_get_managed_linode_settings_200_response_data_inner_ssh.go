/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetManagedLinodeSettings200ResponseDataInnerSsh type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetManagedLinodeSettings200ResponseDataInnerSsh{}

// GetManagedLinodeSettings200ResponseDataInnerSsh The SSH settings for this Linode.
type GetManagedLinodeSettings200ResponseDataInnerSsh struct {
	// If true, Linode special forces may access this Linode over ssh to respond to Issues.
	Access *bool `json:"access,omitempty"`
	// The IP Linode special forces should use to access this Linode when responding to an Issue.  By default, any of a Linode's IP addresses can be used for incident response access.
	Ip *string `json:"ip,omitempty"`
	// The port Linode special forces should use to access this Linode over ssh to respond to an Issue.  The default `null` value corresponds to port 22.
	Port NullableInt32 `json:"port,omitempty"`
	// The specific user, if any, Linode's special forces should use when accessing this Linode to respond to an issue.  The default `null` value corresponds to the root user.
	User NullableString `json:"user,omitempty"`
}

// NewGetManagedLinodeSettings200ResponseDataInnerSsh instantiates a new GetManagedLinodeSettings200ResponseDataInnerSsh object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetManagedLinodeSettings200ResponseDataInnerSsh() *GetManagedLinodeSettings200ResponseDataInnerSsh {
	this := GetManagedLinodeSettings200ResponseDataInnerSsh{}
	var access bool = true
	this.Access = &access
	var ip string = "any"
	this.Ip = &ip
	return &this
}

// NewGetManagedLinodeSettings200ResponseDataInnerSshWithDefaults instantiates a new GetManagedLinodeSettings200ResponseDataInnerSsh object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetManagedLinodeSettings200ResponseDataInnerSshWithDefaults() *GetManagedLinodeSettings200ResponseDataInnerSsh {
	this := GetManagedLinodeSettings200ResponseDataInnerSsh{}
	var access bool = true
	this.Access = &access
	var ip string = "any"
	this.Ip = &ip
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetAccess() bool {
	if o == nil || IsNil(o.Access) {
		var ret bool
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given bool and assigns it to the Access field.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetAccess(v bool) {
	o.Access = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetIp(v string) {
	o.Ip = &v
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetPort() int32 {
	if o == nil || IsNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetPort(v int32) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) UnsetPort() {
	o.Port.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetUser() string {
	if o == nil || IsNil(o.User.Get()) {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetUser(v string) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *GetManagedLinodeSettings200ResponseDataInnerSsh) UnsetUser() {
	o.User.Unset()
}

func (o GetManagedLinodeSettings200ResponseDataInnerSsh) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetManagedLinodeSettings200ResponseDataInnerSsh) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.User.IsSet() {
		toSerialize["user"] = o.User.Get()
	}
	return toSerialize, nil
}

type NullableGetManagedLinodeSettings200ResponseDataInnerSsh struct {
	value *GetManagedLinodeSettings200ResponseDataInnerSsh
	isSet bool
}

func (v NullableGetManagedLinodeSettings200ResponseDataInnerSsh) Get() *GetManagedLinodeSettings200ResponseDataInnerSsh {
	return v.value
}

func (v *NullableGetManagedLinodeSettings200ResponseDataInnerSsh) Set(val *GetManagedLinodeSettings200ResponseDataInnerSsh) {
	v.value = val
	v.isSet = true
}

func (v NullableGetManagedLinodeSettings200ResponseDataInnerSsh) IsSet() bool {
	return v.isSet
}

func (v *NullableGetManagedLinodeSettings200ResponseDataInnerSsh) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetManagedLinodeSettings200ResponseDataInnerSsh(val *GetManagedLinodeSettings200ResponseDataInnerSsh) *NullableGetManagedLinodeSettings200ResponseDataInnerSsh {
	return &NullableGetManagedLinodeSettings200ResponseDataInnerSsh{value: val, isSet: true}
}

func (v NullableGetManagedLinodeSettings200ResponseDataInnerSsh) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetManagedLinodeSettings200ResponseDataInnerSsh) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


