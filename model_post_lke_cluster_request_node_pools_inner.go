/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostLkeClusterRequestNodePoolsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostLkeClusterRequestNodePoolsInner{}

// PostLkeClusterRequestNodePoolsInner Specifies a collection of Linodes to serve as members of a Kubernetes cluster.
type PostLkeClusterRequestNodePoolsInner struct {
	Autoscaler *PostLkeClusterRequestNodePoolsInnerAutoscaler `json:"autoscaler,omitempty"`
	// The number of nodes in the Node Pool.
	Count int32 `json:"count"`
	// This node pool's custom disk layout. Each item in this array will create a new disk partition for each node in this node pool.  > ðŸ“˜ > > Omit this field, except for special use cases. The disks specified here are partitions in _addition_ to the primary partition and reduce the size of the primary partition. This can lead to stability problems for the node.    - The custom disk layout is applied to each node in this node pool.    - The maximum number of custom disk partitions that can be configured is 7.    - Once the requested disk partitions are allocated, the remaining disk space is allocated to the node's boot disk.    - A node pool's custom disk layout is immutable over the lifetime of the node pool.
	Disks []PostLkeClusterRequestNodePoolsInnerDisksInner `json:"disks,omitempty"`
	// Key-value pairs added as labels to nodes in the node pool. Labels help classify your nodes and easily select subsets of objects. To learn more, review [Add Labels and Taints to your LKE node pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).  Specifying an empty dictionary value will remove all previously set labels.
	Labels *[]interface{} `json:"labels,omitempty"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	Tags []string `json:"tags,omitempty"`
	// Kubernetes taints to add to node pool nodes. Taints help control how pods are scheduled onto nodes, specifically allowing them to repel certain pods. To learn more, review [Add labels and taints to your LKE node pools](https://www.linode.com/docs/products/compute/kubernetes/guides/deploy-and-manage-cluster-with-the-linode-api/#add-labels-and-taints-to-your-lke-node-pools).  Specifying an empty array (`[]`) removes all previously set taints.
	Taints []PostLkeClusterRequestNodePoolsInnerTaintsInner `json:"taints,omitempty"`
	// The Linode Type for all of the nodes in the Node Pool.
	Type string `json:"type"`
}

type _PostLkeClusterRequestNodePoolsInner PostLkeClusterRequestNodePoolsInner

// NewPostLkeClusterRequestNodePoolsInner instantiates a new PostLkeClusterRequestNodePoolsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostLkeClusterRequestNodePoolsInner(count int32, type_ string) *PostLkeClusterRequestNodePoolsInner {
	this := PostLkeClusterRequestNodePoolsInner{}
	this.Count = count
	this.Type = type_
	return &this
}

// NewPostLkeClusterRequestNodePoolsInnerWithDefaults instantiates a new PostLkeClusterRequestNodePoolsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostLkeClusterRequestNodePoolsInnerWithDefaults() *PostLkeClusterRequestNodePoolsInner {
	this := PostLkeClusterRequestNodePoolsInner{}
	return &this
}

// GetAutoscaler returns the Autoscaler field value if set, zero value otherwise.
func (o *PostLkeClusterRequestNodePoolsInner) GetAutoscaler() PostLkeClusterRequestNodePoolsInnerAutoscaler {
	if o == nil || IsNil(o.Autoscaler) {
		var ret PostLkeClusterRequestNodePoolsInnerAutoscaler
		return ret
	}
	return *o.Autoscaler
}

// GetAutoscalerOk returns a tuple with the Autoscaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetAutoscalerOk() (*PostLkeClusterRequestNodePoolsInnerAutoscaler, bool) {
	if o == nil || IsNil(o.Autoscaler) {
		return nil, false
	}
	return o.Autoscaler, true
}

// HasAutoscaler returns a boolean if a field has been set.
func (o *PostLkeClusterRequestNodePoolsInner) HasAutoscaler() bool {
	if o != nil && !IsNil(o.Autoscaler) {
		return true
	}

	return false
}

// SetAutoscaler gets a reference to the given PostLkeClusterRequestNodePoolsInnerAutoscaler and assigns it to the Autoscaler field.
func (o *PostLkeClusterRequestNodePoolsInner) SetAutoscaler(v PostLkeClusterRequestNodePoolsInnerAutoscaler) {
	o.Autoscaler = &v
}

// GetCount returns the Count field value
func (o *PostLkeClusterRequestNodePoolsInner) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *PostLkeClusterRequestNodePoolsInner) SetCount(v int32) {
	o.Count = v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *PostLkeClusterRequestNodePoolsInner) GetDisks() []PostLkeClusterRequestNodePoolsInnerDisksInner {
	if o == nil || IsNil(o.Disks) {
		var ret []PostLkeClusterRequestNodePoolsInnerDisksInner
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetDisksOk() ([]PostLkeClusterRequestNodePoolsInnerDisksInner, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *PostLkeClusterRequestNodePoolsInner) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []PostLkeClusterRequestNodePoolsInnerDisksInner and assigns it to the Disks field.
func (o *PostLkeClusterRequestNodePoolsInner) SetDisks(v []PostLkeClusterRequestNodePoolsInnerDisksInner) {
	o.Disks = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *PostLkeClusterRequestNodePoolsInner) GetLabels() []interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret []interface{}
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetLabelsOk() (*[]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *PostLkeClusterRequestNodePoolsInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []interface{} and assigns it to the Labels field.
func (o *PostLkeClusterRequestNodePoolsInner) SetLabels(v []interface{}) {
	o.Labels = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PostLkeClusterRequestNodePoolsInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PostLkeClusterRequestNodePoolsInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PostLkeClusterRequestNodePoolsInner) SetTags(v []string) {
	o.Tags = v
}

// GetTaints returns the Taints field value if set, zero value otherwise.
func (o *PostLkeClusterRequestNodePoolsInner) GetTaints() []PostLkeClusterRequestNodePoolsInnerTaintsInner {
	if o == nil || IsNil(o.Taints) {
		var ret []PostLkeClusterRequestNodePoolsInnerTaintsInner
		return ret
	}
	return o.Taints
}

// GetTaintsOk returns a tuple with the Taints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetTaintsOk() ([]PostLkeClusterRequestNodePoolsInnerTaintsInner, bool) {
	if o == nil || IsNil(o.Taints) {
		return nil, false
	}
	return o.Taints, true
}

// HasTaints returns a boolean if a field has been set.
func (o *PostLkeClusterRequestNodePoolsInner) HasTaints() bool {
	if o != nil && !IsNil(o.Taints) {
		return true
	}

	return false
}

// SetTaints gets a reference to the given []PostLkeClusterRequestNodePoolsInnerTaintsInner and assigns it to the Taints field.
func (o *PostLkeClusterRequestNodePoolsInner) SetTaints(v []PostLkeClusterRequestNodePoolsInnerTaintsInner) {
	o.Taints = v
}

// GetType returns the Type field value
func (o *PostLkeClusterRequestNodePoolsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PostLkeClusterRequestNodePoolsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PostLkeClusterRequestNodePoolsInner) SetType(v string) {
	o.Type = v
}

func (o PostLkeClusterRequestNodePoolsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostLkeClusterRequestNodePoolsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autoscaler) {
		toSerialize["autoscaler"] = o.Autoscaler
	}
	toSerialize["count"] = o.Count
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Taints) {
		toSerialize["taints"] = o.Taints
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *PostLkeClusterRequestNodePoolsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostLkeClusterRequestNodePoolsInner := _PostLkeClusterRequestNodePoolsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostLkeClusterRequestNodePoolsInner)

	if err != nil {
		return err
	}

	*o = PostLkeClusterRequestNodePoolsInner(varPostLkeClusterRequestNodePoolsInner)

	return err
}

type NullablePostLkeClusterRequestNodePoolsInner struct {
	value *PostLkeClusterRequestNodePoolsInner
	isSet bool
}

func (v NullablePostLkeClusterRequestNodePoolsInner) Get() *PostLkeClusterRequestNodePoolsInner {
	return v.value
}

func (v *NullablePostLkeClusterRequestNodePoolsInner) Set(val *PostLkeClusterRequestNodePoolsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostLkeClusterRequestNodePoolsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostLkeClusterRequestNodePoolsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostLkeClusterRequestNodePoolsInner(val *PostLkeClusterRequestNodePoolsInner) *NullablePostLkeClusterRequestNodePoolsInner {
	return &NullablePostLkeClusterRequestNodePoolsInner{value: val, isSet: true}
}

func (v NullablePostLkeClusterRequestNodePoolsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostLkeClusterRequestNodePoolsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


