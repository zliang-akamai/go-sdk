/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLkeClusters200ResponseDataInnerControlPlaneAcl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusters200ResponseDataInnerControlPlaneAcl{}

// GetLkeClusters200ResponseDataInnerControlPlaneAcl When a cluster is equipped with an ACL, the apiserver and dashboard endpoints get mapped to a NodeBalancer address where all traffic is protected through a Cloud Firewall. This object supports required keys `enabled` and `addresses`. Also supports the optional key `revision-id`. If omitted, at discretion of the platform, the cluster may or may not be equipped with ACL support. The Default Policy shall be set to ALLOW (i.e., access controls are disabled). If set to `{}`, default elements are set. __NOTE: Control Plane ACLs may not currently be available to all users.__
type GetLkeClusters200ResponseDataInnerControlPlaneAcl struct {
	Addresses *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses `json:"addresses,omitempty"`
	// Defines Default Policy.  A value of true results in a default policy of DENY.  A value of false results in a default policy of ALLOW (i.e., access controls are disabled). Defaults to `true`. Creating a cluster with ACL (or upgrading a cluster to use ACL for LKE) is an __irreversible__ change: once upgraded, access controls can only be toggled through this property.
	Enabled *bool `json:"enabled,omitempty"`
	// Enables clients to track events related to ACL update requests and enforcements. Optional field. If omitted, defaults to a randomly generated string.
	RevisionId *string `json:"revision-id,omitempty"`
}

// NewGetLkeClusters200ResponseDataInnerControlPlaneAcl instantiates a new GetLkeClusters200ResponseDataInnerControlPlaneAcl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusters200ResponseDataInnerControlPlaneAcl() *GetLkeClusters200ResponseDataInnerControlPlaneAcl {
	this := GetLkeClusters200ResponseDataInnerControlPlaneAcl{}
	return &this
}

// NewGetLkeClusters200ResponseDataInnerControlPlaneAclWithDefaults instantiates a new GetLkeClusters200ResponseDataInnerControlPlaneAcl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusters200ResponseDataInnerControlPlaneAclWithDefaults() *GetLkeClusters200ResponseDataInnerControlPlaneAcl {
	this := GetLkeClusters200ResponseDataInnerControlPlaneAcl{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetAddresses() GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses {
	if o == nil || IsNil(o.Addresses) {
		var ret GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetAddressesOk() (*GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses and assigns it to the Addresses field.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) SetAddresses(v GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) {
	o.Addresses = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetRevisionId() string {
	if o == nil || IsNil(o.RevisionId) {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) GetRevisionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionId) {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) HasRevisionId() bool {
	if o != nil && !IsNil(o.RevisionId) {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAcl) SetRevisionId(v string) {
	o.RevisionId = &v
}

func (o GetLkeClusters200ResponseDataInnerControlPlaneAcl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusters200ResponseDataInnerControlPlaneAcl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RevisionId) {
		toSerialize["revision-id"] = o.RevisionId
	}
	return toSerialize, nil
}

type NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl struct {
	value *GetLkeClusters200ResponseDataInnerControlPlaneAcl
	isSet bool
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) Get() *GetLkeClusters200ResponseDataInnerControlPlaneAcl {
	return v.value
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) Set(val *GetLkeClusters200ResponseDataInnerControlPlaneAcl) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusters200ResponseDataInnerControlPlaneAcl(val *GetLkeClusters200ResponseDataInnerControlPlaneAcl) *NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl {
	return &NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl{value: val, isSet: true}
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAcl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


