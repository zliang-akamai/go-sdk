/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostPayPalPaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostPayPalPaymentRequest{}

// PostPayPalPaymentRequest An object representing the staging of a Payment via PayPal.
type PostPayPalPaymentRequest struct {
	// The URL to have PayPal redirect to when Payment is canceled.
	CancelUrl string `json:"cancel_url"`
	// The URL to have PayPal redirect to when Payment is approved.
	RedirectUrl string `json:"redirect_url"`
	// The payment amount in USD. Minimum accepted value of $5 USD. Maximum accepted value of $500 USD or credit card payment limit; whichever value is highest. PayPal's maximum transaction limit is $10,000 USD.
	Usd string `json:"usd"`
}

type _PostPayPalPaymentRequest PostPayPalPaymentRequest

// NewPostPayPalPaymentRequest instantiates a new PostPayPalPaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPayPalPaymentRequest(cancelUrl string, redirectUrl string, usd string) *PostPayPalPaymentRequest {
	this := PostPayPalPaymentRequest{}
	this.CancelUrl = cancelUrl
	this.RedirectUrl = redirectUrl
	this.Usd = usd
	return &this
}

// NewPostPayPalPaymentRequestWithDefaults instantiates a new PostPayPalPaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPayPalPaymentRequestWithDefaults() *PostPayPalPaymentRequest {
	this := PostPayPalPaymentRequest{}
	return &this
}

// GetCancelUrl returns the CancelUrl field value
func (o *PostPayPalPaymentRequest) GetCancelUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CancelUrl
}

// GetCancelUrlOk returns a tuple with the CancelUrl field value
// and a boolean to check if the value has been set.
func (o *PostPayPalPaymentRequest) GetCancelUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CancelUrl, true
}

// SetCancelUrl sets field value
func (o *PostPayPalPaymentRequest) SetCancelUrl(v string) {
	o.CancelUrl = v
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *PostPayPalPaymentRequest) GetRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *PostPayPalPaymentRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *PostPayPalPaymentRequest) SetRedirectUrl(v string) {
	o.RedirectUrl = v
}

// GetUsd returns the Usd field value
func (o *PostPayPalPaymentRequest) GetUsd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Usd
}

// GetUsdOk returns a tuple with the Usd field value
// and a boolean to check if the value has been set.
func (o *PostPayPalPaymentRequest) GetUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usd, true
}

// SetUsd sets field value
func (o *PostPayPalPaymentRequest) SetUsd(v string) {
	o.Usd = v
}

func (o PostPayPalPaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostPayPalPaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cancel_url"] = o.CancelUrl
	toSerialize["redirect_url"] = o.RedirectUrl
	toSerialize["usd"] = o.Usd
	return toSerialize, nil
}

func (o *PostPayPalPaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cancel_url",
		"redirect_url",
		"usd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostPayPalPaymentRequest := _PostPayPalPaymentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostPayPalPaymentRequest)

	if err != nil {
		return err
	}

	*o = PostPayPalPaymentRequest(varPostPayPalPaymentRequest)

	return err
}

type NullablePostPayPalPaymentRequest struct {
	value *PostPayPalPaymentRequest
	isSet bool
}

func (v NullablePostPayPalPaymentRequest) Get() *PostPayPalPaymentRequest {
	return v.value
}

func (v *NullablePostPayPalPaymentRequest) Set(val *PostPayPalPaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPayPalPaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPayPalPaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPayPalPaymentRequest(val *PostPayPalPaymentRequest) *NullablePostPayPalPaymentRequest {
	return &NullablePostPayPalPaymentRequest{value: val, isSet: true}
}

func (v NullablePostPayPalPaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPayPalPaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


