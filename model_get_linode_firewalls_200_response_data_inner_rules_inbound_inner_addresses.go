/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses{}

// GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses The IPv4 and/or IPv6 addresses affected by this rule. A Rule can have up to 255 total addresses or networks listed across its IPv4 and IPv6 arrays. A network and a single IP are treated as equivalent when accounting for this limit.  Must contain `ipv4`, `ipv6`, or both.
type GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses struct {
	// A list of IPv4 addresses or networks. Addresses must be in IP/mask format. Must not be an empty list.  If `0.0.0.0/0` is included in this list, all IPv4 addresses are affected by this rule.
	Ipv4 []string `json:"ipv4,omitempty"`
	// A list of IPv6 addresses or networks. Addresses must be in IP/mask format and must not include zone_id notation as described in [RFC 4007](https://www.rfc-editor.org/rfc/rfc4007). Must not be an empty list.  If `::/0` is included in this list, all IPv6 addresses are affected by this rule.
	Ipv6 []string `json:"ipv6,omitempty"`
}

// NewGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses instantiates a new GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses() *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses {
	this := GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses{}
	return &this
}

// NewGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddressesWithDefaults instantiates a new GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddressesWithDefaults() *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses {
	this := GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) GetIpv4() []string {
	if o == nil || IsNil(o.Ipv4) {
		var ret []string
		return ret
	}
	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) GetIpv4Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given []string and assigns it to the Ipv4 field.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) SetIpv4(v []string) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) GetIpv6() []string {
	if o == nil || IsNil(o.Ipv6) {
		var ret []string
		return ret
	}
	return o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) GetIpv6Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given []string and assigns it to the Ipv6 field.
func (o *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) SetIpv6(v []string) {
	o.Ipv6 = v
}

func (o GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

type NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses struct {
	value *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses
	isSet bool
}

func (v NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) Get() *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses {
	return v.value
}

func (v *NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) Set(val *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses(val *GetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) *NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses {
	return &NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses{value: val, isSet: true}
}

func (v NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLinodeFirewalls200ResponseDataInnerRulesInboundInnerAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


