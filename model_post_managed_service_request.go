/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostManagedServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostManagedServiceRequest{}

// PostManagedServiceRequest struct for PostManagedServiceRequest
type PostManagedServiceRequest struct {
	// The URL at which this Service is monitored. URL parameters such as `?no-cache=1` are preserved. URL fragments/anchors such as `#monitor` are __not__ preserved.
	Address string `json:"address"`
	// What to expect to find in the response body for the Service to be considered up.
	Body NullableString `json:"body,omitempty"`
	// The group of ManagedContacts who should be notified or consulted with when an Issue is detected.
	ConsultationGroup *string `json:"consultation_group,omitempty"`
	// When this Managed Service was created.
	Created *time.Time `json:"created,omitempty"`
	// An array of ManagedCredential IDs that should be used when attempting to resolve issues with this Service.
	Credentials []int32 `json:"credentials,omitempty"`
	// This Service's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The label for this Service. This is for display purposes only.
	Label string `json:"label" validate:"regexp=[a-zA-Z0-9-_ \\\\.]{3,64}"`
	// Any information relevant to the Service that Linode special forces should know when attempting to resolve Issues.
	Notes NullableString `json:"notes,omitempty"`
	// The Region in which this Service is located. This is required if address is a private IP, and may not be set otherwise.
	Region *string `json:"region,omitempty"`
	// How this Service is monitored.
	ServiceType string `json:"service_type"`
	// The current status of this Service.
	Status *string `json:"status,omitempty"`
	// How long to wait, in seconds, for a response before considering the Service to be down.
	Timeout int32 `json:"timeout"`
	// When this Managed Service was last updated.
	Updated *time.Time `json:"updated,omitempty"`
}

type _PostManagedServiceRequest PostManagedServiceRequest

// NewPostManagedServiceRequest instantiates a new PostManagedServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostManagedServiceRequest(address string, label string, serviceType string, timeout int32) *PostManagedServiceRequest {
	this := PostManagedServiceRequest{}
	this.Address = address
	this.Label = label
	this.ServiceType = serviceType
	this.Timeout = timeout
	return &this
}

// NewPostManagedServiceRequestWithDefaults instantiates a new PostManagedServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostManagedServiceRequestWithDefaults() *PostManagedServiceRequest {
	this := PostManagedServiceRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *PostManagedServiceRequest) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PostManagedServiceRequest) SetAddress(v string) {
	o.Address = v
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostManagedServiceRequest) GetBody() string {
	if o == nil || IsNil(o.Body.Get()) {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostManagedServiceRequest) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *PostManagedServiceRequest) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *PostManagedServiceRequest) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *PostManagedServiceRequest) UnsetBody() {
	o.Body.Unset()
}

// GetConsultationGroup returns the ConsultationGroup field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetConsultationGroup() string {
	if o == nil || IsNil(o.ConsultationGroup) {
		var ret string
		return ret
	}
	return *o.ConsultationGroup
}

// GetConsultationGroupOk returns a tuple with the ConsultationGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetConsultationGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ConsultationGroup) {
		return nil, false
	}
	return o.ConsultationGroup, true
}

// HasConsultationGroup returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasConsultationGroup() bool {
	if o != nil && !IsNil(o.ConsultationGroup) {
		return true
	}

	return false
}

// SetConsultationGroup gets a reference to the given string and assigns it to the ConsultationGroup field.
func (o *PostManagedServiceRequest) SetConsultationGroup(v string) {
	o.ConsultationGroup = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PostManagedServiceRequest) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetCredentials() []int32 {
	if o == nil || IsNil(o.Credentials) {
		var ret []int32
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetCredentialsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given []int32 and assigns it to the Credentials field.
func (o *PostManagedServiceRequest) SetCredentials(v []int32) {
	o.Credentials = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PostManagedServiceRequest) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value
func (o *PostManagedServiceRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PostManagedServiceRequest) SetLabel(v string) {
	o.Label = v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostManagedServiceRequest) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostManagedServiceRequest) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *PostManagedServiceRequest) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *PostManagedServiceRequest) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *PostManagedServiceRequest) UnsetNotes() {
	o.Notes.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PostManagedServiceRequest) SetRegion(v string) {
	o.Region = &v
}

// GetServiceType returns the ServiceType field value
func (o *PostManagedServiceRequest) GetServiceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetServiceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceType, true
}

// SetServiceType sets field value
func (o *PostManagedServiceRequest) SetServiceType(v string) {
	o.ServiceType = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PostManagedServiceRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTimeout returns the Timeout field value
func (o *PostManagedServiceRequest) GetTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *PostManagedServiceRequest) SetTimeout(v int32) {
	o.Timeout = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PostManagedServiceRequest) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedServiceRequest) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PostManagedServiceRequest) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *PostManagedServiceRequest) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o PostManagedServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostManagedServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	if !IsNil(o.ConsultationGroup) {
		toSerialize["consultation_group"] = o.ConsultationGroup
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["label"] = o.Label
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	toSerialize["service_type"] = o.ServiceType
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["timeout"] = o.Timeout
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

func (o *PostManagedServiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"label",
		"service_type",
		"timeout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostManagedServiceRequest := _PostManagedServiceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostManagedServiceRequest)

	if err != nil {
		return err
	}

	*o = PostManagedServiceRequest(varPostManagedServiceRequest)

	return err
}

type NullablePostManagedServiceRequest struct {
	value *PostManagedServiceRequest
	isSet bool
}

func (v NullablePostManagedServiceRequest) Get() *PostManagedServiceRequest {
	return v.value
}

func (v *NullablePostManagedServiceRequest) Set(val *PostManagedServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostManagedServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostManagedServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostManagedServiceRequest(val *PostManagedServiceRequest) *NullablePostManagedServiceRequest {
	return &NullablePostManagedServiceRequest{value: val, isSet: true}
}

func (v NullablePostManagedServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostManagedServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


