/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostIpv6Range200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostIpv6Range200Response{}

// PostIpv6Range200Response struct for PostIpv6Range200Response
type PostIpv6Range200Response struct {
	// The IPv6 network range, including subnet and prefix length.
	Range *string `json:"range,omitempty"`
	// The route target IPV6 SLAAC address for this range. Does not include the prefix length.
	RouteTarget *string `json:"route_target,omitempty"`
}

// NewPostIpv6Range200Response instantiates a new PostIpv6Range200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostIpv6Range200Response() *PostIpv6Range200Response {
	this := PostIpv6Range200Response{}
	return &this
}

// NewPostIpv6Range200ResponseWithDefaults instantiates a new PostIpv6Range200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostIpv6Range200ResponseWithDefaults() *PostIpv6Range200Response {
	this := PostIpv6Range200Response{}
	return &this
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *PostIpv6Range200Response) GetRange() string {
	if o == nil || IsNil(o.Range) {
		var ret string
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIpv6Range200Response) GetRangeOk() (*string, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *PostIpv6Range200Response) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given string and assigns it to the Range field.
func (o *PostIpv6Range200Response) SetRange(v string) {
	o.Range = &v
}

// GetRouteTarget returns the RouteTarget field value if set, zero value otherwise.
func (o *PostIpv6Range200Response) GetRouteTarget() string {
	if o == nil || IsNil(o.RouteTarget) {
		var ret string
		return ret
	}
	return *o.RouteTarget
}

// GetRouteTargetOk returns a tuple with the RouteTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIpv6Range200Response) GetRouteTargetOk() (*string, bool) {
	if o == nil || IsNil(o.RouteTarget) {
		return nil, false
	}
	return o.RouteTarget, true
}

// HasRouteTarget returns a boolean if a field has been set.
func (o *PostIpv6Range200Response) HasRouteTarget() bool {
	if o != nil && !IsNil(o.RouteTarget) {
		return true
	}

	return false
}

// SetRouteTarget gets a reference to the given string and assigns it to the RouteTarget field.
func (o *PostIpv6Range200Response) SetRouteTarget(v string) {
	o.RouteTarget = &v
}

func (o PostIpv6Range200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostIpv6Range200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	if !IsNil(o.RouteTarget) {
		toSerialize["route_target"] = o.RouteTarget
	}
	return toSerialize, nil
}

type NullablePostIpv6Range200Response struct {
	value *PostIpv6Range200Response
	isSet bool
}

func (v NullablePostIpv6Range200Response) Get() *PostIpv6Range200Response {
	return v.value
}

func (v *NullablePostIpv6Range200Response) Set(val *PostIpv6Range200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostIpv6Range200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostIpv6Range200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostIpv6Range200Response(val *PostIpv6Range200Response) *NullablePostIpv6Range200Response {
	return &NullablePostIpv6Range200Response{value: val, isSet: true}
}

func (v NullablePostIpv6Range200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostIpv6Range200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


