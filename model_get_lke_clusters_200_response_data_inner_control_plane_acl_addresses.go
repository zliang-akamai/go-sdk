/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses{}

// GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses Supports keys `ipv4` and `ipv6`. Defaults to `{}`.
type GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses struct {
	// A list of individual ipv4 addresses or CIDRs to ALLOW. Defaults to `[]`.
	Ipv4 []string `json:"ipv4,omitempty"`
	// A list of individual ipv6 addresses or CIDRs to ALLOW. Defaults to `[]`.
	Ipv6 []string `json:"ipv6,omitempty"`
}

// NewGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses instantiates a new GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses() *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses {
	this := GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses{}
	return &this
}

// NewGetLkeClusters200ResponseDataInnerControlPlaneAclAddressesWithDefaults instantiates a new GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusters200ResponseDataInnerControlPlaneAclAddressesWithDefaults() *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses {
	this := GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) GetIpv4() []string {
	if o == nil || IsNil(o.Ipv4) {
		var ret []string
		return ret
	}
	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) GetIpv4Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given []string and assigns it to the Ipv4 field.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) SetIpv4(v []string) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) GetIpv6() []string {
	if o == nil || IsNil(o.Ipv6) {
		var ret []string
		return ret
	}
	return o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) GetIpv6Ok() ([]string, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given []string and assigns it to the Ipv6 field.
func (o *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) SetIpv6(v []string) {
	o.Ipv6 = v
}

func (o GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

type NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses struct {
	value *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses
	isSet bool
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) Get() *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses {
	return v.value
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) Set(val *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses(val *GetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) *NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses {
	return &NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses{value: val, isSet: true}
}

func (v NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusters200ResponseDataInnerControlPlaneAclAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


