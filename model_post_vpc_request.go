/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostVpcRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostVpcRequest{}

// PostVpcRequest struct for PostVpcRequest
type PostVpcRequest struct {
	// A list of subnets associated with the VPC.
	Subnets []GetVpcs200ResponseAllOfDataInnerSubnetsInner `json:"subnets,omitempty"`
	// The date-time of VPC creation.
	Created *time.Time `json:"created,omitempty"`
	// A written description to help distinguish the VPC.
	Description *string `json:"description,omitempty"`
	// The unique ID of the VPC.
	Id *int32 `json:"id,omitempty"`
	// The VPC's label, for display purposes only.  - Needs to be unique among the Account's VPCs. - Can only contain ASCII letters, numbers, and hyphens (`-`). You can't use two consecutive hyphens (`--`).
	Label string `json:"label"`
	// The Region for the VPC.
	Region string `json:"region"`
	// The date-time of the most recent VPC update.
	Updated NullableTime `json:"updated,omitempty"`
}

type _PostVpcRequest PostVpcRequest

// NewPostVpcRequest instantiates a new PostVpcRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostVpcRequest(label string, region string) *PostVpcRequest {
	this := PostVpcRequest{}
	var description string = ""
	this.Description = &description
	this.Label = label
	this.Region = region
	return &this
}

// NewPostVpcRequestWithDefaults instantiates a new PostVpcRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostVpcRequestWithDefaults() *PostVpcRequest {
	this := PostVpcRequest{}
	var description string = ""
	this.Description = &description
	return &this
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *PostVpcRequest) GetSubnets() []GetVpcs200ResponseAllOfDataInnerSubnetsInner {
	if o == nil || IsNil(o.Subnets) {
		var ret []GetVpcs200ResponseAllOfDataInnerSubnetsInner
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetSubnetsOk() ([]GetVpcs200ResponseAllOfDataInnerSubnetsInner, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *PostVpcRequest) HasSubnets() bool {
	if o != nil && !IsNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []GetVpcs200ResponseAllOfDataInnerSubnetsInner and assigns it to the Subnets field.
func (o *PostVpcRequest) SetSubnets(v []GetVpcs200ResponseAllOfDataInnerSubnetsInner) {
	o.Subnets = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PostVpcRequest) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PostVpcRequest) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PostVpcRequest) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PostVpcRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PostVpcRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PostVpcRequest) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostVpcRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostVpcRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PostVpcRequest) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value
func (o *PostVpcRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PostVpcRequest) SetLabel(v string) {
	o.Label = v
}

// GetRegion returns the Region field value
func (o *PostVpcRequest) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *PostVpcRequest) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *PostVpcRequest) SetRegion(v string) {
	o.Region = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostVpcRequest) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Updated.Get()
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostVpcRequest) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Updated.Get(), o.Updated.IsSet()
}

// HasUpdated returns a boolean if a field has been set.
func (o *PostVpcRequest) HasUpdated() bool {
	if o != nil && o.Updated.IsSet() {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given NullableTime and assigns it to the Updated field.
func (o *PostVpcRequest) SetUpdated(v time.Time) {
	o.Updated.Set(&v)
}
// SetUpdatedNil sets the value for Updated to be an explicit nil
func (o *PostVpcRequest) SetUpdatedNil() {
	o.Updated.Set(nil)
}

// UnsetUpdated ensures that no value is present for Updated, not even an explicit nil
func (o *PostVpcRequest) UnsetUpdated() {
	o.Updated.Unset()
}

func (o PostVpcRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostVpcRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["label"] = o.Label
	toSerialize["region"] = o.Region
	if o.Updated.IsSet() {
		toSerialize["updated"] = o.Updated.Get()
	}
	return toSerialize, nil
}

func (o *PostVpcRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostVpcRequest := _PostVpcRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostVpcRequest)

	if err != nil {
		return err
	}

	*o = PostVpcRequest(varPostVpcRequest)

	return err
}

type NullablePostVpcRequest struct {
	value *PostVpcRequest
	isSet bool
}

func (v NullablePostVpcRequest) Get() *PostVpcRequest {
	return v.value
}

func (v *NullablePostVpcRequest) Set(val *PostVpcRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostVpcRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostVpcRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostVpcRequest(val *PostVpcRequest) *NullablePostVpcRequest {
	return &NullablePostVpcRequest{value: val, isSet: true}
}

func (v NullablePostVpcRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostVpcRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


