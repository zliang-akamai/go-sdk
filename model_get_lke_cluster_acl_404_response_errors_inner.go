/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetLkeClusterAcl404ResponseErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLkeClusterAcl404ResponseErrorsInner{}

// GetLkeClusterAcl404ResponseErrorsInner struct for GetLkeClusterAcl404ResponseErrorsInner
type GetLkeClusterAcl404ResponseErrorsInner struct {
	// The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as null if the error is not specific to any single element of the request.
	Field *string `json:"field,omitempty"`
	// A string explaining that the cluster does not exist.
	Reason *string `json:"reason,omitempty"`
}

// NewGetLkeClusterAcl404ResponseErrorsInner instantiates a new GetLkeClusterAcl404ResponseErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLkeClusterAcl404ResponseErrorsInner() *GetLkeClusterAcl404ResponseErrorsInner {
	this := GetLkeClusterAcl404ResponseErrorsInner{}
	return &this
}

// NewGetLkeClusterAcl404ResponseErrorsInnerWithDefaults instantiates a new GetLkeClusterAcl404ResponseErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLkeClusterAcl404ResponseErrorsInnerWithDefaults() *GetLkeClusterAcl404ResponseErrorsInner {
	this := GetLkeClusterAcl404ResponseErrorsInner{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *GetLkeClusterAcl404ResponseErrorsInner) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterAcl404ResponseErrorsInner) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *GetLkeClusterAcl404ResponseErrorsInner) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *GetLkeClusterAcl404ResponseErrorsInner) SetField(v string) {
	o.Field = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *GetLkeClusterAcl404ResponseErrorsInner) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLkeClusterAcl404ResponseErrorsInner) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *GetLkeClusterAcl404ResponseErrorsInner) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *GetLkeClusterAcl404ResponseErrorsInner) SetReason(v string) {
	o.Reason = &v
}

func (o GetLkeClusterAcl404ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLkeClusterAcl404ResponseErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableGetLkeClusterAcl404ResponseErrorsInner struct {
	value *GetLkeClusterAcl404ResponseErrorsInner
	isSet bool
}

func (v NullableGetLkeClusterAcl404ResponseErrorsInner) Get() *GetLkeClusterAcl404ResponseErrorsInner {
	return v.value
}

func (v *NullableGetLkeClusterAcl404ResponseErrorsInner) Set(val *GetLkeClusterAcl404ResponseErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLkeClusterAcl404ResponseErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLkeClusterAcl404ResponseErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLkeClusterAcl404ResponseErrorsInner(val *GetLkeClusterAcl404ResponseErrorsInner) *NullableGetLkeClusterAcl404ResponseErrorsInner {
	return &NullableGetLkeClusterAcl404ResponseErrorsInner{value: val, isSet: true}
}

func (v NullableGetLkeClusterAcl404ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLkeClusterAcl404ResponseErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


