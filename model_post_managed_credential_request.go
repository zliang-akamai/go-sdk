/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PostManagedCredentialRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostManagedCredentialRequest{}

// PostManagedCredentialRequest struct for PostManagedCredentialRequest
type PostManagedCredentialRequest struct {
	// This Credential's unique ID.
	Id *int32 `json:"id,omitempty"`
	// The unique label for this Credential. This is for display purposes only.
	Label string `json:"label" validate:"regexp=[a-zA-Z0-9-_ \\\\.]{2,75}"`
	// The date this Credential was last decrypted by a member of Linode special forces.
	LastDecrypted *time.Time `json:"last_decrypted,omitempty"`
	// The password to use when accessing the Managed Service.
	Password string `json:"password"`
	// The username to use when accessing the Managed Service.
	Username *string `json:"username,omitempty"`
}

type _PostManagedCredentialRequest PostManagedCredentialRequest

// NewPostManagedCredentialRequest instantiates a new PostManagedCredentialRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostManagedCredentialRequest(label string, password string) *PostManagedCredentialRequest {
	this := PostManagedCredentialRequest{}
	this.Label = label
	this.Password = password
	return &this
}

// NewPostManagedCredentialRequestWithDefaults instantiates a new PostManagedCredentialRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostManagedCredentialRequestWithDefaults() *PostManagedCredentialRequest {
	this := PostManagedCredentialRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostManagedCredentialRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedCredentialRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostManagedCredentialRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PostManagedCredentialRequest) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value
func (o *PostManagedCredentialRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PostManagedCredentialRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PostManagedCredentialRequest) SetLabel(v string) {
	o.Label = v
}

// GetLastDecrypted returns the LastDecrypted field value if set, zero value otherwise.
func (o *PostManagedCredentialRequest) GetLastDecrypted() time.Time {
	if o == nil || IsNil(o.LastDecrypted) {
		var ret time.Time
		return ret
	}
	return *o.LastDecrypted
}

// GetLastDecryptedOk returns a tuple with the LastDecrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedCredentialRequest) GetLastDecryptedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastDecrypted) {
		return nil, false
	}
	return o.LastDecrypted, true
}

// HasLastDecrypted returns a boolean if a field has been set.
func (o *PostManagedCredentialRequest) HasLastDecrypted() bool {
	if o != nil && !IsNil(o.LastDecrypted) {
		return true
	}

	return false
}

// SetLastDecrypted gets a reference to the given time.Time and assigns it to the LastDecrypted field.
func (o *PostManagedCredentialRequest) SetLastDecrypted(v time.Time) {
	o.LastDecrypted = &v
}

// GetPassword returns the Password field value
func (o *PostManagedCredentialRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *PostManagedCredentialRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *PostManagedCredentialRequest) SetPassword(v string) {
	o.Password = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *PostManagedCredentialRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostManagedCredentialRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *PostManagedCredentialRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *PostManagedCredentialRequest) SetUsername(v string) {
	o.Username = &v
}

func (o PostManagedCredentialRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostManagedCredentialRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["label"] = o.Label
	if !IsNil(o.LastDecrypted) {
		toSerialize["last_decrypted"] = o.LastDecrypted
	}
	toSerialize["password"] = o.Password
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *PostManagedCredentialRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostManagedCredentialRequest := _PostManagedCredentialRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostManagedCredentialRequest)

	if err != nil {
		return err
	}

	*o = PostManagedCredentialRequest(varPostManagedCredentialRequest)

	return err
}

type NullablePostManagedCredentialRequest struct {
	value *PostManagedCredentialRequest
	isSet bool
}

func (v NullablePostManagedCredentialRequest) Get() *PostManagedCredentialRequest {
	return v.value
}

func (v *NullablePostManagedCredentialRequest) Set(val *PostManagedCredentialRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostManagedCredentialRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostManagedCredentialRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostManagedCredentialRequest(val *PostManagedCredentialRequest) *NullablePostManagedCredentialRequest {
	return &NullablePostManagedCredentialRequest{value: val, isSet: true}
}

func (v NullablePostManagedCredentialRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostManagedCredentialRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


