/*
Linode API

[Read the API documentation](https://techdocs.akamai.com/linode-api/reference/api).

API version: 4.189.2
Contact: support@linode.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PutVolumeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutVolumeRequest{}

// PutVolumeRequest struct for PutVolumeRequest
type PutVolumeRequest struct {
	// When this Volume was created.
	Created *time.Time `json:"created,omitempty"`
	// Displays if encryption is enabled on this volume.
	Encryption *string `json:"encryption,omitempty"`
	// The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.
	FilesystemPath *string `json:"filesystem_path,omitempty"`
	// The storage type of this Volume.
	HardwareType *string `json:"hardware_type,omitempty"`
	// The unique ID of this Volume.
	Id *int32 `json:"id,omitempty"`
	// The Volume's label is for display purposes only.
	Label *string `json:"label,omitempty" validate:"regexp=^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"`
	LinodeId interface{} `json:"linode_id,omitempty"`
	// If a Volume is attached to a specific Linode, the label of that Linode will be displayed here.
	LinodeLabel NullableString `json:"linode_label,omitempty"`
	// The unique ID of this Region.
	Region *string `json:"region,omitempty"`
	Size interface{} `json:"size,omitempty"`
	// The current status of the volume.  Can be one of:    - `creating`. The volume is being created and is not yet available for use.   - `active`. The volume is online and available for use.   - `resizing`. The volume is in the process of upgrading its current capacity.   - `key_rotating`. The volume is in the process of rotating encryption keys. Requests to resize, delete, or clone a volume fails during encryption key rotation.
	Status *string `json:"status,omitempty"`
	// An array of Tags applied to this object.  Tags are for organizational purposes only.
	Tags []string `json:"tags,omitempty"`
	// When this Volume was last updated.
	Updated *time.Time `json:"updated,omitempty"`
}

// NewPutVolumeRequest instantiates a new PutVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutVolumeRequest() *PutVolumeRequest {
	this := PutVolumeRequest{}
	return &this
}

// NewPutVolumeRequestWithDefaults instantiates a new PutVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutVolumeRequestWithDefaults() *PutVolumeRequest {
	this := PutVolumeRequest{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *PutVolumeRequest) SetCreated(v time.Time) {
	o.Created = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetEncryption() string {
	if o == nil || IsNil(o.Encryption) {
		var ret string
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetEncryptionOk() (*string, bool) {
	if o == nil || IsNil(o.Encryption) {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasEncryption() bool {
	if o != nil && !IsNil(o.Encryption) {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given string and assigns it to the Encryption field.
func (o *PutVolumeRequest) SetEncryption(v string) {
	o.Encryption = &v
}

// GetFilesystemPath returns the FilesystemPath field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetFilesystemPath() string {
	if o == nil || IsNil(o.FilesystemPath) {
		var ret string
		return ret
	}
	return *o.FilesystemPath
}

// GetFilesystemPathOk returns a tuple with the FilesystemPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetFilesystemPathOk() (*string, bool) {
	if o == nil || IsNil(o.FilesystemPath) {
		return nil, false
	}
	return o.FilesystemPath, true
}

// HasFilesystemPath returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasFilesystemPath() bool {
	if o != nil && !IsNil(o.FilesystemPath) {
		return true
	}

	return false
}

// SetFilesystemPath gets a reference to the given string and assigns it to the FilesystemPath field.
func (o *PutVolumeRequest) SetFilesystemPath(v string) {
	o.FilesystemPath = &v
}

// GetHardwareType returns the HardwareType field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetHardwareType() string {
	if o == nil || IsNil(o.HardwareType) {
		var ret string
		return ret
	}
	return *o.HardwareType
}

// GetHardwareTypeOk returns a tuple with the HardwareType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetHardwareTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareType) {
		return nil, false
	}
	return o.HardwareType, true
}

// HasHardwareType returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasHardwareType() bool {
	if o != nil && !IsNil(o.HardwareType) {
		return true
	}

	return false
}

// SetHardwareType gets a reference to the given string and assigns it to the HardwareType field.
func (o *PutVolumeRequest) SetHardwareType(v string) {
	o.HardwareType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PutVolumeRequest) SetId(v int32) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *PutVolumeRequest) SetLabel(v string) {
	o.Label = &v
}

// GetLinodeId returns the LinodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutVolumeRequest) GetLinodeId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.LinodeId
}

// GetLinodeIdOk returns a tuple with the LinodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutVolumeRequest) GetLinodeIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.LinodeId) {
		return nil, false
	}
	return &o.LinodeId, true
}

// HasLinodeId returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasLinodeId() bool {
	if o != nil && !IsNil(o.LinodeId) {
		return true
	}

	return false
}

// SetLinodeId gets a reference to the given interface{} and assigns it to the LinodeId field.
func (o *PutVolumeRequest) SetLinodeId(v interface{}) {
	o.LinodeId = v
}

// GetLinodeLabel returns the LinodeLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutVolumeRequest) GetLinodeLabel() string {
	if o == nil || IsNil(o.LinodeLabel.Get()) {
		var ret string
		return ret
	}
	return *o.LinodeLabel.Get()
}

// GetLinodeLabelOk returns a tuple with the LinodeLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutVolumeRequest) GetLinodeLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinodeLabel.Get(), o.LinodeLabel.IsSet()
}

// HasLinodeLabel returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasLinodeLabel() bool {
	if o != nil && o.LinodeLabel.IsSet() {
		return true
	}

	return false
}

// SetLinodeLabel gets a reference to the given NullableString and assigns it to the LinodeLabel field.
func (o *PutVolumeRequest) SetLinodeLabel(v string) {
	o.LinodeLabel.Set(&v)
}
// SetLinodeLabelNil sets the value for LinodeLabel to be an explicit nil
func (o *PutVolumeRequest) SetLinodeLabelNil() {
	o.LinodeLabel.Set(nil)
}

// UnsetLinodeLabel ensures that no value is present for LinodeLabel, not even an explicit nil
func (o *PutVolumeRequest) UnsetLinodeLabel() {
	o.LinodeLabel.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *PutVolumeRequest) SetRegion(v string) {
	o.Region = &v
}

// GetSize returns the Size field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutVolumeRequest) GetSize() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutVolumeRequest) GetSizeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return &o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given interface{} and assigns it to the Size field.
func (o *PutVolumeRequest) SetSize(v interface{}) {
	o.Size = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PutVolumeRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PutVolumeRequest) SetTags(v []string) {
	o.Tags = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *PutVolumeRequest) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutVolumeRequest) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *PutVolumeRequest) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *PutVolumeRequest) SetUpdated(v time.Time) {
	o.Updated = &v
}

func (o PutVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutVolumeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Encryption) {
		toSerialize["encryption"] = o.Encryption
	}
	if !IsNil(o.FilesystemPath) {
		toSerialize["filesystem_path"] = o.FilesystemPath
	}
	if !IsNil(o.HardwareType) {
		toSerialize["hardware_type"] = o.HardwareType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if o.LinodeId != nil {
		toSerialize["linode_id"] = o.LinodeId
	}
	if o.LinodeLabel.IsSet() {
		toSerialize["linode_label"] = o.LinodeLabel.Get()
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	return toSerialize, nil
}

type NullablePutVolumeRequest struct {
	value *PutVolumeRequest
	isSet bool
}

func (v NullablePutVolumeRequest) Get() *PutVolumeRequest {
	return v.value
}

func (v *NullablePutVolumeRequest) Set(val *PutVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutVolumeRequest(val *PutVolumeRequest) *NullablePutVolumeRequest {
	return &NullablePutVolumeRequest{value: val, isSet: true}
}

func (v NullablePutVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


